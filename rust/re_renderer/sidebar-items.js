window.SIDEBAR_ITEMS = {"fn":[["get_filesystem","Returns the recommended filesystem handle for the current platform."],["new_recommended_file_resolver","Returns the recommended `FileResolver` for the current platform/target."]],"macro":[["include_file","A macro to read the contents of a file on disk, and resolve #import clauses as required."]],"mod":[["config",""],["context",""],["debug_label",""],["depth_offset",""],["error_tracker","Special error handling datastructures for debug builds (never crash!)."],["file_resolver","This module implements one half of our cross-platform #import system."],["file_server",""],["file_system",""],["global_bindings",""],["importer",""],["line_strip_builder",""],["mesh",""],["point_cloud_builder",""],["renderer",""],["resource_managers","Resource managers are concerned with mapping (typically) higher level user data to their Gpu representation."],["size",""],["view_builder",""],["wgpu_buffer_types","Explicitly padded and/or aligned types following wgsl rules. See wgsl spec on alignment and size"],["wgpu_resources","Wgpu resource pools are concerned with handling low level gpu resources efficiently."]],"struct":[["Color32","This format is used for space-efficient color representation (32 bits)."],["DebugLabel","Label for resources. Optimized out in release builds."],["FileResolver","The `FileResolver` handles both resolving import clauses and doing the actual string interpolation."],["FileServer","A file server capable of watching filesystem events in the background and resolve #import clauses in files."],["ImportClause","A pre-parsed import clause, as in `#import <something>`."],["LineStripBuilder",""],["LineStripSeriesBuilder","Builder for a vector of line strips, making it easy to create [`crate::renderer::LineDrawData`]."],["PointCloudBatchBuilder",""],["PointCloudBuilder","Builder for point clouds, making it easy to create [`crate::renderer::PointCloudDrawData`]."],["RenderContext","Any resource involving wgpu rendering which can be re-used across different scenes. I.e. render pipelines, resource pools, etc."],["Rgba","0-1 linear space `RGBA` color with premultiplied alpha."],["SearchPath","Specifies where to look for imports when both absolute and relative resolution fail."],["Size","A size of something in either world-units, screen-units, or unsized."],["WgpuResourcePoolStatistics",""]],"trait":[["FileSystem","A very limited filesystem, just enough for our internal needs."]],"type":[["DepthOffset","Depth offset used to resolve z-fighting between 2d primitives."],["RecommendedFileResolver","The recommended `FileResolver` type for the current platform/target."]]};