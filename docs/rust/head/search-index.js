var searchIndex = JSON.parse('{\
"api_demo":{"doc":"Minimal examples of Rerun SDK usage.","t":[3,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Args","BoundingBox","Demo","ExtensionComponents","LogCleared","Points3D","Rects","Segmentation","TextLogs","Transforms3D","__clone_box","augment_args","augment_args_for_update","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","command","command_for_update","connect","demo","demo_3d_points","demo_bbox","demo_extension_components","demo_log_cleared","demo_rects","demo_segmentation","demo_text_logs","demo_transforms_3d","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equivalent","equivalent","fmt","fmt","from","from","from_arg_matches","from_arg_matches_mut","get_hash","group_id","hash","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","main","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","sim_time","to_owned","to_possible_value","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":["api_demo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If specified, connects and sends the logged data to a …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,4,0,4,4,4,4,4,4,4,4,11,11,4,11,4,11,4,11,4,11,4,11,4,11,4,4,11,11,11,11,0,0,0,0,0,0,0,0,4,11,4,11,4,11,4,11,4,4,4,4,11,4,11,11,11,4,11,4,4,11,4,11,4,11,4,11,0,4,11,4,11,4,11,4,11,0,4,4,4,11,4,11,4,11,4,11,4,11,4,11,11,11,4,4,11,4,11,4,11],"f":[0,0,0,0,0,0,0,0,0,0,[1],[2,2],[2,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[4,4],[[]],[[],2],[[],2],0,0,[5,6],[5,6],[5,6],[5,6],[5,6],[5,6],[5,6],[5,6],[7],[7],[7],[7],[[]],[[]],[7],[7],[[4,4],8],[[],8],[[],8],[[4,9],10],[[11,9],10],[[]],[[]],[12,[[14,[11,13]]]],[12,[[14,[11,13]]]],[[],15],[[],[[3,[16]]]],[4],[[],7],[[],7],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,18],[[]],[4,[[3,[19]]]],[[],14],[[],14],[[],14],[[],14],[[],20],[[],20],[[]],[[]],[[]],[[]],[[],3],[[],3],[[11,12],[[14,[13]]]],[[11,12],[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Private"],[3,"Command"],[4,"Option"],[4,"Demo"],[3,"Session"],[6,"Result"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Args"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[15,"u64"],[3,"Id"],[15,"f64"],[3,"TimePoint"],[3,"PossibleValue"],[3,"TypeId"]]},\
"objectron":{"doc":"Example of using the Rerun SDK to log the Objectron dataset…","tn":["AnnotationsPerFrame","ArFrame","Args","Bike","Book","Bottle","Camera","CerealBox","Chair","Cup","Laptop","Recording","RecordingInfo","Shoe","__clone_box","__clone_box","augment_args","augment_args_for_update","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","command","command_for_update","connect","data","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dir","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","fmt","fmt","fmt","frames","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_raw","group_id","index","info","init","init","init","init","init","into","into","into","into","into","log_ar_camera","log_ar_frame","log_baseline_objects","log_coordinate_space","log_feature_points","log_frame_annotations","log_video_frame","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","main","objectron","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parse_duration","path_annotations","path_ar_frames","per_frame_sleep","read_annotations","read_ar_frames","recording","run_forever","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","timepoint","timepoint","to_owned","to_owned","to_possible_value","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","AnnotatedKeyPoint","ArBlendShapeMap","ArCamera","ArFaceAnchor","ArFaceGeometry","ArFrame","ArLightEstimate","ArMeshAnchor","ArMeshData","ArMeshGeometry","ArPlaneAnchor","ArPlaneGeometry","ArPointCloud","AvCameraCalibrationData","AvDepthData","CmAccelerometerData","CmCalibratedMagneticField","CmDeviceMotion","CmGyroData","CmMagnetometerData","CmMotionManagerSnapshot","CmVector","Edge","FrameAnnotation","KeyPoint","NormalizedPoint2D","Object","ObjectAnnotation","Point3D","Sequence","Skeleton","Skeletons","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","acceleration","accelerometer_data","alignment","alignment","ambient_color_temperature","ambient_color_temperature","ambient_intensity","ambient_intensity","annotations","ar_blend_shape_map","ar_camera","ar_face_geometry","ar_light_estimate","ar_mesh_geometry","ar_plane_anchor","ar_plane_geometry","ar_point_cloud","attitude_quaternion","av_depth_data","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","blend_shapes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boundary_vertex_count","boundary_vertex_count","boundary_vertices","calibration_accuracy","calibration_accuracy","camera","camera","camera_calibration_data","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","category","category","center","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","classification","classification","classification","classification","classification_status","classification_status","classification_supported","classification_supported","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cm_calibrated_magnetic_field","cm_device_motion","confidence_radius","count","count","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth","depth_data","depth_data_accuracy","depth_data_accuracy","depth_data_filtered","depth_data_filtered","depth_data_map","depth_data_map","depth_data_map_height","depth_data_map_height","depth_data_map_original_maximum_value","depth_data_map_original_maximum_value","depth_data_map_original_minimum_value","depth_data_map_original_minimum_value","depth_data_map_raw_values","depth_data_map_raw_values","depth_data_map_width","depth_data_map_width","depth_data_quality","depth_data_quality","depth_data_timestamp","depth_data_timestamp","depth_data_type","depth_data_type","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","device_motion","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","entries","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","euler_angles","extent","extrinsic_matrix","face_anchor","faces","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_annotations","frame_id","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","geometry","geometry","geometry","gravity","gyro_data","hidden","id","id","identifier","identifier","identifier","identifier","identifier","image_resolution_height","image_resolution_height","image_resolution_width","image_resolution_width","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intrinsic_matrix","intrinsic_matrix_reference_dimension_height","intrinsic_matrix_reference_dimension_height","intrinsic_matrix_reference_dimension_width","intrinsic_matrix_reference_dimension_width","intrinsics","inverse_lens_distortion_lookup_values","is_tracked","is_tracked","keypoints","keypoints","keypoints","lens_distortion_center_x","lens_distortion_center_x","lens_distortion_center_y","lens_distortion_center_y","lens_distortion_lookup_values","light_estimate","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","magnetic_field","magnetic_field","magnetometer_data","mesh_anchor","method","method","motion_manager_snapshot","name","normals","object","object","object_id","objects","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pixel_size","pixel_size","plane_anchor","plane_center","plane_normal","point","point_2d","point_3d","primary_light_direction","primary_light_intensity","primary_light_intensity","projection_matrix","push_classification","raw_feature_points","reference_keypoint","rotation","rotation_rate","rotation_rate","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scale","set_alignment","set_calibration_accuracy","set_classification","set_classification_status","set_depth_data_accuracy","set_depth_data_quality","set_method","set_tracking_state","set_tracking_state_reason","set_type","sink","source","spherical_harmonics_coefficients","texture_coordinate_count","texture_coordinate_count","texture_coordinate_count","texture_coordinate_count","texture_coordinates","texture_coordinates","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tracking_state","tracking_state","tracking_state_reason","tracking_state_reason","transform","transform","transform","transform","translation","triangle_count","triangle_count","triangle_count","triangle_count","triangle_indices","triangle_indices","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","user_acceleration","vertex_count","vertex_count","vertex_count","vertex_count","vertices","vertices","vertices","view_matrix","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x","x","x","y","y","y","y","y","z","z","z","z","MapEntry","__clone_box","az","blend_shape_coefficient","blend_shape_coefficient","blend_shape_location","blend_shape_location","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clear","clone","clone_into","default","deref","deref_mut","downcast","drop","encoded_len","eq","fmt","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","EulerAngles","ExcessiveMotion","Initializing","InsufficientFeatures","Limited","None","Normal","Relocalizing","TrackingState","TrackingStateReason","Unavailable","UndefinedTrackingState","UndefinedTrackingStateReason","__clone_box","__clone_box","__clone_box","as_str_name","as_str_name","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","encoded_len","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_i32","from_i32","from_str_name","from_str_name","get_hash","get_hash","hash","hash","init","init","init","into","into","into","is_valid","is_valid","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","pitch","pitch","roll","roll","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","yaw","yaw","TextureCoordinate","Vertex","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clear","clear","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","u","u","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","v","v","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","x","x","y","y","z","z","DirectionVector","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clear","clone","clone_into","default","deref","deref_mut","downcast","drop","encoded_len","eq","fmt","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","x","x","y","y","z","z","Ceiling","Door","Face","Floor","MeshClassification","None","Seat","Table","Vertex","Wall","Window","__clone_box","__clone_box","__clone_box","as_str_name","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","encoded_len","encoded_len","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_i32","from_str_name","get_hash","hash","init","init","init","into","into","into","is_valid","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","vertex_indices","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","y","y","z","z","Alignment","Ceiling","Floor","Horizontal","Known","None","PlaneClassification","PlaneClassificationStatus","PlaneVector","Seat","Table","Unavailable","Undefined","Undetermined","Unknown","Vertical","Wall","__clone_box","__clone_box","__clone_box","__clone_box","as_str_name","as_str_name","as_str_name","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","encoded_len","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_i32","from_i32","from_i32","from_str_name","from_str_name","from_str_name","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","init","into","into","into","into","is_valid","is_valid","is_valid","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","y","y","z","z","TextureCoordinate","Vertex","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clear","clear","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","u","u","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","v","v","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","x","x","y","y","z","z","Point","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clear","clone","clone_into","default","deref","deref_mut","downcast","drop","encoded_len","eq","fmt","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","x","x","y","y","z","z","Absolute","Accuracy","High","Low","Quality","Relative","UndefinedAccuracy","UndefinedQuality","__clone_box","__clone_box","as_str_name","as_str_name","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","cmp","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_i32","from_i32","from_str_name","from_str_name","get_hash","get_hash","hash","hash","init","init","into","into","is_valid","is_valid","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","CalibrationAccuracy","High","Low","Medium","Uncalibrated","__clone_box","as_str_name","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","default","deref","deref_mut","downcast","drop","eq","equivalent","equivalent","fmt","from","from_i32","from_str_name","get_hash","hash","init","into","is_valid","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Quaternion","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clear","clone","clone_into","default","deref","deref_mut","downcast","drop","encoded_len","eq","fmt","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","w","w","wrapping_as","wrapping_cast_from","x","x","y","y","z","z","Annotation","Augmentation","BoundingBox","Mesh","Method","Skeleton","Type","UndefinedType","UnknownMethod","__clone_box","__clone_box","as_str_name","as_str_name","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","cmp","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_i32","from_i32","from_str_name","from_str_name","get_hash","get_hash","hash","hash","init","init","into","into","is_valid","is_valid","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":["objectronobjectron::objectron","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_blend_shape_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_camera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_face_geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_light_estimate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_mesh_geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_plane_anchorobjectron::objectron::ar_plane_geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::ar_point_cloud","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::av_depth_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::cm_calibrated_magnetic_field","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::cm_device_motion","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","objectron::objectron::object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Connects and sends the logged data to a remote Rerun …","","","","","","","","","","","","","","","","","","","","","","","","","","Limits the number of frames logged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Throttle logging by sleeping between each frame (e.g. <code>0.25</code>…","","","Specifies the recording to replay.","If set, this indefinitely log and relog the same scene in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains a list of blend shape entries wherein each item …","Information about the camera position and imaging …","Information about the pose, topology, and expression of a …","Container for a 3D mesh describing face topology.","Video image and face position tracking information.","Estimated scene lighting information associated with a …","A subdividision of the reconstructed, real-world scene …","Container object for mesh data of real-world scene …","Mesh geometry data stored in an array-based format.","Information about the position and orientation of a …","Container for a 3D mesh.","A collection of points in the world coordinate space.","Info about the camera characteristics used to capture …","Container for depth data information.","A sample of raw accelerometer data.","Represents calibrated magnetic field data and accuracy …","A sample of device motion data. Encapsulates measurements …","A sample of raw gyroscope data.","A sample of raw magnetometer data.","Contains most recent snapshots of device motion data","A 3D vector","The edge connecting two keypoints together","","","Projection of a 3D point on an image, and its metric depth.","","","The 3D point in the camera coordinate system, the scales …","The sequence protocol contains the annotation data for the …","The skeleton template for different objects (e.g. humans, …","The list of all the modeled skeletons in our library. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Raw acceleration measured by the accelerometer which …","Most recent samples of raw accelerometer data.","Returns the enum value of <code>alignment</code>, or the default if the …","The general orientation of the detected plane with respect …","Returns the value of <code>ambient_color_temperature</code>, or the …","The estimated color temperature, in degrees Kelvin, of …","Returns the value of <code>ambient_intensity</code>, or the default …","The estimated intensity, in lumens, of ambient light …","List of the annotated objects in this frame. Depending on …","Nested message and enum types in <code>ARBlendShapeMap</code>.","Nested message and enum types in <code>ARCamera</code>.","Nested message and enum types in <code>ARFaceGeometry</code>.","Nested message and enum types in <code>ARLightEstimate</code>.","Nested message and enum types in <code>ARMeshGeometry</code>.","Nested message and enum types in <code>ARPlaneAnchor</code>.","Nested message and enum types in <code>ARPlaneGeometry</code>.","Nested message and enum types in <code>ARPointCloud</code>.","The quaternion representing the device’s orientation …","Nested message and enum types in <code>AVDepthData</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A map of named coefficients representing the detected …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>boundary_vertex_count</code>, or the default …","The number of elements in the boundary_vertices buffer.","Each value in this buffer represents the position of a …","Returns the enum value of <code>calibration_accuracy</code>, or the …","Calibration accuracy of a magnetic field estimate.","Camera information associated with the frame.","Information about the camera transformation (in the world …","Associated calibration data for the depth_data_map.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes what category an object is. E.g. object class, …","The skeleton’s category (e.g. human, chair, hand.). …","The center point of the plane relative to its anchor …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>classification</code>, or the default …","Returns an iterator which yields the valid enum values …","A general characterization of what kind of real-world …","Classification for each face in the mesh.","Returns the enum value of <code>classification_status</code>, or the …","The current state of process for classifying the plane …","Returns the value of <code>classification_supported</code>, or the …","A Boolean value that indicates whether plane …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>CMCalibratedMagneticField</code>.","Nested message and enum types in <code>CMDeviceMotion</code>.","Sphere around the keypoint, indiciating annotator’s …","Returns the value of <code>count</code>, or the default value if <code>count</code> …","The number of points in the cloud.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The depth of the point in the camera coordinate system (in …","The depth data associated with the frame. Not all frames …","Returns the enum value of <code>depth_data_accuracy</code>, or the …","","Returns the value of <code>depth_data_filtered</code>, or the default …","Indicates whether the depth_data_map contains temporally …","Returns the value of <code>depth_data_map</code>, or the default value …","PNG representation of the grayscale depth data map. See …","Returns the value of <code>depth_data_map_height</code>, or the default …","The height of the depth buffer map.","Returns the value of <code>depth_data_map_original_maximum_value</code>…","","Returns the value of <code>depth_data_map_original_minimum_value</code>…","The original range of values expressed by the …","Returns the value of <code>depth_data_map_raw_values</code>, or the …","The row-major flattened array of the depth buffer map …","Returns the value of <code>depth_data_map_width</code>, or the default …","The width of the depth buffer map.","Returns the enum value of <code>depth_data_quality</code>, or the …","","Returns the value of <code>depth_data_timestamp</code>, or the default …","The depth data object timestamp associated with the frame. …","Returns the value of <code>depth_data_type</code>, or the default value …","Pixel format type of the original captured depth data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Most recent samples of device motion data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of edges connecting keypoints","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The estimated width and length of the detected plane.","3x4 row-major matrix relating a camera’s position and …","Face anchor information associated with the frame. Not all …","The faces of the mesh.","Vector of magnetic field estimate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of annotated data per each frame in sequence + frame …","Unique frame id, corresponds to images.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A coarse triangle mesh representing the topology of the …","A coarse triangle mesh representing the general shape of …","3D information about the mesh such as its shape and …","The gravity acceleration vector expressed in the device’…","Most recent samples of raw gyroscope data.","Indicates whether the keypoint is hidden or not.","Unique object id through a sequence. There might be …","","Returns the value of <code>identifier</code>, or the default value if …","Returns the value of <code>identifier</code>, or the default value if …","The ID of the plane.","A list of unique identifiers corresponding to detected …","The ID of the mesh.","Returns the value of <code>image_resolution_height</code>, or the …","","Returns the value of <code>image_resolution_width</code>, or the …","The width and height, in pixels, of the captured camera …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","3x3 row-major matrix relating a camera’s internal …","Returns the value of …","","Returns the value of …","The image dimensions to which the intrinsic_matrix values …","3x3 row-major matrix that converts between the 2D camera …","A list of floating-point values describing radial …","Returns the value of <code>is_tracked</code>, or the default value if …","Indicates whether the anchor’s transform is valid. …","List of all the key points associated with this object in …","Initialization value for all the keypoints in the skeleton …","For each objects, list all the annotated keypoints here. …","Returns the value of <code>lens_distortion_center_x</code>, or the …","The offset of the distortion center of the camera lens …","Returns the value of <code>lens_distortion_center_y</code>, or the …","","A list of floating-point values describing radial …","Light information associated with the frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the magnetic field vector filtered with respect to …","Raw magnetic field measured by the magnetometer.","Most recent samples of raw magnetometer data.","Set of mesh anchors containing the mesh data.","Returns the enum value of <code>method</code>, or the default if the …","","Snapshot of Core Motion CMMotionManager object containing …","The name of the keypoint (e.g. legs, head, etc.). Does not …","Rays that define which direction is outside for each face. …","Nested message and enum types in <code>Object</code>.","","Reference to the object identifier in ObjectInstance.","List of all the annotated 3D objects in this sequence in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>pixel_size</code>, or the default value if …","The size, in millimeters, of one image pixel.","Plane anchors associated with the frame. Not all frames …","Plane center and normal in camera frame.","","The list of detected points.","","","A vector indicating the orientation of the strongest …","Returns the value of <code>primary_light_intensity</code>, or the …","The estimated intensity, in lumens, of the strongest …","4x4 row-major transform matrix appropriate for rendering …","Appends the provided enum value to <code>classification</code>.","The current intermediate results of the scene analysis …","The origin keypoint in the object coordinate system. (i.e. …","3x3 row-major rotation matrix describing the orientation …","The rotation rate of the device adjusted by bias-removing …","Raw rotation rate as measured by the gyroscope.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","3x1 vector describing the scale of the rigid object’s …","Sets <code>alignment</code> to the provided enum value.","Sets <code>calibration_accuracy</code> to the provided enum value.","Sets <code>classification</code> to the provided enum value.","Sets <code>classification_status</code> to the provided enum value.","Sets <code>depth_data_accuracy</code> to the provided enum value.","Sets <code>depth_data_quality</code> to the provided enum value.","Sets <code>method</code> to the provided enum value.","Sets <code>tracking_state</code> to the provided enum value.","Sets <code>tracking_state_reason</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","keypoint id of the edge’s sink","keypoint id of the edge’s source","Data describing the estimated lighting environment in all …","Returns the value of <code>texture_coordinate_count</code>, or the …","Returns the value of <code>texture_coordinate_count</code>, or the …","The number of elements in the texture_coordinates list.","The number of elements in the texture_coordinates buffer.","","A buffer of texture coordinate values for each point in …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","Returns the value of <code>timestamp</code>, or the default value if …","The device motion data object timestamp. May differ from …","The accelerometer data object timestamp. May differ from …","The gyroscope data object timestamp. May differ from the …","The magnetometer data object timestamp. May differ from …","The timestamp for the frame.","The timestamp for the data.","The timestamp for the frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>tracking_state</code>, or the default …","","Returns the enum value of <code>tracking_state_reason</code>, or the …","","4x4 row-major matrix expressing position and orientation …","4x4 row-major matrix encoding the position, orientation, …","4x4 row-major matrix encoding the position, orientation, …","4x4 row-major matrix encoding the position, orientation, …","3x1 vector describing the translation of the rigid object…","Returns the value of <code>triangle_count</code>, or the default value …","Returns the value of <code>triangle_count</code>, or the default value …","The number of triangles described by the triangle_indices …","Each set of three indices forms a triangle, so the number …","Each integer value in this ordered list represents an …","Each integer value in this ordered list represents an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The acceleration that the user is giving to the device.","Returns the value of <code>vertex_count</code>, or the default value if …","Returns the value of <code>vertex_count</code>, or the default value if …","The number of elements in the vertices list.","The number of elements in the vertices buffer.","","A buffer of vertex positions for each point in the plane …","The vertices of the mesh.","4x4 row-major transform matrix appropriate for converting …","Visibiity of this annotation in a frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","The position of the keypoint in the local coordinate …","x-y position of the 2d keypoint in the image coordinate …","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","","","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","","","","","","Returns the value of <code>blend_shape_coefficient</code>, or the …","Indicates the current position of the feature relative to …","Returns the value of <code>blend_shape_location</code>, or the default …","Identifier for the specific facial feature.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The orientation of the camera, expressed as roll, pitch, …","The device is moving too fast for accurate image-based …","Not yet enough camera or motion data to provide tracking …","Not enough distinguishable features for image-based …","Tracking is available, but the quality of results is …","The current tracking state is not limited.","Camera position tracking is providing optimal results.","Tracking is limited due to a relocalization in progress.","The general quality of position tracking available when …","A possible diagnosis for limited position tracking quality …","Camera position tracking is not available.","","","","","","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>TrackingState</code>, or <code>None</code> if <code>value</code> is …","Converts an <code>i32</code> to a <code>TrackingStateReason</code>, or <code>None</code> if <code>value</code> …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>TrackingState</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>TrackingStateReason</code>.","","","","","","","","","","","","","","","Returns the value of <code>pitch</code>, or the default value if <code>pitch</code> …","","Returns the value of <code>roll</code>, or the default value if <code>roll</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>yaw</code>, or the default value if <code>yaw</code> is …","","Each texture coordinate represents UV texture coordinates …","Each vertex represents a 3D point in the face mesh, in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>u</code>, or the default value if <code>u</code> is unset.","","","","","","","","Returns the value of <code>v</code>, or the default value if <code>v</code> is unset.","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","","","","","Type of objects","","","","","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>MeshClassification</code>, or <code>None</code> if <code>value</code> …","Creates an enum from field names used in the ProtoBuf …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>MeshClassification</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","/ Indices of vertices defining the face from correspondent …","","","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","","","","The plane is perpendicular to gravity.","The classfication process for the plane anchor has …","","","The classification status for the plane.","Wrapper for a 3D point / vector within the plane. See …","","","No classication information can be provided (set on error …","","The classification process has not completed.","The classfication process for the plane anchor has …","The plane is parallel to gravity.","","","","","","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Alignment</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>PlaneClassification</code>, or <code>None</code> if <code>value</code> …","Converts an <code>i32</code> to a <code>PlaneClassificationStatus</code>, or <code>None</code> if …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Alignment</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>PlaneClassification</code>.","Returns <code>true</code> if <code>value</code> is a variant of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","Each texture coordinate represents UV texture coordinates …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>u</code>, or the default value if <code>u</code> is unset.","","","","","","","","Returns the value of <code>v</code>, or the default value if <code>v</code> is unset.","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","Values in the depth map are absolutely accurate in the …","Indicates the general accuracy of the depth_data_map.","","","Quality of the depth_data_map.","Values in the depth map are usable for …","","","","","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Accuracy</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>Quality</code>, or <code>None</code> if <code>value</code> is not a …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Accuracy</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Quality</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the calibration accuracy of a magnetic field …","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>CalibrationAccuracy</code>, or <code>None</code> if <code>value</code> …","Creates an enum from field names used in the ProtoBuf …","","","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>CalibrationAccuracy</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the value of <code>w</code>, or the default value if <code>w</code> is unset.","","","","Returns the value of <code>x</code>, or the default value if <code>x</code> is unset.","","Returns the value of <code>y</code>, or the default value if <code>y</code> is unset.","","Returns the value of <code>z</code>, or the default value if <code>z</code> is unset.","","Created by data annotation.","Created by data augmentation.","","","Enum to reflect how this object is created.","","","","","","","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","Converts an <code>i32</code> to a <code>Method</code>, or <code>None</code> if <code>value</code> is not a …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Method</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,4,4,4,4,4,4,4,4,0,0,4,4,5,9,9,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,4,5,4,5,9,9,9,17,17,10,4,9,5,17,10,4,9,5,17,17,10,4,9,5,17,10,4,9,5,4,9,5,9,17,10,10,4,9,5,9,9,17,9,17,4,17,10,4,9,5,17,10,4,9,5,0,0,0,0,0,0,0,17,10,4,9,5,17,10,4,9,5,0,0,17,10,4,9,5,17,10,4,9,5,0,5,5,9,0,0,9,9,17,10,4,9,5,17,10,4,9,5,0,17,4,5,4,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,9,9,4,17,10,4,9,5,17,10,4,9,5,17,10,4,9,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,56,59,35,35,37,37,37,37,26,0,0,0,0,0,0,0,0,55,0,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,53,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,38,38,38,40,40,16,26,50,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,63,65,35,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,35,43,35,43,35,35,35,35,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,0,0,62,25,25,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,67,16,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,16,16,50,50,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,59,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,65,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,52,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,21,35,49,16,43,40,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,30,26,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,53,35,60,55,59,62,63,69,35,60,35,25,60,21,21,21,21,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,49,49,49,49,21,49,53,53,63,65,70,49,49,49,49,49,16,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,55,58,59,61,63,63,16,62,43,0,66,70,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,49,16,26,26,25,69,69,37,37,37,21,43,16,65,63,55,57,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,63,35,40,35,35,50,50,63,21,21,63,64,64,37,51,38,51,38,51,38,55,56,57,58,16,61,55,56,57,58,16,61,26,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,21,21,21,21,21,53,35,60,63,51,38,51,38,51,38,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,63,63,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,55,51,38,51,38,51,38,43,21,70,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,49,50,37,21,51,52,53,38,35,25,54,40,55,56,57,58,59,16,43,60,61,62,63,64,65,66,67,68,69,70,26,30,54,54,62,67,68,54,54,62,67,68,54,54,62,68,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,77,77,77,76,77,76,77,0,0,76,76,77,80,76,77,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,80,76,77,80,76,77,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,80,76,77,76,76,77,77,80,76,77,80,76,77,76,77,76,77,76,77,76,77,80,76,77,80,76,77,76,77,80,76,77,80,76,77,80,76,77,80,76,77,76,77,80,80,80,80,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,76,77,80,80,0,0,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,83,84,84,84,83,84,83,84,83,84,84,84,83,84,83,84,83,84,83,83,83,83,83,83,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,75,75,0,75,0,75,75,75,0,75,75,86,87,75,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,86,87,75,86,87,75,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,86,87,75,75,75,86,87,75,86,87,75,75,75,75,75,86,87,75,86,87,75,75,86,87,75,86,87,75,86,87,75,86,87,75,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,86,87,75,87,86,87,75,86,87,75,86,87,75,86,86,86,86,86,86,0,42,42,36,47,42,0,0,0,42,42,47,36,47,47,36,42,88,36,42,47,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,88,36,42,47,88,36,42,47,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,88,36,42,47,36,36,42,42,47,47,88,36,42,47,88,36,42,47,36,42,47,36,42,47,36,42,47,36,42,47,88,36,42,47,88,36,42,47,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,36,42,47,88,88,88,88,88,88,0,0,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,90,90,89,90,89,90,89,90,90,90,89,90,89,90,89,90,89,89,89,89,89,89,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,71,0,73,73,0,71,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,71,73,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,71,73,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,74,74,78,78,0,78,0,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,78,74,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74,78,74],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[2,2],[2,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[4,4],[5,5],[[]],[[]],[[],2],[[],2],0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[[4,7],8],[[9,7],8],[[5,7],8],0,[[]],[[],10],[[]],[[]],[[]],[[]],[11,[[13,[9,12]]]],[11,[[13,[9,12]]]],[[14,6,15,16],17],[[],[[3,[18]]]],0,[4,[[19,[5]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[20,15,21],19],[[20,10,17],19],[20,19],[[20,[23,[22]],24],19],[[20,15,25],19],[[20,15,26],19],[[20,17],19],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[],19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[13,[27,28]]]],0,0,0,[29,[[19,[30]]]],[29,31],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,32],15],0,[[]],[[]],[4,[[3,[33]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[9,11],[[13,[12]]]],[[9,11],[[13,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[35,36],0,[37,32],0,[37,32],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,39],0,0,[40,41],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[35,42],[43,[[46,[[45,[[44,[39]]]]]]]],0,0,[35,47],0,[35,48],0,[49],[50],[37],[21],[51],[52],[53],[38],[35],[25],[54],[40],[55],[56],[57],[58],[59],[16],[43],[60],[61],[62],[63],[64],[65],[66],[67],[68],[69],[70],[26],[30],[49,49],[50,50],[37,37],[21,21],[51,51],[52,52],[53,53],[38,38],[35,35],[25,25],[54,54],[40,40],[55,55],[56,56],[57,57],[58,58],[59,59],[16,16],[43,43],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[26,26],[30,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[25,39],0,[[],49],[[],50],[[],37],[[],21],[[],51],[[],52],[[],53],[[],38],[[],35],[[],25],[[],54],[[],40],[[],55],[[],56],[[],57],[[],58],[[],59],[[],16],[[],43],[[],60],[[],61],[[],62],[[],63],[[],64],[[],65],[[],66],[[],67],[[],68],[[],69],[[],70],[[],26],[[],30],0,0,[50,71],0,[50,48],0,[50],0,[50,39],0,[50,72],0,[50,72],0,[50],0,[50,39],0,[50,73],0,[16,32],0,[50,24],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[49,6],[50,6],[37,6],[21,6],[51,6],[52,6],[53,6],[38,6],[35,6],[25,6],[54,6],[40,6],[55,6],[56,6],[57,6],[58,6],[59,6],[16,6],[43,6],[60,6],[61,6],[62,6],[63,6],[64,6],[65,6],[66,6],[67,6],[68,6],[69,6],[70,6],[26,6],[30,6],0,[[49,49],48],[[50,50],48],[[37,37],48],[[21,21],48],[[51,51],48],[[52,52],48],[[53,53],48],[[38,38],48],[[35,35],48],[[25,25],48],[[54,54],48],[[40,40],48],[[55,55],48],[[56,56],48],[[57,57],48],[[58,58],48],[[59,59],48],[[16,16],48],[[43,43],48],[[60,60],48],[[61,61],48],[[62,62],48],[[63,63],48],[[64,64],48],[[65,65],48],[[66,66],48],[[67,67],48],[[68,68],48],[[69,69],48],[[70,70],48],[[26,26],48],[[30,30],48],0,0,0,0,0,0,[[49,7],8],[[50,7],8],[[37,7],8],[[21,7],8],[[51,7],8],[[52,7],8],[[53,7],8],[[38,7],8],[[35,7],8],[[25,7],8],[[54,7],8],[[40,7],8],[[55,7],8],[[56,7],8],[[57,7],8],[[58,7],8],[[59,7],8],[[16,7],8],[[43,7],8],[[60,7],8],[[61,7],8],[[62,7],8],[[63,7],8],[[64,7],8],[[65,7],8],[[66,7],8],[[67,7],8],[[68,7],8],[[69,7],8],[[70,7],8],[[26,7],8],[[30,7],8],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[35,24],[60,24],0,0,0,[21,39],0,[21,39],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[49,72],0,[49,72],0,0,0,[53,48],0,0,0,0,[49,72],0,[49,72],0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[63,74],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,72],0,0,0,0,0,0,0,0,[37,72],0,0,[[43,75]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[35,36]],[[40,41]],[[35,42]],[[35,47]],[[50,71]],[[50,73]],[[63,74]],[[21,76]],[[21,77]],[[63,78]],0,0,0,[51,39],[38,39],0,0,0,0,[55,32],[56,32],[57,32],[58,32],[16,32],[61,32],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,76],0,[21,77],0,0,0,0,0,0,[51,39],[38,39],0,0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[63,78],0,[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[51,39],[38,39],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,32],0,0,0,0,[54,32],0,0,0,0,[54,32],0,0,0,0,[1],[[]],[79,72],0,[79,24],0,[[]],[[]],[[]],[[],3],[[],3],[79],[79,79],[[]],[[],79],[6],[6],[[]],[6],[79,6],[[79,79],48],[[79,7],8],[[]],[[],6],[[]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],34],[[]],[[]],[[],3],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[76,24],[77,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[80],[80,80],[76,76],[77,77],[[]],[[]],[[]],[[76,76],81],[[77,77],81],[[],80],[[],76],[[],77],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[6],[6],[6],[80,6],[[80,80],48],[[76,76],48],[[77,77],48],[[],48],[[],48],[[],48],[[],48],[[80,7],8],[[76,7],8],[[77,7],8],[[]],[[]],[[]],[39,[[3,[76]]]],[39,[[3,[77]]]],[24,[[3,[76]]]],[24,[[3,[77]]]],[[],82],[[],82],[76],[77],[[],6],[[],6],[[],6],[[]],[[]],[[]],[39,48],[39,48],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[76,76],[[3,[81]]]],[[77,77],[[3,[81]]]],[80,72],0,[80,72],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,72],0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[83],[84],[83,83],[84,84],[[]],[[]],[[],83],[[],84],[6],[6],[6],[6],[[]],[[]],[6],[6],[83,6],[84,6],[[83,83],48],[[84,84],48],[[83,7],8],[[84,7],8],[[]],[[]],[[],6],[[],6],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[84,72],0,[[]],[[]],[[]],[[]],[[],3],[[],3],[84,72],0,[[]],[[]],[[]],[[]],[[]],[[]],[83,72],0,[83,72],0,[83,72],0,0,[1],[[]],[[]],[[]],[[]],[[],3],[[],3],[85],[85,85],[[]],[[],85],[6],[6],[[]],[6],[85,6],[[85,85],48],[[85,7],8],[[]],[[],6],[[]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],34],[[]],[[]],[[],3],[[]],[[]],[[]],[85,72],0,[85,72],0,[85,72],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[75,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[86],[87],[86,86],[87,87],[75,75],[[]],[[]],[[]],[[75,75],81],[[],86],[[],87],[[],75],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[6],[6],[6],[86,6],[87,6],[[86,86],48],[[87,87],48],[[75,75],48],[[],48],[[],48],[[86,7],8],[[87,7],8],[[75,7],8],[[]],[[]],[[]],[39,[[3,[75]]]],[24,[[3,[75]]]],[[],82],[75],[[],6],[[],6],[[],6],[[]],[[]],[[]],[39,48],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[75,75],[[3,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[86,72],0,[86,72],0,[86,72],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[36,24],[42,24],[47,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[88],[88,88],[36,36],[42,42],[47,47],[[]],[[]],[[]],[[]],[[36,36],81],[[42,42],81],[[47,47],81],[[],88],[[],36],[[],42],[[],47],[6],[6],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[88,6],[[88,88],48],[[36,36],48],[[42,42],48],[[47,47],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[88,7],8],[[36,7],8],[[42,7],8],[[47,7],8],[[]],[[]],[[]],[[]],[39,[[3,[36]]]],[39,[[3,[42]]]],[39,[[3,[47]]]],[24,[[3,[36]]]],[24,[[3,[42]]]],[24,[[3,[47]]]],[[],82],[[],82],[[],82],[36],[42],[47],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[39,48],[39,48],[39,48],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,36],[[3,[81]]]],[[42,42],[[3,[81]]]],[[47,47],[[3,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,72],0,[88,72],0,[88,72],0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[89],[90],[89,89],[90,90],[[]],[[]],[[],89],[[],90],[6],[6],[6],[6],[[]],[[]],[6],[6],[89,6],[90,6],[[89,89],48],[[90,90],48],[[89,7],8],[[90,7],8],[[]],[[]],[[],6],[[],6],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[90,72],0,[[]],[[]],[[]],[[]],[[],3],[[],3],[90,72],0,[[]],[[]],[[]],[[]],[[]],[[]],[89,72],0,[89,72],0,[89,72],0,0,[1],[[]],[[]],[[]],[[]],[[],3],[[],3],[91],[91,91],[[]],[[],91],[6],[6],[[]],[6],[91,6],[[91,91],48],[[91,7],8],[[]],[[],6],[[]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],34],[[]],[[]],[[],3],[[]],[[]],[[]],[91,72],0,[91,72],0,[91,72],0,0,0,0,0,0,0,0,0,[1],[1],[71,24],[73,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[71,71],[73,73],[[]],[[]],[[71,71],81],[[73,73],81],[[],71],[[],73],[6],[6],[6],[6],[[]],[[]],[6],[6],[[71,71],48],[[73,73],48],[[],48],[[],48],[[],48],[[],48],[[71,7],8],[[73,7],8],[[]],[[]],[39,[[3,[71]]]],[39,[[3,[73]]]],[24,[[3,[71]]]],[24,[[3,[73]]]],[[],82],[[],82],[71],[73],[[],6],[[],6],[[]],[[]],[39,48],[39,48],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[71,71],[[3,[81]]]],[[73,73],[[3,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[41,24],[[]],[[]],[[]],[[]],[[],3],[[],3],[41,41],[[]],[[41,41],81],[[],41],[6],[6],[[]],[6],[[41,41],48],[[],48],[[],48],[[41,7],8],[[]],[39,[[3,[41]]]],[24,[[3,[41]]]],[[],82],[41],[[],6],[[]],[39,48],[[],3],[[]],[[]],[[]],[[41,41],[[3,[81]]]],[[]],[[]],[[]],[[],13],[[],13],[[],34],[[]],[[]],[[],3],[[]],[[]],[[]],0,[1],[[]],[[]],[[]],[[]],[[],3],[[],3],[92],[92,92],[[]],[[],92],[6],[6],[[]],[6],[92,6],[[92,92],48],[[92,7],8],[[]],[[],6],[[]],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],34],[[]],[[]],[[],3],[[]],[92,32],0,[[]],[[]],[92,32],0,[92,32],0,[92,32],0,0,0,0,0,0,0,0,0,0,[1],[1],[78,24],[74,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[78,78],[74,74],[[]],[[]],[[78,78],81],[[74,74],81],[[],78],[[],74],[6],[6],[6],[6],[[]],[[]],[6],[6],[[78,78],48],[[74,74],48],[[],48],[[],48],[[],48],[[],48],[[78,7],8],[[74,7],8],[[]],[[]],[39,[[3,[78]]]],[39,[[3,[74]]]],[24,[[3,[78]]]],[24,[[3,[74]]]],[[],82],[[],82],[78],[74],[[],6],[[],6],[[]],[[]],[39,48],[39,48],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[78,78],[[3,[81]]]],[[74,74],[[3,[81]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],34],[[],34],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Private"],[3,"Command"],[4,"Option"],[4,"Recording"],[3,"RecordingInfo"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Args"],[3,"AnnotationsPerFrame"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"PathBuf"],[3,"TimePoint"],[3,"ArFrame"],[3,"ArFrame"],[3,"Id"],[6,"Result"],[3,"Session"],[3,"ArCamera"],[3,"EntityPath"],[8,"Into"],[15,"str"],[3,"ArPointCloud"],[3,"FrameAnnotation"],[3,"Duration"],[3,"ParseFloatError"],[3,"Path"],[3,"Sequence"],[8,"Iterator"],[15,"f64"],[3,"PossibleValue"],[3,"TypeId"],[3,"ArPlaneAnchor"],[4,"Alignment"],[3,"ArLightEstimate"],[3,"ArPlaneGeometry"],[15,"i32"],[3,"CmCalibratedMagneticField"],[4,"CalibrationAccuracy"],[4,"PlaneClassification"],[3,"ArMeshGeometry"],[3,"Iter"],[3,"Cloned"],[3,"FilterMap"],[4,"PlaneClassificationStatus"],[15,"bool"],[3,"AvCameraCalibrationData"],[3,"AvDepthData"],[3,"ArFaceGeometry"],[3,"ArBlendShapeMap"],[3,"ArFaceAnchor"],[3,"CmVector"],[3,"CmDeviceMotion"],[3,"CmAccelerometerData"],[3,"CmGyroData"],[3,"CmMagnetometerData"],[3,"CmMotionManagerSnapshot"],[3,"ArMeshAnchor"],[3,"ArMeshData"],[3,"KeyPoint"],[3,"Object"],[3,"Edge"],[3,"Skeleton"],[3,"Skeletons"],[3,"NormalizedPoint2D"],[3,"Point3D"],[3,"AnnotatedKeyPoint"],[3,"ObjectAnnotation"],[4,"Accuracy"],[15,"f32"],[4,"Quality"],[4,"Method"],[4,"MeshClassification"],[4,"TrackingState"],[4,"TrackingStateReason"],[4,"Type"],[3,"MapEntry"],[3,"EulerAngles"],[4,"Ordering"],[15,"u64"],[3,"Vertex"],[3,"TextureCoordinate"],[3,"DirectionVector"],[3,"Vertex"],[3,"Face"],[3,"PlaneVector"],[3,"Vertex"],[3,"TextureCoordinate"],[3,"Point"],[3,"Quaternion"]]},\
"raw_mesh":{"doc":"This example demonstrates how to use the Rerun Rust SDK to …","t":[3,7,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,5,12,5,5,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Args","GLOBAL","GltfNode","GltfPrimitive","GltfTransform","albedo_factor","augment_args","augment_args_for_update","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","children","colors","command","command_for_update","connect","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_gltf","group_id","indices","init","init","init","init","into","into","into","into","load_gltf","log_coordinate_space","log_node","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","main","name","node_name","node_primitives","normals","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","positions","primitives","r","s","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scene_path","t","texcoords","transform","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from"],"q":["raw_mesh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If specified, connects and sends the logged data to a …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Log a glTF node with Rerun.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies the path of the glTF scene to load.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,22,4,4,11,22,23,4,11,22,23,4,11,22,23,4,11,22,23,4,11,22,23,4,11,22,23,4,11,22,4,4,4,11,22,23,4,11,22,23,4,11,22,23,4,11,22,23,4,4,11,22,23,4,4,4,11,4,22,11,22,23,4,11,22,23,4,0,0,0,11,22,23,4,11,22,23,4,0,11,0,0,22,11,22,23,4,11,22,23,4,22,11,23,23,11,22,23,4,11,22,23,4,4,23,22,11,11,22,23,4,11,22,23,4,11,22,23,4,11,22,23,4,11,22,23,4,11,22,23,4,4,4,11,22,23,4,11,22,23,4,11,22,23,4],"f":[0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[[],1],[[],1],0,[3],[3],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[3],[3],[3],[3],[[4,5],6],[[]],[[]],[[]],[[]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[10,11],[[],[[2,[12]]]],0,[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[13,14],[[15,[17,[16]],18],19],[[15,11],19],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],19],0,[10,20],[10,14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[4,7],[[9,[8]]]],[[4,7],[[9,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Command"],[4,"Option"],[15,"usize"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Node"],[3,"GltfNode"],[3,"Id"],[3,"Document"],[8,"Iterator"],[3,"Session"],[3,"EntityPath"],[8,"Into"],[15,"str"],[6,"Result"],[3,"String"],[3,"TypeId"],[3,"GltfPrimitive"],[3,"GltfTransform"]]},\
"re_analytics":{"doc":"Rerun’s analytics SDK.","t":[3,4,13,13,13,17,3,4,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,12,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,0,12,11,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,17,13,13,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,5,11,11,11,11,11,3,4,13,13,13,12,12,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,13,13,3,4,13,5,11,11,11,11,11,11,11,11,11,11,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,13,13,13,13,17,3,3,4,3,3,13,4,18,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Analytics","AnalyticsError","Append","Bool","Config","DISCLAIMER","Event","EventKind","Float","Integer","Pipeline","Property","Sink","String","Update","append","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cli","clone","clone","clone","clone_into","clone_into","clone_into","config","config","config_native","data_source_opened","default_append_props","default_append_props_mut","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","equivalent","event_id","events","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","hashed","init","init","init","init","init","into","into","into","into","into","kind","name","new","pipeline","pipeline_native","props","provide","record","serialize","serialize","serialize","sink_native","source","time_utc","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update","update_metadata","viewer_started","with_prop","Analytics","CliError","Config","DETAILS","Io","Serde","borrow","borrow_mut","clear","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","init","into","opt","print_config","print_details","provide","set","source","to_string","try_from","try_into","type_id","Config","ConfigError","Io","Serde","UnknownLocation","analytics_enabled","analytics_id","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","config_dir","config_file","config_file_path","data_dir","data_dir_path","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","fmt","fmt","from","from","from","from","init","init","into","into","is_first_run","is_first_run","load","metadata","project_dirs","provide","save","serialize","session_id","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Http","Io","Pipeline","PipelineError","Serde","append_event","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","event_tx","flush_events","flush_pending_events","fmt","fmt","fmt","from","from","from","from","from","init","init","into","into","new","provide","realtime_pipeline","record","source","to_string","try_from","try_from","try_into","try_into","try_send_event","type_id","type_id","Capture","Http","Identify","Io","PUBLIC_POSTHOG_PROJECT_KEY","PostHogBatch","PostHogCaptureEvent","PostHogEvent","PostHogIdentifyEvent","PostHogSink","Serde","SinkError","URL","api_key","batch","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone_into","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distinct_id","distinct_id","drop","drop","drop","drop","drop","drop","event","event","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_event","from_events","init","init","init","init","init","init","init","into","into","into","into","into","into","properties","properties","provide","send","serialize","serialize","serialize","serialize","set","source","timestamp","timestamp","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["re_analytics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_analytics::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_analytics::config_native","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_analytics::pipeline_native","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_analytics::sink_native","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Append a new event to the time series associated with this …","","","","","","","","","","","","Update the permanent state associated with this analytics …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All of our telemetry events are defined in this one file, …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns a new string property that is a hex representation …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","<code>None</code> if analytics are disabled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an <code>Event::Update</code> with basic system information: …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The path of the config file.","","The directory where pending data is stored.","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Is this the first time the user runs the app?","","","","","","","A unique ID for this session.","","","","","","","","","","","","An eventual, at-least-once(-ish) event pipeline, backed by …","","","Appends the <code>event</code> to the active <code>session_file</code>.","","","","","","","","","","","","Sends all events currently buffered in the <code>session_file</code> …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Our public entrypoint; this will be resolved into an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,5,14,0,0,0,5,5,14,0,14,5,4,3,6,4,3,5,14,6,4,3,5,14,0,4,3,5,4,3,5,6,6,0,3,6,6,6,4,3,5,14,6,4,3,5,14,4,3,5,6,4,3,5,14,4,4,6,0,4,3,5,14,14,6,4,3,5,5,5,5,5,14,14,14,14,5,6,4,3,5,14,6,4,3,5,14,3,3,6,6,0,3,14,6,4,3,5,0,14,3,4,3,5,14,6,4,3,5,14,6,4,3,5,14,6,4,3,5,14,3,3,3,3,28,0,28,0,28,28,28,28,0,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,28,0,28,28,28,28,28,0,0,18,18,18,7,7,18,7,18,7,7,7,7,7,7,7,7,18,7,18,7,7,18,7,18,18,7,18,18,18,7,18,7,18,7,7,7,7,7,7,18,7,7,7,18,7,18,18,7,18,7,18,7,19,19,0,0,19,0,19,36,19,36,19,36,19,36,19,36,36,0,0,19,19,36,19,19,19,19,36,19,36,19,36,36,19,0,36,19,19,19,36,19,36,0,19,36,40,20,40,20,0,0,0,0,0,0,20,0,34,43,43,20,34,40,41,42,43,20,34,40,41,42,43,34,34,34,34,20,34,40,41,42,43,20,34,40,41,42,43,41,42,20,34,40,41,42,43,41,42,20,20,34,40,41,42,43,20,20,20,20,34,40,41,42,43,40,43,20,34,34,40,41,42,43,20,34,40,41,42,43,41,42,20,34,40,41,42,43,42,20,41,42,34,20,20,34,40,41,42,43,20,34,40,41,42,43,20,34,40,41,42,43],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,4],[3,3],[5,5],[[]],[[]],[[]],[6,7],0,0,[[],3],0,[6,8],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[],[[10,[4]]]],[[],[[10,[3]]]],[[],[[10,[5]]]],[9],[9],[9],[9],[9],[[4,4],11],[[],11],0,0,[[4,12],13],[[3,12],13],[[5,12],13],[[14,12],13],[[14,12],13],[[]],[[]],[[]],[15,5],[16,5],[17,5],[11,5],[[]],[[]],[18,14],[19,14],[20,14],[5,5],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],0,0,[21,[[10,[6,14]]]],0,0,0,[22],[[6,3]],[4,10],[3,10],[5,10],0,[14,[[24,[23]]]],0,[[]],[[]],[[]],[[],15],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],25],[[],25],[[],25],[[],25],[[],25],[[[2,[1]]],3],[26,3],[[],3],[[3,[2,[1]],[27,[5]]],3],0,0,0,0,0,0,[[]],[[]],[[],[[10,[28]]]],[9],[9],[9],[[28,12],13],[[28,12],13],[29,28],[18,28],[14,28],[30,28],[[]],[[],9],[[]],[11,[[10,[28]]]],[[],[[10,[28]]]],[[]],[22],[26,[[10,[28]]]],[28,[[24,[23]]]],[[],15],[[],10],[[],10],[[],25],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[7,7],[[]],[7,31],[7,31],0,[7,31],0,[9],[9],[9],[9],[[],[[10,[7]]]],[9],[9],[[18,12],13],[[18,12],13],[[7,12],13],[29,18],[[]],[30,18],[[]],[[],9],[[],9],[[]],[[]],[7,11],0,[[],[[10,[7,18]]]],0,[[],[[10,[32,18]]]],[22],[7,[[10,[18]]]],[7,10],0,[18,[[24,[23]]]],[[]],[[],15],[[],10],[[],10],[[],10],[[],10],[[],25],[[],25],0,0,0,0,0,[[33,1,1,3],[[10,[3]]]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],0,[[33,1,1,34],[[10,[20]]]],[[7,34],35],[[19,12],13],[[19,12],13],[[36,12],13],[37,19],[29,19],[30,19],[[]],[[]],[[],9],[[],9],[[]],[[]],[[7,21,34],[[10,[[24,[36]],19]]]],[22],[[7,34,33,21,38,39],35],[[36,3]],[19,[[24,[23]]]],[[],15],[[],10],[[],10],[[],10],[[],10],[[38,3]],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[34,34],[[]],[[],34],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,0,[9],[9],[9],[9],[9],[9],0,0,[[20,12],13],[[20,12],13],[[34,12],13],[[40,12],13],[[41,12],13],[[42,12],13],[[43,12],13],[29,20],[30,20],[[]],[37,20],[[]],[[]],[[]],[[]],[[]],[[1,1,3],40],[[],43],[[],9],[34,[[10,[20]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[22],[[34,1,1],[[10,[20]]]],[40,10],[41,10],[42,10],[43,10],0,[20,[[24,[23]]]],0,0,[[]],[[],15],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25]],"p":[[15,"str"],[4,"Cow"],[3,"Event"],[4,"EventKind"],[4,"Property"],[3,"Analytics"],[3,"Config"],[3,"HashMap"],[15,"usize"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"AnalyticsError"],[3,"String"],[15,"i64"],[15,"f64"],[4,"ConfigError"],[4,"PipelineError"],[4,"SinkError"],[3,"Duration"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"TypeId"],[8,"IntoIterator"],[8,"Into"],[4,"CliError"],[3,"Error"],[3,"Error"],[3,"Path"],[3,"ProjectDirs"],[3,"File"],[3,"PostHogSink"],[6,"Result"],[3,"Pipeline"],[3,"Error"],[3,"Sender"],[3,"Receiver"],[4,"PostHogEvent"],[3,"PostHogCaptureEvent"],[3,"PostHogIdentifyEvent"],[3,"PostHogBatch"]]},\
"re_arrow_store":{"doc":"The Rerun Arrow-based datastore.","t":[8,3,3,3,13,4,3,3,3,13,3,13,13,13,13,3,3,4,13,2,2,13,2,2,2,13,2,4,6,12,0,12,12,10,12,12,12,12,12,12,12,12,12,12,10,12,12,12,12,12,10,10,12,0,12,12,0,0,12,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,10,10,10,10,6,6,5,5,5,5,5,5,3,3,18,3,3,3,3,3,3,18,3,3,3,4,6,13,6,13,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,11,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,3,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,13,13,13,13,13,13,4,6,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["ArrayExt","DataStore","DataStoreConfig","DataStoreStats","DropAtLeastPercentage","GarbageCollectionTarget","IndexBucket","IndexRowNr","IndexTable","InvalidClusteringComponent","LatestAtQuery","MismatchedInstances","MismatchedRows","MoreThanOneRow","Other","RangeQuery","RowIndex","RowIndexKind","SparseClusteringComponent","StreamReader","StreamState","Temporal","TimeInt","TimeRange","TimeType","Timeless","Timeline","WriteError","WriteResult","all_components","arrow_util","at","buckets","clean_for_polars","cluster_comp_cache","cluster_key","cluster_key","cluster_key","component_bucket_nb_rows","component_bucket_size_bytes","components","config","ent_path","gc_id","get_child_length","index_bucket_nb_rows","index_bucket_size_bytes","indices","indices","insert_id","is_dense","is_sorted_and_unique","messages","polars_util","query_id","range","store","store_gc","store_insert_ids","store_polars","store_read","store_stats","store_write","timeless_components","timeless_indices","timeline","timeline","timeline","timeline","total_component_rows","total_component_size_bytes","total_index_rows","total_index_size_bytes","total_temporal_component_rows","total_temporal_component_size_bytes","total_temporal_index_rows","total_temporal_index_size_bytes","total_timeless_component_rows","total_timeless_component_size_bytes","total_timeless_index_rows","total_timeless_index_size_bytes","cluster_comp","cluster_comp_nb_instances","key","nb_instances","ArrayExt","clean_for_polars","get_child_length","is_dense","is_sorted_and_unique","SharedPolarsError","SharedResult","dataframe_from_results","drop_all_nulls","join_dataframes","latest_component","latest_components","range_components","ComponentBucket","ComponentTable","DEFAULT","DataStore","DataStoreConfig","IndexBucket","IndexBucketIndices","IndexRowNr","IndexTable","KIND_MASK","PersistentComponentTable","PersistentIndexTable","RowIndex","RowIndexKind","SecondaryIndex","Temporal","TimeIndex","Timeless","__clone_box","__clone_box","__clone_box","__clone_box","all_components","all_components","all_components","archive","archived","as_u64","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buckets","buckets","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","chunks","chunks","clear_msg_metadata","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cluster_comp_cache","cluster_key","cluster_key","cluster_key","cluster_key","cluster_key","cmp","cmp","cmp","component_bucket_nb_rows","component_bucket_size_bytes","components","config","data","datatype","datatype","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encompasses","ent_path","ent_path","entity_path","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_bucket","find_bucket_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","formatted_time_range","from","from","from","from","from","from","from","from","from","from","from","from","from_u63","gc","gc_drop_at_least_size_bytes","gc_id","get","get","get","get","get_msg_metadata","get_or_create_cluster_component","index_bucket_nb_rows","index_bucket_size_bytes","indices","indices","indices","indices","init","init","init","init","init","init","init","init","init","init","init","init","insert","insert","insert","insert","insert_id","insert_id_key","insert_row","insert_timeless_row","into","into","into","into","into","into","into","into","into","into","into","into","is_sorted","is_sorted","iter_buckets","iter_buckets","iter_indices","iter_time_ranges","kind","latest_at","latest_at","latest_at","latest_at","lookup_data_type","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","messages","name","name","name","name","named_indices","named_indices","nb_rows","new","new","new","new","new","new","new","oldest_time_per_timeline","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","push","push","push","query_id","range","range","range","range","range_bucket_rev_mut","range_buckets","range_buckets_rev","row_offset","sanity_check","sanity_check","sanity_check","sanity_check","sanity_check","sanity_check","sanity_check","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sort","sort_indices_if_needed","sort_indices_if_needed","sort_indices_if_needed","split","store_insert_ids","time_range","time_ranges","timeless_components","timeless_indices","timeline","timeline","times","times","to_dataframe","to_dataframe","to_dataframe","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","total_rows","total_rows","total_rows","total_rows","total_rows","total_rows","total_rows","total_rows","total_size_bytes","total_size_bytes","total_size_bytes","total_size_bytes","total_size_bytes","total_size_bytes","total_size_bytes","total_size_bytes","total_temporal_component_rows","total_temporal_component_size_bytes","total_temporal_index_rows","total_temporal_index_size_bytes","total_timeless_component_rows","total_timeless_component_size_bytes","total_timeless_index_rows","total_timeless_index_size_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","DropAtLeastPercentage","GarbageCollectionTarget","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","deref","deref_mut","drop","fmt","fmt","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","component_as_series","find_component_datatype","insert_ids_as_series","new_infallible_series","sort_df_columns","LatestAtQuery","RangeQuery","__clone_box","__clone_box","at","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","range","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","timeline","timeline","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","DataStoreStats","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","drop","fmt","from","from_store","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","total_component_rows","total_component_size_bytes","total_index_rows","total_index_size_bytes","total_temporal_component_rows","total_temporal_component_size_bytes","total_temporal_index_rows","total_temporal_index_size_bytes","total_timeless_component_rows","total_timeless_component_size_bytes","total_timeless_index_rows","total_timeless_index_size_bytes","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","InvalidClusteringComponent","MismatchedInstances","MismatchedRows","MoreThanOneRow","Other","SparseClusteringComponent","WriteError","WriteResult","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","find_split_index","fmt","fmt","from","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","provide","saturating_as","saturating_cast_from","source","split_time_range_off","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","cluster_comp","cluster_comp_nb_instances","key","nb_instances"],"q":["re_arrow_store","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_arrow_store::WriteError","","","","re_arrow_store::arrow_util","","","","","re_arrow_store::polars_util","","","","","","","","re_arrow_store::storere_arrow_store::store_gc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_arrow_store::store_polars","","","","","re_arrow_store::store_read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_arrow_store::store_stats","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_arrow_store::store_write","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_arrow_store::store_write::WriteError","","",""],"d":["","A complete data store: covers all timelines, all entities, …","","","Try to drop <em>at least</em> the given percentage.","","An <code>IndexBucket</code> holds a size-delimited (data size and/or …","","An <code>IndexTable</code> maps specific points in time to rows in …","","A query a given time, for a given timeline.","","","","","A query over a time range, for a given timeline.","An opaque type that directly refers to a row of data …","","","","","","","","","","","","","Track all of the components that have been written to.","","","The actual buckets, where the indices are stored.","Create a new <code>Array</code> which avoids problematic types for …","Used to cache auto-generated cluster components, i.e. <code>[0]</code>, …","The cluster key specifies a column/component that is …","Carrying the cluster key around to help with assertions …","Carrying the cluster key around to help with assertions …","The maximum number of rows in a component bucket before …","The maximum size of a component bucket before triggering a …","Maps a component name to its associated table, for all …","The configuration of the data store (e.g. bucket sizes).","The entity this table is related to, for debugging …","Monotonically increasing ID for GCs.","Returns the length of the child array at the given index.","The maximum number of rows in an index bucket before …","The maximum size of an index bucket before triggering a …","Maps an entity to its index, for a specific timeline.","","Monotonically increasing ID for insertions.","Returns <code>true</code> if the array is dense (no nulls).","Returns <code>true</code> if the array is both sorted (increasing …","Maps <code>MsgId</code>s to some metadata (just timepoints at the …","","Monotonically increasing ID for queries.","","","","If enabled, will store the ID of the write request …","","","","","Dedicated component tables for timeless data. Never …","Dedicated index tables for timeless data. Never garbage …","The timeline this table operates in, for debugging …","The timeline the bucket’s parent table operates in, for …","","","","","","","","","","","","","","","","","","","","Create a new <code>Array</code> which avoids problematic types for …","Returns the length of the child array at the given index.","Returns <code>true</code> if the array is dense (no nulls).","Returns <code>true</code> if the array is both sorted (increasing …","","","","Returns a new <code>DataFrame</code> where all rows that only contain …","Reduces an iterator of dataframes into a single dataframe …","Queries a single component from its own point-of-view as …","Queries any number of components and their cluster keys …","Iterates over the rows of any number of components and …","A <code>ComponentBucket</code> holds a size-delimited (data size) chunk …","A <code>ComponentTable</code> holds all the values ever inserted for a …","","A complete data store: covers all timelines, all entities, …","","An <code>IndexBucket</code> holds a size-delimited (data size and/or …","Just the indices, to simplify interior mutability.","","An <code>IndexTable</code> maps specific points in time to rows in …","","A <code>PersistentComponentTable</code> holds all the timeless values …","A <code>PersistentIndexTable</code> maps specific entries to rows in …","An opaque type that directly refers to a row of data …","","A vector of references into the component tables. None = …","","A vector of times. Our primary column, always densely …","","","","","","Retrieve all the <code>ComponentName</code>s that have been written to …","Track all of the components that have been written to.","Track all of the components that have been written to.","Archives the bucket as a new one is about to take its …","Has this bucket been archived yet?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The actual buckets, where the indices are stored.","The actual buckets, where the component data is stored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All the data for this table: many rows of a single column.","All the data for this bucket: many rows of a single column.","","","","","","","","","","Used to cache auto-generated cluster components, i.e. <code>[0]</code>, …","See <code>Self::cluster_key</code> for more information about the …","The cluster key specifies a column/component that is …","Carrying the cluster key around to help with assertions …","Carrying the cluster key around to help with assertions …","Carrying the cluster key around to help with assertions …","","","","The maximum number of rows in a component bucket before …","The maximum size of a component bucket before triggering a …","Maps a component name to its associated table, for all …","The configuration of the data store (e.g. bucket sizes).","Returns a shallow clone of all the chunks in this bucket.","Type of the underlying component.","Type of the underlying component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Does <code>self</code> fully encompass <code>time_ranges</code> for the given …","The entity this table is related to, for debugging …","The entity this table is related to, for debugging …","","","","","","","","","","","Returns the index bucket whose time range covers the given …","Returns the index bucket whose time range covers the given …","","","","","","","","","","","","","","","","","","","","","Returns a formatted string of the time range in the bucket","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Panics if <code>v</code> is 0. In debug, panics if <code>v</code> has its most …","Triggers a garbage collection according to the desired …","","Monotonically increasing ID for GCs.","Retrieves the data associated with a list of <code>components</code> at …","Returns a shallow clone of the row data present at the …","","Returns a shallow clone of the row data present at the …","","Tries to find the cluster component for the current row, …","The maximum number of rows in an index bucket before …","The maximum size of an index bucket before triggering a …","Maps an entity to its index, for a specific timeline.","All component indices for this bucket.","","All secondary indices for this bucket (i.e. everything but …","","","","","","","","","","","","","Inserts a <code>MsgBundle</code>’s worth of components into the …","","","","Monotonically increasing ID for insertions.","The column name used for storing insert requests’ IDs …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the indices in this <code>IndexBucket</code> are sorted","Whether the indices (all of them!) are currently sorted.","Returns a read-only iterator over the raw buckets.","Returns an iterator over the <code>ComponentBucket</code> in this table","Returns a read-only iterator over the raw index tables.","Return an iterator over the time ranges in this bucket.","","Queries the datastore for the internal row indices of the …","Returns <code>None</code> iff no row index could be found for the …","Returns <code>None</code> iff no row index could be found for the …","Returns <code>None</code> iff no row index could be found for the …","Lookup the arrow <code>DataType</code> of a <code>Component</code>","","","","","","","","","","","","","","","","","","","","","","","","","Maps <code>MsgId</code>s to some metadata (just timepoints at the …","Returns the name of the component stored in this bucket.","Name of the underlying component, for debugging purposes.","Name of the underlying component.","The component’s name, for debugging purposes.","","Returns a Vec each of (name, array) for each index in the …","The number of rows in the table: all indices should always …","See <code>Self::cluster_key</code> for more information about the …","","","","Creates a new timeless component table for the specified …","Creates a new component table for the specified component …","Creates a new component bucket for the specified component …","The oldest time for which we have any data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pushes <code>rows_single</code> to the end of the bucket, returning the …","Finds the appropriate bucket in this component table and …","Pushes <code>rows_single</code> to the end of the bucket, returning the …","Monotonically increasing ID for queries.","Iterates the datastore in order to return the internal row …","Returns an empty iterator if no data could be found for …","Returns an empty iterator if no data could be found for …","Returns an empty iterator if no data could be found for …","Returns an iterator that is guaranteed to yield at least …","Returns an iterator that is guaranteed to yield at least …","Returns an iterator that is guaranteed to yield at least …","The offset of this bucket in the global table.","Runs the sanity check suite for the entire datastore.","Runs the sanity check suite for the entire table.","Runs the sanity check suite for the entire table.","Runs the sanity check suite for the entire bucket.","Runs the sanity check suite for the entire table.","Runs the sanity check suite for the entire table.","Runs the sanity check suite for the entire table.","","","","","","","","","","","","","","","","","","","","","","","","","","Sort all unsorted indices in the store.","Sort all unsorted index buckets in this table.","Sort all component indices by time, provided that’s not …","Splits the bucket into two, potentially uneven parts.","If enabled, will store the ID of the write request …","The time range covered by the primary time index.","The time ranges (plural!) covered by this bucket. Buckets …","Dedicated component tables for timeless data. Never …","Dedicated index tables for timeless data. Never garbage …","The timeline this table operates in, for debugging …","The timeline the bucket’s parent table operates in, for …","Returns an (name, <code>Int64Array</code>) with a logical type matching …","","Dumps the entire datastore as a flat, denormalized …","Dumps the entire table as a flat, denormalized dataframe.","Dumps the entire bucket as a flat, denormalized dataframe.","","","","","","","","","","","","","","Returns the number of rows stored across this table.","Returns the number of rows stored across this entire …","Returns the number of rows stored across this bucket.","Returns the number of rows stored across this table.","Returns the number of rows stored across this entire …","Returns the number of rows stored across this bucket.","The total number of rows present in this bucket, across …","The total number of rows present in this bucket, across …","Returns the size of the data stored across this table, in …","Returns the size of data stored across this entire table, …","Returns the size of the data stored across this bucket, in …","Returns the size of the data stored across this table, in …","Returns the size of data stored across this entire table, …","Returns the size of the data stored across this bucket, in …","The size of this bucket in bytes, across all chunks.","The size of this bucket in bytes, across all chunks.","Returns the number of temporal component rows stored …","Returns the size of the temporal component data stored …","Returns the number of temporal index rows stored across …","Returns the size of the temporal index data stored across …","Returns the number of timeless component rows stored …","Returns the size of the timeless component data stored …","Returns the number of timeless index rows stored across …","Returns the size of the timeless index data stored across …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to drop <em>at least</em> the given percentage.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Sorts the columns of the given dataframe according to the …","A query a given time, for a given timeline.","A query over a time range, for a given timeline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finds an optimal split point for the given time index, or …","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Given a time index and a desired split index, splits off …","","","","","","","","","","","","",""],"i":[0,0,0,0,39,0,0,0,0,56,0,56,56,56,56,0,0,0,56,0,0,24,0,0,0,24,0,0,0,30,0,13,30,60,12,12,30,35,26,26,12,12,30,12,60,26,26,12,35,12,60,60,12,0,12,15,0,0,26,0,0,0,0,12,12,30,35,13,15,55,55,55,55,55,55,55,55,55,55,55,55,61,61,61,61,0,60,60,60,60,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,21,0,0,0,0,0,24,0,24,24,21,25,26,12,34,30,20,20,21,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,30,37,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,36,20,12,24,21,25,26,24,21,25,26,12,12,12,34,30,35,24,21,25,26,26,12,12,20,36,37,26,28,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,20,34,30,30,24,21,25,24,24,21,21,25,25,30,30,12,24,21,21,25,25,26,34,34,30,30,35,35,28,36,36,37,37,20,20,35,12,24,21,25,26,34,30,35,28,36,37,20,21,12,12,12,12,36,37,20,12,12,26,26,12,34,35,28,12,24,21,25,26,34,30,35,28,36,37,20,12,34,30,35,12,12,12,12,12,24,21,25,26,34,30,35,28,36,37,20,35,28,30,37,12,20,21,12,34,30,35,12,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,20,36,37,20,34,35,34,12,34,30,35,36,37,20,12,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,24,21,25,36,37,20,12,12,34,30,35,30,30,30,20,12,34,30,35,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,28,12,30,35,35,26,28,20,12,12,30,35,35,28,12,34,35,24,21,25,26,12,21,25,34,30,35,36,37,20,34,30,35,36,37,20,36,20,34,30,35,36,37,20,36,20,12,12,12,12,12,12,12,12,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,12,24,21,25,26,34,30,35,28,36,37,20,39,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,13,15,13,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,13,15,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,0,0,56,56,56,56,56,56,56,56,56,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,56,56,56,56,56,56,56,56,56,61,61,61,61],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,[3,3],0,0,0,0,0,[[],4],[[],[[5,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],[3,3],[[],4],[[],[[5,[4]]]],0,0,[[],[[7,[6]]]],[[6,8],[[9,[6]]]],[[8,10,11],[[7,[6]]]],[[12,13,14,8],[[7,[6]]]],[[12,13,14,10],[[7,[6]]]],[[12,15,14,8,10],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16],[16],[16],[16],[[12,17,14],[[19,[[18,[8]]]]]],0,0,[20],0,[21,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,[[12,23]],[24,24],[21,21],[25,25],[26,26],[[]],[[]],[[]],[[]],0,[12,8],0,0,0,0,[[24,24],27],[[21,21],27],[[25,25],27],0,0,0,0,[20,[[18,[[2,[1]]]]]],0,0,[[],26],[[],28],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[20,17,29],4],0,0,[30,14],[[24,24],4],[[21,21],4],[[25,25],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[30,31]],[[30,31]],[[12,32],33],[[24,32],33],[[21,32],33],[[21,32],33],[[25,32],33],[[25,32],33],[[26,32],33],[[34,32],33],[[34,32],33],[[30,32],33],[[30,32],33],[[35,32],33],[[35,32],33],[[28,32],33],[[36,32],33],[[36,32],33],[[37,32],33],[[37,32],33],[[20,32],33],[[20,32],33],[35,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,22],21],[[12,39,17,8],[[18,[[2,[1]]]]]],[[12,17,8,40],[[18,[[2,[1]]]]]],0,[12],[[36,21],[[2,[1]]]],[[37,21],[[19,[[2,[1]]]]]],[[20,21],[[19,[[2,[1]]]]]],[[12,41],[[19,[42]]]],[[12,3,[19,[3]],42],43],0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[12,44],43],[[34,45],5],[[30,26,31,45],5],[[35,31,45],5],0,[[],8],[[12,42,3,[19,[3]],45],43],[[12,3,[19,[3]],45],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,4],0,[30,46],[37,46],[12,46],[20,11],[21,24],[[12,13,14,8],19],[[34,8],19],[[30,31,8],19],[[35,31,8],19],[[12,8],[[19,[47]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[20,48],0,0,0,[34],[35],0,[[8,26],12],[[8,14],34],[[8,17,14],30],[[8,17],35],[[8,47],36],[[8,47],37],[[8,47,22],20],[12,[[49,[17,31]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,24],[[19,[27]]]],[[21,21],[[19,[27]]]],[[25,25],[[19,[27]]]],[[36,1],21],[[37,26,42,1],21],[[20,42,1],22],0,[[12,15,14],11],[34,11],[[30,50],11],[[35,50],11],[[30,[51,[31]]],11],[[30,[51,[31]]],11],[[30,[51,[31]]],11],0,[12,5],[34,5],[30,5],[35,5],[36,5],[37,5],[20,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28],[12],[30],[35],[35,19],0,0,0,0,0,0,0,[35],0,[12,6],[[34,12,26],6],[[35,12,26],6],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[34,22],[30,22],[35,22],[36,22],[37,22],[20,22],0,0,[34,22],[30,22],[35,22],[36,22],[37,22],[20,22],0,0,[12,22],[12,22],[12,22],[12,22],[12,22],[12,22],[12,22],[12,22],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],52],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[16],[[]],[[]],[[]],[[]],[[],19],[[],19],[39,39],[[]],[3],[3],[3],[[39,32],33],[[39,32],33],[[]],[[],3],[[]],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],52],[[],52],[[],53],[[]],[[]],[[]],[[]],[[]],[[12,3,47,8],54],[[12,8],[[19,[47]]]],[[3,45],[[19,[54]]]],[[48,1,3],54],[[6,4],6],0,0,[16],[16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[13,13],[15,15],[[]],[[]],[3],[3],[3],[3],[3],[3],[[13,32],33],[[15,32],33],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],19],[[],19],[[]],[[]],[[17,31],13],[[17,50],15],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[],52],[[],52],[[],52],[[],52],[[],53],[[],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],19],[[],19],[[],55],[3],[3],[3],[[55,32],33],[[]],[12,55],[[],3],[[]],[[],19],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],52],[[],52],[[],53],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],19],[[],19],[3],[3],[3],[18,[[19,[3]]]],[[56,32],33],[[56,32],33],[57,56],[[]],[[],3],[[]],[[],19],[[]],[[]],[[]],[58],[[]],[[]],[56,[[19,[59]]]],[[3,18,50],50],[[],38],[[],52],[[],52],[[],53],[[]],[[]],[[]],[[]],[[]],0,0,0,0],"p":[[8,"Array"],[3,"Box"],[15,"usize"],[15,"bool"],[6,"Result"],[3,"DataFrame"],[6,"SharedResult"],[3,"ComponentName"],[6,"PolarsResult"],[4,"JoinType"],[8,"Iterator"],[3,"DataStore"],[3,"LatestAtQuery"],[3,"EntityPath"],[3,"RangeQuery"],[3,"Private"],[3,"Timeline"],[3,"Vec"],[4,"Option"],[3,"ComponentBucket"],[3,"RowIndex"],[15,"u64"],[6,"HashSet"],[4,"RowIndexKind"],[3,"IndexRowNr"],[3,"DataStoreConfig"],[4,"Ordering"],[3,"IndexBucketIndices"],[3,"HashMap"],[3,"IndexTable"],[3,"TimeInt"],[3,"Formatter"],[6,"Result"],[3,"PersistentIndexTable"],[3,"IndexBucket"],[3,"PersistentComponentTable"],[3,"ComponentTable"],[3,"String"],[4,"GarbageCollectionTarget"],[15,"f64"],[3,"MsgId"],[3,"TimePoint"],[6,"WriteResult"],[3,"MsgBundle"],[6,"IntMap"],[8,"ExactSizeIterator"],[4,"DataType"],[15,"str"],[3,"BTreeMap"],[3,"TimeRange"],[8,"RangeBounds"],[4,"Result"],[3,"TypeId"],[3,"Series"],[3,"DataStoreStats"],[4,"WriteError"],[3,"Error"],[3,"Demand"],[8,"Error"],[8,"ArrayExt"],[13,"MismatchedInstances"]]},\
"re_data_store":{"doc":"This is how we store and index logging data.","tn":["BEGINNING","ComponentName","EVERYTHING","EntityPath","EntityPathPart","Error","Index","Index","InstancePath","InstancePathHash","Integer","LatestAt","LogDb","MAX","MIN","MsgBundleError","Name","Pixel","Range","Result","Sequence","String","TimeInt","TimeQuery","Timeline","Uuid","WriteError","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","abs","add","add","add_assign","as_f32","as_f64","as_i64","as_ref","as_slice","as_str","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","entity_path","entity_path_hash","entity_properties","entity_tree","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_time_range","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","full_name","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash64","init","init","init","init","init","init","init","init","instance_key","instance_key","instance_path","into","into","into","into","into","into","into","into","is_child_of","is_descendant_of","is_root","is_timeless","iter","join","last","len","log_db","log_time","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","name","neg","new","new","new","new_sequence","new_temporal","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","provide","root","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","serialize","short_name","source","sub","sub","sub_assign","sum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","EntityProperties","EntityPropertyMap","ExtraQueryHistory","__clone_box","__clone_box","__clone_box","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","get","init","init","init","interactive","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","nanos","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pinhole_image_plane_distance","pinhole_image_plane_distance","props","query_transform","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","sequences","serialize","serialize","serialize","set","set_pinhole_image_plane_distance","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","visible","visible_history","vzip","vzip","vzip","with_child","with_child","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ComponentStats","EntityTree","TimeHistogramPerTimeline","TimesPerTimeline","add","add_data_msg","add_path_op","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","children","components","create_subtrees_recursively","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","get","get","has_timeline","has_timeline","init","init","init","init","insert","into","into","into","into","is_leaf","iter","iter","iter_mut","iter_mut","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","new","nonrecursive_clears","num_children_and_fields","num_timeless_messages","num_timeless_messages","num_timeless_messages","num_timeless_messages","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","path","prefix_times","purge","purge","purge","recursive_clears","root","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","subtree","timelines","timelines","times","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","visit_children_recursively","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","InstancePath","InstancePathHash","NONE","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","entity_path","entity_path_hash","entity_splat","entity_splat","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","get_hash","get_hash","hash","hash","hash","init","init","instance","instance","instance_key","instance_key","into","into","is_none","is_some","is_splat","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","resolve","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","EntityDb","LogDb","add","add_begin_recording_msg","add_path_op","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","chronological_log_messages","chronological_message_ids","data_store","default","default","deref","deref","deref_mut","deref_mut","drop","drop","entity_db","entity_path_from_hash","entity_path_from_hash","from","from","get_log_msg","init","init","into","into","is_empty","len","log_messages","lossless_try_into","lossless_try_into","lossy_into","lossy_into","num_timeless_messages","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","purge","purge_fraction_of_ram","recording_id","recording_info","recording_info","register_entity_path","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","timeless_message_ids","timelines","times_per_timeline","times_per_timeline","tree","try_add_arrow_data_msg","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":["re_data_storere_data_store::entity_properties","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_data_store::entity_tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_data_store::instance_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_data_store::log_db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The beginning of time.","The name of an entity component, e.g. <code>pos</code> or <code>color</code>.","","<code>camera / &quot;left&quot; / points / #42</code>","The different parts that make up an <code>EntityPath</code>.","The errors that can occur when misusing the data store.","The key of a table.","Array/table/map member. Each member must be of the same …","The path to either a specific instance of an entity, or …","Hashes of the components of an <code>InstancePath</code>.","Any integer, e.g. a hash or an arbitrary identifier.","Get the latest version of the data available at this time.","","","","","Struct member. Each member can have a different type.","X,Y pixel coordinates, from top left.","Get all the data within this time interval, plus the latest","","For arrays, assumed to be dense (0, 1, 2, …).","Anything goes.","Either nanoseconds or sequence numbers.","A query in time.","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","UUID/GUID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a formatted string of <code>time_range</code> on this <code>Timeline</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Includes namespace, e.g. <code>rerun.color</code> or <code>ext.confidence</code>.","","","","","","","","","","Precomputed hash of the string.","","","","","","","Precomputed 64-bit hash.","","","","","","","","","If this is a concrete instance, what instance index are we?","If this is a concrete instance, what instance index are we?","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this a direct child of the other path.","Is this a strict descendant of the given path.","","","","","","Number of parts","","The log time timeline to which all API functions will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return <code>None</code> if root.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Excludes the rerun namespace, so you’ll get <code>color</code> but …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Properties for a collection of entities.","When showing an entity in the history view, add this much …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Zero = off.","","","","","","","If this has a pinhole camera transform, how far away is …","","","Get the latest value of the transform","","","","","","","Zero = off.","","","","","see <code>pinhole_image_plane_distance()</code>","","","","","","","","","","","","","","","","","","","","","","","","Multiply/and these together.","Multiply/and these together.","","","","","","","","Tree of entity paths, plus components at the leaves.","Number of messages per time per timeline","Number of messages per time per timeline","","Returns a collection of pending clear operations","Add a path operation into the the entity tree.","","","","","","","","","","","","","","","","","","","","","","","","","","Data logged at this entity path.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Has no child entities.","","","","","","","","","","","","","","Book-keeping around whether we should clear fields when …","","","","Extra book-keeping used to seed any timelines that include …","Extra book-keeping used to seed any timelines that include …","","","","","","","","","Full path to the root of this tree.","When do we or a child have data?","Purge all times before the cutoff, or in the given set","","","Book-keeping around whether we should clear recursively …","","","","","","","","","","","","","When do we have data? Ignored timeless.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The path to either a specific instance of an entity, or …","Hashes of the components of an <code>InstancePath</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicate the whole entity (all instances of it) - i.e. a …","Indicate the whole entity (all instances of it) - i.e. a …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Indicate a specific instance of the entity, e.g. a …","Indicate a specific instance of the entity, e.g. a …","If this is a concrete instance, what instance index are we?","If this is a concrete instance, what instance index are we?","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Do we refer to the whole entity (all instances of it)?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stored entities with easy indexing of the paths.","A in-memory database built from a stream of <code>LogMsg</code>es.","","","","","","","","","","","","","","","","In the order they arrived","Messages in the order they arrived","Stores all components for all entities for all timelines.","","","","","","","","","Where we store the entities.","","In many places we just store the hashes, so we need a way …","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Free up some RAM by forgetting the older parts of all …","","","","","","","","","Data that was logged with <code>TimePoint::timeless</code>. We need to …","","","Used for time control","A tree-view (split on path components) of the entities.","","","","","","","","","","","","","","","","",""],"i":[2,0,12,0,0,0,0,14,0,0,13,12,0,2,2,20,14,13,12,0,13,13,0,0,0,13,20,12,13,7,9,14,2,15,2,2,2,2,2,2,2,7,9,7,20,12,13,7,9,14,2,15,20,12,13,7,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,12,13,7,9,14,2,15,12,13,7,9,14,2,15,13,7,9,14,2,15,15,20,12,13,7,7,9,14,2,15,20,12,13,7,9,14,2,15,13,7,9,14,2,15,20,12,13,7,9,14,2,15,63,64,0,0,13,7,7,9,14,2,2,15,13,13,7,7,9,9,14,14,2,2,15,15,20,20,12,13,13,7,7,9,9,14,14,2,15,15,20,20,20,12,13,13,13,7,7,7,9,9,9,9,9,9,14,14,14,14,2,2,2,2,15,9,7,13,7,9,14,2,15,13,13,7,7,9,9,14,2,15,9,9,20,12,13,7,9,14,2,15,63,64,0,20,12,13,7,9,14,2,15,9,9,9,2,9,9,9,9,0,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,15,15,2,7,9,15,15,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,9,13,7,9,14,2,2,15,9,20,9,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,13,7,9,14,2,15,7,20,2,2,2,2,12,13,7,9,14,2,15,20,13,7,9,14,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,15,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,20,12,13,7,9,14,2,15,0,0,0,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,45,46,45,45,46,46,45,46,44,45,46,44,44,45,46,45,44,45,46,44,45,46,44,45,46,46,44,45,46,44,45,46,45,45,44,0,44,45,46,44,45,46,46,44,45,46,44,45,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,45,45,44,45,46,45,46,44,45,46,44,45,46,0,0,0,0,51,53,53,53,57,58,51,53,57,58,51,53,57,58,51,53,57,58,51,53,57,58,51,53,57,58,51,53,53,53,57,58,51,53,57,58,51,53,57,58,51,53,57,58,51,53,57,58,51,57,58,57,58,53,57,58,51,58,53,57,58,51,53,57,58,57,58,53,57,58,51,53,57,58,51,53,53,53,53,51,53,51,53,57,58,51,53,57,58,51,53,53,53,58,51,53,53,53,57,58,51,53,57,58,51,53,57,58,51,53,57,58,51,53,57,58,51,53,57,58,51,53,57,58,51,53,57,58,51,53,53,57,58,51,53,57,58,51,53,57,58,51,0,0,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,63,64,63,64,63,64,63,64,63,63,64,64,63,63,64,63,64,63,64,63,63,64,63,64,63,64,63,64,63,64,64,64,63,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,63,64,63,63,64,63,64,63,64,63,64,63,64,63,64,63,64,63,64,0,0,66,66,48,48,66,48,66,48,66,48,66,48,66,48,66,66,66,48,48,66,48,66,48,66,48,66,66,48,48,48,66,66,48,66,48,66,66,66,66,48,66,48,66,66,48,66,48,66,48,66,66,66,66,48,48,66,48,66,66,66,66,48,48,48,48,66,48,66,48,66,48,66,48,66,48,66,48,66,48,66],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[2,2],[[2,2]],[[2,3]],[[2,2]],[2,4],[2,5],[2,6],[7,8],[9],[7,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[12,[11]]],[[12,[11]]]],[13,13],[7,7],[9,9],[14,14],[2,2],[15,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[13,13],16],[[7,7],16],[[9,9],16],[[14,14],16],[[2,2],16],[[15,15],16],[[],15],[17],[17],[17],[7,8],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[[],[[18,[13]]]],[[],[[18,[7]]]],[[],[[18,[9]]]],[[],[[18,[14]]]],[[],[[18,[2]]]],[[],[[18,[15]]]],[17],[17],[17],[17],[17],[17],[17],[17],0,0,0,0,[[13,13],19],[[7,8],19],[[7,7],19],[[9,9],19],[[14,14],19],[[2,3],19],[[2,2],19],[[15,15],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[20,21],22],[[20,21],22],[[[12,[23]],21],22],[[13,21],[[18,[24]]]],[[13,21],[[18,[24]]]],[[7,21],[[18,[24]]]],[[7,21],[[18,[24]]]],[[9,21],[[18,[24]]]],[[9,21],[[18,[24]]]],[[14,21],[[18,[24]]]],[[14,21],[[18,[24]]]],[[2,21],[[18,[24]]]],[[15,21],[[18,[24]]]],[[15,25],26],[27,20],[28,20],[[]],[[]],[8,13],[[]],[26,13],[8,7],[[]],[26,7],[8,9],[[]],[[],9],[[[30,[14,29]]],9],[31,9],[26,9],[13,14],[[]],[26,14],[8,14],[6,2],[32,2],[[]],[33,2],[[]],[[],9],[7,8],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[13],[13,35],[7],[7,34],[9],[9,36],[14],[2],[15],0,[9,34],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,9],19],[[9,9],19],[9,19],[2,19],[9,37],[[9,9],9],[9,[[10,[14]]]],[9,17],0,[[],15],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,38],0,[2],[8,7],[[[30,[14,29]]],9],[[[39,[38]],40],15],[[[39,[38]]],15],[[[39,[38]]],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[10,[9]]]],[[13,13],[[10,[16]]]],[[7,7],[[10,[16]]]],[[9,9],[[10,[16]]]],[[14,14],[[10,[16]]]],[[2,3],[[10,[16]]]],[[2,2],[[10,[16]]]],[[15,15],[[10,[16]]]],0,[41],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,18],[7,18],[9,18],[14,18],[2,18],[15,18],[7,8],[20,[[10,[42]]]],[[2,3]],[[2,2]],[[2,2]],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[15,40],0,[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[44,44],[45,45],[46,46],[[]],[[]],[[]],[[],44],[[],45],[[],46],[17],[17],[17],[17],[17],[17],[[],[[18,[44]]]],[[],[[18,[45]]]],[[],[[18,[46]]]],[17],[17],[17],[[45,45],19],[[46,46],19],[[],19],[[],19],[[],19],[[],19],[[45,21],22],[[46,21],22],[[]],[[]],[[]],[[44,9],45],[[],17],[[],17],[[],17],0,[[]],[[]],[[]],[[],10],[[],10],[[],10],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[45,47],4],0,0,[[48,9,49],[[10,[50]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[44,18],[45,18],[46,18],[[44,9,45]],[[45,4]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[45,45],45],[[46,46],46],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[51,52]],[[53,52,54],30],[[53,55,52,56],[[30,[54]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[53,17,52],53],[[],57],[[],58],[[],51],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[[]],[[]],[[]],[[]],[[57,15],[[10,[59]]]],[[58,15],[[10,[60]]]],[[57,15],19],[[58,15],19],[[],17],[[],17],[[],17],[[],17],[[58,15,2]],[[]],[[]],[[]],[[]],[53,19],[57,61],[58,61],[57,61],[58,61],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[9,[59,[55,52]]],53],0,[53,17],[53,17],[51,17],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[53,59,62]],[[58,59]],[[51,59]],0,[[],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[53,9],[[10,[53]]]],[57,61],[58,61],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[63,63],[64,64],[[]],[[]],[[63,63],16],[[],64],[17],[17],[17],[17],[[],[[18,[63]]]],[17],[17],0,0,[9,63],[9,64],[[63,63],19],[[64,64],19],[[],19],[[],19],[[],19],[[],19],[[63,21],22],[[63,21],22],[[64,21],22],[[]],[[]],[[],34],[[],34],[63,64],[63],[64],[[],17],[[],17],[[9,65],63],[[9,65],64],0,0,[[]],[[]],[64,19],[64,19],[63,19],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[63,63],[[10,[16]]]],[[64,48],[[10,[63]]]],[[]],[[]],[[]],[[]],[63,18],[[]],[[]],[[],26],[[],18],[[],18],[[],18],[[],18],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[66,67],[[18,[20]]]],[[66,68]],[[48,55,52,56]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[66,37],0,0,[[],48],[[],66],[17],[17],[17],[17],[17],[17],0,[[48,36],[[10,[9]]]],0,[[]],[[]],[[66,55],[[10,[67]]]],[[],17],[[],17],[[]],[[]],[66,19],[66,17],0,[[],10],[[],10],[[]],[[]],[66,17],[[]],[[]],[[]],[[]],[[48,59,62]],[[66,4]],[66,69],[66,[[10,[70]]]],0,[[48,9]],[[]],[[]],[[]],[[]],0,[66,61],[66,58],0,0,[[48,71],[[18,[20]]]],[[],18],[[],18],[[],18],[[],18],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Private"],[3,"TimeInt"],[3,"TimeReal"],[15,"f32"],[15,"f64"],[15,"i64"],[3,"ComponentName"],[15,"str"],[3,"EntityPath"],[4,"Option"],[8,"Clone"],[4,"TimeQuery"],[4,"Index"],[4,"EntityPathPart"],[3,"Timeline"],[4,"Ordering"],[15,"usize"],[4,"Result"],[15,"bool"],[4,"Error"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Error"],[3,"TimeRange"],[3,"String"],[4,"WriteError"],[4,"MsgBundleError"],[3,"Global"],[3,"Vec"],[3,"EntityPathImpl"],[3,"Time"],[3,"Duration"],[15,"u64"],[3,"IndexHash"],[3,"EntityPathHash"],[8,"Iterator"],[3,"TimelineName"],[8,"Into"],[4,"TimeType"],[3,"Demand"],[8,"Error"],[3,"TypeId"],[3,"EntityPropertyMap"],[3,"EntityProperties"],[3,"ExtraQueryHistory"],[3,"Pinhole"],[3,"EntityDb"],[3,"LatestAtQuery"],[4,"Transform"],[3,"ComponentStats"],[3,"TimePoint"],[3,"EntityTree"],[3,"ComponentPath"],[3,"MsgId"],[4,"PathOp"],[3,"TimeHistogramPerTimeline"],[3,"TimesPerTimeline"],[3,"BTreeMap"],[3,"BTreeSet"],[8,"ExactSizeIterator"],[6,"HashSet"],[3,"InstancePath"],[3,"InstancePathHash"],[3,"InstanceKey"],[3,"LogDb"],[4,"LogMsg"],[3,"BeginRecordingMsg"],[3,"RecordingId"],[3,"RecordingInfo"],[3,"ArrowMsg"]]},\
"re_error":{"doc":"Helpers for error handling.","t":[5],"n":["format"],"q":["re_error"],"d":["Format an error, including its chain of sources."],"i":[0],"f":[[[[2,[1]]],3]],"p":[[8,"Error"],[8,"AsRef"],[3,"String"]]},\
"re_format":{"doc":"Miscellaneous formatting tools.","t":[0,5,5,5,5,5,5,5,5,5,3,3,3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["arrow","format_bytes","format_f32","format_f64","format_large_number","format_number","parse_bytes","parse_bytes_base10","parse_bytes_base2","parse_duration","DisplayDataType","DisplayIntervalUnit","DisplayTimeUnit","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","format_table","from","from","from","from","into","into","into","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["re_format","","","","","","","","","","re_format::arrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Formatting for tables of Arrow arrays","Pretty format a number of bytes by using SI notation …","Format a number with a decent number of decimals.","Format a number with a decent number of decimals.","Pretty format a large number by using SI notation (base …","Pretty format a number by using thousands separators for …","","","","","","","","","","","","","","","","","Format <code>columns</code> into a <code>Table</code> using <code>names</code> as headers.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,9,12,13,9,12,13,9,12,13,0,9,12,13,13,9,12,13,9,12,13,9,12,13,9,12,13,9,12,13],"f":[0,[1,2],[3,2],[1,2],[1,2],[4,2],[5,[[7,[6]]]],[5,[[7,[6]]]],[5,[[7,[6]]]],[5,[[8,[3,2]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[9,10],11],[[12,10],11],[[13,10],11],[[],14],[[]],[[]],[[]],[15,13],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16]],"p":[[15,"f64"],[3,"String"],[15,"f32"],[15,"usize"],[15,"str"],[15,"i64"],[4,"Option"],[4,"Result"],[3,"DisplayTimeUnit"],[3,"Formatter"],[6,"Result"],[3,"DisplayIntervalUnit"],[3,"DisplayDataType"],[3,"Table"],[4,"DataType"],[3,"TypeId"]]},\
"re_int_histogram":{"doc":"A histogram with <code>i64</code> keys and <code>u32</code> counts, supporting both …","t":[3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,12,12,12,12,11,11,12,11,11,11,11,0,11,11,11,11,11,11,5,17,17,3,13,3,13,3,3,17,6,17,17,17,17,17,4,3,17,3,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,5,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Int64Histogram","Iter","RangeI64","RangeU64","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contains","contains","contains_all_of","eq","eq","fmt","fmt","from","from","i64_key_from_u64_key","intersects","into","into","iter","max","max","min","min","new","new","root","single","single","to_owned","to_owned","tree","try_from","try_from","try_into","try_into","type_id","type_id","u64_key_from_i64_key","ADDR_MASK","BOTTOM_LEVEL","BranchNode","BranchNode","DenseLeaf","DenseLeaf","Int64Histogram","Iter","LEVEL_STEP","Level","MAX_SPARSE_LEAF_LEN","NUM_CHILDREN_IN_DENSE","NUM_CHILDREN_IN_NODE","NUM_NODE_STEPS","NUM_STEPS_IN_DENSE_LEAF","Node","NodeIterator","ROOT_LEVEL","SparseLeaf","SparseLeaf","TreeIterator","abs_addr","addrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_level_and_size","children","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","counts","counts","cutoff_size","default","default","default","default","fmt","fmt","fmt","fmt","fmt","for_level","from","from","from","from","from","from","from","from","increment","increment","increment","increment","increment","index","into","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","is_empty","is_empty","iter","level","max_key","max_key","max_key","max_key","max_key","min_key","min_key","min_key","min_key","min_key","next","next","node","overflow","range","range","range_count","range_count","range_count","range_count","range_count","range_u64_from_range_bounds","remove","remove","remove","remove","remove","root","stack","to_owned","to_owned","to_owned","to_owned","to_owned","total_count","total_count","total_count","total_count","total_count","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["re_int_histogram","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_int_histogram::tree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A histogram, mapping <code>i64</code> key to a <code>u64</code> count optimizing for …","An iterator over an <code>Int64Histogram</code>.","An inclusive range.","An inclusive range.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","inclusive","inclusive","inclusive","inclusive","","","","","","","","The histogram is implemented as a tree.","","","","","","","We use <code>u64</code> keys in the internal structures, because it is …","","The level used for <code>DenseLeaf</code>.","","An inner node, addressed by the next few bits of the …","","Optimization for dense histograms (entries at …","A histogram, mapping <code>i64</code> key to a <code>u64</code> count optimizing for …","An iterator over an <code>Int64Histogram</code>.","How many bits we progress in each <code>BranchNode</code>","How high up in the tree we are (where root is highest). …","When a <code>SparseLeaf</code> goes over this, it becomes a <code>BranchNode</code>.","Number of children in <code>DenseLeaf</code>.","","","","","","","","A list of <code>(key, count)</code> pairs.","","","Two vectors of equal lengths, making up (addr, count) …","","","","","","","","","","","","","","","","","","The index is the next few bits of the key","","","","","","","","","","","","The last bits of the address, mapped to their counts","You can stop recursing when you’ve reached this size","","","","","","","","","","The default node for a certain level.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Increment the count for the given key.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Highest key with a non-zero count.","","","","","Lowest key with a non-zero count.","","","","","","","","","Iterate over a certain range, returning ranges that are at …","Only returns things in this range","What is the count of all the buckets in the given range?","","","","","","Remove all data in the given range.","Returns how much the total count decreased by.","Returns how much the total count decreased by.","Returns how much the total count decreased by.","Returns how much the total count decreased by.","","","","","","","","Total count of all the buckets.","","","","","Very important optimization","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,0,1,1,2,17,1,2,1,2,1,2,10,1,2,1,2,0,1,2,1,2,1,2,0,0,0,0,11,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,20,13,17,18,20,10,11,12,13,14,17,18,20,10,11,12,13,14,0,12,10,11,12,13,14,10,11,12,13,14,13,14,18,10,12,13,14,10,11,12,13,14,11,17,18,20,10,11,12,13,14,10,11,12,13,14,20,17,18,20,10,11,12,13,14,17,18,11,12,13,14,17,20,10,11,12,13,14,10,11,12,13,14,17,18,20,13,10,18,10,11,12,13,14,0,10,11,12,13,14,10,18,10,11,12,13,14,10,11,12,13,14,12,17,18,20,10,11,12,13,14,17,18,20,10,11,12,13,14,17,18,20,10,11,12,13,14],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,3],4],[[2,5],4],[[1,1],4],[[1,1],4],[[2,2],4],[[1,6],7],[[2,6],7],[[]],[[]],[3,5],[[1,1],4],[[]],[[]],0,0,0,0,0,[[3,3],1],[[5,5],2],0,[3,1],[5,2],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[5,3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3],0,[10,10],[11,11],[12,12],[13,13],[14,14],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],10],[[],12],[[],13],[[],14],[[10,6],7],[[11,6],7],[[12,6],7],[[13,6],7],[[14,6],7],[3,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,5,15]],[[11,3,3,15]],[[12,3,3,15]],[[13,3,3,15],11],[[14,3,15]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,4],[12,4],[13,4],[14,4],0,0,[10,[[16,[5]]]],[[11,3,3],[[16,[3]]]],[[12,3,3],[[16,[3]]]],[13,[[16,[3]]]],[[14,3],[[16,[3]]]],[10,[[16,[5]]]],[[11,3,3],[[16,[3]]]],[[12,3,3],[[16,[3]]]],[13,[[16,[3]]]],[[14,3],[[16,[3]]]],[17,16],[18,16],0,[[13,3],12],[[10,[19,[5]],3],17],0,[[10,[19,[5]]],3],[[11,3,3,1],3],[[12,3,3,1],3],[[13,1],3],[[14,3,1],3],[[[19,[5]]],1],[[10,[19,[5]]],3],[[11,3,3,1],3],[[12,3,3,1],3],[[13,1],3],[[14,3,1],3],0,0,[[]],[[]],[[]],[[]],[[]],[10,3],[11,3],[12,3],[13,3],[14,3],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9]],"p":[[3,"RangeU64"],[3,"RangeI64"],[15,"u64"],[15,"bool"],[15,"i64"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"Int64Histogram"],[4,"Node"],[3,"BranchNode"],[3,"SparseLeaf"],[3,"DenseLeaf"],[15,"u32"],[4,"Option"],[3,"Iter"],[3,"TreeIterator"],[8,"RangeBounds"],[3,"NodeIterator"]]},\
"re_log":{"doc":"Text logging (nothing to do with rerun logging) for use in …","t":[14,14,14,14,14,14,5,5,14,14,14,14],"n":["debug","debug_once","error","error_once","info","info_once","set_default_rust_log_env","setup_native_logging","trace","trace_once","warn","warn_once"],"q":["re_log","","","","","","","","","","",""],"d":["Constructs an event at the debug level.","Logs a message once at the debug level.","Constructs an event at the error level.","Logs a message once at the error level.","Constructs an event at the info level.","Logs a message once at the info level.","Set <code>RUST_LOG</code> environment variable to <code>info</code>, unless set, and …","","Constructs an event at the trace level.","Logs a message once at the trace level.","Constructs an event at the warn level.","Logs a message once at the warn level."],"i":[0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,[[]],[[]],0,0,0,0],"p":[]},\
"re_log_types":{"doc":"Types used for the log data.","tn":["AnnotationContext","ApplicationId","Arrow3D","Arrow3D","ArrowMsg","ArrowMsg","BBox2D","BatchIndex","BeginRecordingMsg","BeginRecordingMsg","Box3","ClassicTensor","ClearComponents","ClearRecursive","DTYPE","Dense","Duration","Encoded","EncodedMesh3D","EntityPathOpMsg","EntityPathOpMsg","F16","F16","F32","F32","F64","F64","FullIndex","Glb","Gltf","Goodbye","I16","I16","I32","I32","I64","I64","I8","I8","Index","IndexHash","Integer","Jpeg","LogMsg","Mesh3D","MeshFormat","MeshId","MsgId","Obj","Other","PathOp","Pinhole","Pinhole","Pixel","PythonSdk","Quaternion","Raw","RawMesh3D","RecordingId","RecordingInfo","RecordingSource","Rigid3","Rigid3","Sequence","SequentialIndex","String","TensorDataStore","TensorDataType","TensorDataTypeTrait","TensorElement","Time","TimeInt","TimePoint","TimeRange","TimeRangeF","TimeReal","TimeType","Timeline","TimelineName","Transform","U16","U16","U32","U32","U64","U64","U8","U8","Unknown","Uuid","ViewCoordinates","ZERO","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","albedo_factor","application_id","arrow_msg","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","component_types","context","coordinates","data","data","datagen","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype","encoding","entity_path","entity_path","entity_path_vec","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","external","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from_str","from_uuid","get_hash","get_hash","half_size","hash","hash","hash","id","image_from_cam","impl_into_enum","index","indices","info","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_official_example","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","max","max","max","meaning","mesh_id","mesh_id","min","min","min","msg_bundle","msg_id","msg_id","name","normals","origin","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","path","path_op","positions","random","recording_id","recording_source","resolution","rotation","rotation","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shape","started","tensor_id","time","time_point","time_point","time_range","time_real","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","transform","translation","translation","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vector","vector","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ArrowMsg","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","chunk","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","from","init","into","lossless_try_into","lossy_into","msg_id","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","schema","serialize","time_point","to_owned","try_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","AnnotationContext","AnnotationInfo","Arrow3D","BadSlice","BadValue","Box3D","ClassDescription","ClassId","ClassId","ColorRGBA","Depth","Encoded","EncodedMesh3D","F32","F64","FIELDS","FieldError","FixedSizeArrayField","Glb","Gltf","I16","I32","I64","I8","InstanceKey","JPEG","KeypointId","Label","LineStrip2D","LineStrip3D","Mat3x3","Mesh3D","MeshFormat","MeshId","MsgId","Obj","Pinhole","Pinhole","Point2D","Point3D","Quaternion","Radius","Raw","RawMesh3D","Rect2D","Result","Rigid3","Rigid3","Scalar","ScalarPlotProps","Size3D","Tensor","TensorData","TensorDataMeaning","TensorDimension","TensorId","TensorTrait","TextEntry","Transform","U16","U32","U64","U8","Unknown","Unknown","Vec2D","Vec3D","Vec4D","ViewCoordinates","XCYCW2H2","XCYCWH","XYWH","XYXY","YXHW","YXYX","__private_field","albedo_factor","arrow","arrow_deserialize","arrow_serialize","az","az","az","bbox","body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","class_id","color","context","coordinates","data","data_type","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","format","from","from","from","from","get","id","image_from_cam","indices","init","init","init","instance_key","into","into","into","is_shaped_like_an_image","is_vector","iter_registered_field_types","keypoint_id","label","level","linestrip","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","mat","meaning","meaning","mesh3d","mesh_id","mesh_id","meter","msg_id","name","new_array","normals","num_dim","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","point","positions","provide","quaternion","radius","rect","resolution","rotation","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","scalar","scattered","shape","shape","size","size","source","tensor","tensor_id","text_entry","to_string","transform","transform","translation","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vec","vector","vzip","vzip","vzip","w","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x","x","x","y","y","y","y","y","z","z","z","z","Arrow3D","Arrow3DArray","Arrow3DArrayIterator","MutableArrow3DArray","__clone_box","arrow_deserialize","arrow_serialize","as_any","as_arc","as_box","as_mut_any","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","consume_next","data_type","data_type","data_type","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","eq","field_origin","field_origin","field_vector","field_vector","fmt","fmt","from","from","from","from","has_validity","init","init","init","init","init_validity","into","into","into","into","into_iter","into_iter","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new_array","next","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","reserve","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","shrink_to_fit","to_owned","try_extend","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity_iter","vector","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Box3D","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data_type","deref","deref_mut","deserialize","drop","eq","fmt","from","from","init","into","lossless_try_into","lossy_into","name","new","new_array","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","x","y","z","ClassId","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","data_type","default","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","get_hash","hash","init","into","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","ColorRGBA","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data_type","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from","from","init","into","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_array","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","AnnotationContext","AnnotationContextArrow","AnnotationInfo","AnnotationInfoArray","AnnotationInfoArrayIterator","ClassDescription","ClassDescriptionArrow","ClassDescriptionArrowArray","ClassDescriptionArrowArrayIterator","ClassMapElemArrow","ClassMapElemArrowArray","ClassMapElemArrowArrayIterator","KeypointPairArrow","KeypointPairArrowArray","KeypointPairArrowArrayIterator","MutableAnnotationInfoArray","MutableClassDescriptionArrowArray","MutableClassMapElemArrowArray","MutableKeypointPairArrowArray","__clone_box","__clone_box","__clone_box","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","as_any","as_any","as_any","as_any","as_arc","as_arc","as_arc","as_arc","as_box","as_box","as_box","as_box","as_mut_any","as_mut_any","as_mut_any","as_mut_any","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","class_description","class_id","class_map","clone","clone","clone","clone_into","clone_into","clone_into","color","consume_next","consume_next","consume_next","consume_next","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","field_class_description","field_class_description","field_class_id","field_class_id","field_color","field_color","field_id","field_id","field_info","field_info","field_keypoint0","field_keypoint0","field_keypoint1","field_keypoint1","field_keypoint_connections","field_keypoint_connections","field_keypoint_map","field_keypoint_map","field_label","field_label","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","has_validity","has_validity","has_validity","has_validity","id","info","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_validity","init_validity","init_validity","init_validity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","keypoint0","keypoint1","keypoint_connections","keypoint_connections","keypoint_map","keypoint_map","label","len","len","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new","new","new","new_array","new_array","new_array","new_array","new_array","next","next","next","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","push_null","push_null","push_null","reserve","reserve","reserve","reserve","return_next","return_next","return_next","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","try_extend","try_extend","try_extend","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity","validity","validity","validity","validity","validity","validity_iter","validity_iter","validity_iter","validity_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Axis3","Back","Down","Forward","Handedness","Left","Left","NEGATIVE_X","NEGATIVE_Y","NEGATIVE_Z","Negative","POSITIVE_X","POSITIVE_Y","POSITIVE_Z","Positive","Right","Right","Sign","SignedAxis3","Up","ViewCoordinates","ViewDir","X","Y","Z","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","arrow_deserialize","arrow_serialize","as_vec3","axis","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_type","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe","describe","describe_short","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","from","from","from","from","from","from","from_ascii_char","from_dim","from_right_handed","from_rub","from_str","from_str","from_up_and_handedness","handedness","init","init","init","init","init","init","into","into","into","into","into","into","long","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new_array","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","right","sanity_check","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","serialize","short","sign","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rub","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","up","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","InstanceKey","SPLAT","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","data_type","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","get_hash","hash","init","into","is_specific","is_splat","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","serialize","specific_index","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","KeypointId","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","data_type","default","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","get_hash","hash","init","into","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","Label","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data_type","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from","init","into","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","LineStrip2D","LineStrip3D","__clone_box","__clone_box","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","data_type","data_type","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","name","name","new_array","new_array","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Mat3x3","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data_type","deref","deref_mut","deserialize","drop","eq","fmt","from","from","from","index","init","into","lossless_try_into","lossy_into","new_array","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","Encoded","Encoded","EncodedMesh3D","EncodedMesh3DArrow","EncodedMesh3DArrowArray","EncodedMesh3DArrowArrayIterator","Glb","Glb","Gltf","Gltf","IndicesNotDivisibleBy3","Mesh3D","Mesh3DArray","Mesh3DArrayIterator","MeshFormat","MeshFormatArray","MeshFormatArrayIterator","MeshId","MismatchedPositionsNormals","MutableEncodedMesh3DArrowArray","MutableMesh3DArray","MutableMeshFormatArray","MutableRawMesh3DArray","Obj","Obj","PositionsNotDivisibleBy3","Raw","Raw","RawMesh3D","RawMesh3DArray","RawMesh3DArrayIterator","RawMeshError","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","albedo_factor","arr","arr","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","as_any","as_any","as_any","as_any","as_arc","as_arc","as_arc","as_arc","as_box","as_box","as_box","as_box","as_mut_any","as_mut_any","as_mut_any","as_mut_any","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consume_next","consume_next","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","field_albedo_factor","field_albedo_factor","field_bytes","field_bytes","field_format","field_format","field_indices","field_indices","field_mesh_id","field_mesh_id","field_mesh_id","field_mesh_id","field_normals","field_normals","field_positions","field_positions","field_transform","field_transform","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","has_validity","has_validity","hash","hash","index_iter","index_iter","indices","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_validity","init_validity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","mesh_id","mesh_id","mesh_id","mesh_id","name","new","new","new","new","new_array","new_array","new_array","new_array","new_array","new_array","next","next","next","next","normals","num_triangles","offsets","offsets","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","positions","provide","push_null","push_null","push_null","push_null","random","reserve","reserve","reserve","reserve","return_next","return_next","sanity_check","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transform","transform","try_extend","try_extend","try_extend","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","types","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity","validity","validity","validity","validity_iter","validity_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","MAX","MsgId","ZERO","__clone_box","arrow_deserialize","arrow_serialize","as_u128","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","data_type","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","get_hash","hash","init","into","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","partial_cmp","random","saturating_as","saturating_cast_from","serialize","short_string","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","MutablePoint2DArray","MutablePoint3DArray","Point2D","Point2DArray","Point2DArrayIterator","Point3D","Point3DArray","Point3DArrayIterator","ZERO","ZERO","__clone_box","__clone_box","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","as_any","as_any","as_arc","as_arc","as_box","as_box","as_mut_any","as_mut_any","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","consume_next","consume_next","data_type","data_type","data_type","data_type","data_type","data_type","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","field_x","field_x","field_x","field_x","field_y","field_y","field_y","field_y","field_z","field_z","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","has_validity","has_validity","init","init","init","init","init","init","init","init","init_validity","init_validity","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","name","new","new","new","new","new_array","new_array","next","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","push_null","reserve","reserve","return_next","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","shrink_to_fit","shrink_to_fit","to_owned","to_owned","try_extend","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity","validity","validity_iter","validity_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","y","y","z","IDENTITY","Quaternion","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data_type","default","deref","deref_mut","deserialize","drop","eq","fmt","from","from","init","into","lossless_try_into","lossy_into","name","new","new_array","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","w","wrapping_as","wrapping_cast_from","x","y","z","Radius","__clone_box","arrow_deserialize","arrow_serialize","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","data_type","deref","deref_mut","drop","fmt","from","from","init","into","lossless_try_into","lossy_into","name","new_array","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","MutableRect2DArray","Rect2D","Rect2DArray","Rect2DArrayIterator","XCYCW2H2","XCYCW2H2","XCYCWH","XCYCWH","XYWH","XYWH","XYXY","XYXY","YXHW","YXHW","YXYX","YXYX","__clone_box","arr","arrow_deserialize","arrow_serialize","as_any","as_arc","as_box","as_mut_any","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","data_type","data_type","data_type","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","fmt","fmt","from","from","from","from","from_xywh","height","index_iter","init","init","init","init","into","into","into","into","into_iter","into_iter","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new_array","next","offsets","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","reserve","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","shrink_to_fit","to_owned","top_left_corner","try_extend","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","types","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","vzip","vzip","vzip","vzip","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","MutableScalarPlotPropsArray","Scalar","ScalarPlotProps","ScalarPlotPropsArray","ScalarPlotPropsArrayIterator","__clone_box","__clone_box","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","as_any","as_arc","as_box","as_mut_any","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","consume_next","data_type","data_type","data_type","data_type","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","field_scattered","field_scattered","fmt","fmt","fmt","from","from","from","from","from","from","has_validity","init","init","init","init","init","init_validity","into","into","into","into","into","into_iter","into_iter","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","name","new","new_array","new_array","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","reserve","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scattered","shrink_to_fit","to_owned","to_owned","try_extend","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity_iter","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","MutableSize3DArray","Size3D","Size3DArray","Size3DArrayIterator","arrow_deserialize","arrow_serialize","as_any","as_arc","as_box","as_mut_any","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","consume_next","data_type","data_type","data_type","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","field_x","field_x","field_y","field_y","field_z","field_z","fmt","fmt","from","from","from","from","has_validity","init","init","init","init","init_validity","into","into","into","into","into_iter","into_iter","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new_array","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","reserve","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","shrink_to_fit","try_extend","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity_iter","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","y","z","BadTensorShape","ClassId","ClassId","DEFAULT_NAME_DEPTH","DEFAULT_NAME_HEIGHT","DEFAULT_NAME_WIDTH","Depth","Depth","F32","F32","F64","F64","I16","I16","I32","I32","I64","I64","I8","I8","JPEG","JPEG","MutableTensorArray","MutableTensorDataArray","MutableTensorDataMeaningArray","MutableTensorDimensionArray","NotContiguousStdOrder","Tensor","TensorArray","TensorArrayIterator","TensorCastError","TensorData","TensorDataArray","TensorDataArrayIterator","TensorDataMeaning","TensorDataMeaningArray","TensorDataMeaningArrayIterator","TensorDimension","TensorDimensionArray","TensorDimensionArrayIterator","TensorId","TensorTrait","TypeMismatch","U16","U16","U32","U32","U64","U64","U8","U8","Unknown","Unknown","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","arr","arr","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","as_any","as_any","as_any","as_any","as_arc","as_arc","as_arc","as_arc","as_box","as_box","as_box","as_box","as_mut_any","as_mut_any","as_mut_any","as_mut_any","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consume_next","consume_next","data","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","field_data","field_data","field_meaning","field_meaning","field_meter","field_meter","field_name","field_name","field_shape","field_shape","field_size","field_size","field_tensor_id","field_tensor_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get_hash","has_validity","has_validity","hash","height","id","id","index_iter","index_iter","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_validity","init_validity","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_shaped_like_an_image","is_shaped_like_an_image","is_vector","is_vector","len","len","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","meaning","meaning","meaning","meter","name","name","named","new","new","new","new","new_array","new_array","new_array","new_array","new_array","next","next","next","next","num_dim","num_dim","offsets","offsets","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","provide","push_null","push_null","push_null","push_null","random","reserve","reserve","reserve","reserve","return_next","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","shape","shape","shape","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","size","source","tensor_id","tensor_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_extend","try_extend","try_extend","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","types","unnamed","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity","validity","validity","validity","validity_iter","validity_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","source","MutableTextEntryArray","TextEntry","TextEntryArray","TextEntryArrayIterator","__clone_box","arrow_deserialize","arrow_serialize","as_any","as_arc","as_box","as_mut_any","az","az","az","az","body","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","consume_next","data_type","data_type","data_type","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","field_body","field_body","field_level","field_level","fmt","fmt","from","from","from","from","from_body","has_validity","init","init","init","init","init_validity","into","into","into","into","into_iter","into_iter","len","level","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new","new_array","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","push_null","reserve","return_next","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","shrink_to_fit","to_owned","try_extend","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity_iter","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","IDENTITY","MutablePinholeArray","MutableRigid3Array","MutableTransformArray","Pinhole","Pinhole","Pinhole","PinholeArray","PinholeArrayIterator","Rigid3","Rigid3","Rigid3","Rigid3Array","Rigid3ArrayIterator","Transform","TransformArray","TransformArrayIterator","Unknown","Unknown","__clone_box","__clone_box","__clone_box","arr","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","as_any","as_any","as_any","as_arc","as_arc","as_arc","as_box","as_box","as_box","as_mut_any","as_mut_any","as_mut_any","aspect_ratio","az","az","az","az","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","child_from_parent","clone","clone","clone","clone_into","clone_into","clone_into","consume_next","consume_next","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","field_image_from_cam","field_image_from_cam","field_resolution","field_resolution","field_rotation","field_rotation","field_translation","field_translation","fmt","fmt","fmt","fmt","fmt","fmt","focal_length","focal_length_in_pixels","fov_y","from","from","from","from","from","from","from","from","from","from","from","from","has_validity","has_validity","image_from_cam","index_iter","init","init","init","init","init","init","init","init","init","init","init","init","init_validity","init_validity","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","name","new","new","new","new_array","new_array","new_array","new_child_from_parent","new_parent_from_child","next","next","next","offsets","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent_from_child","principal_point","push_null","push_null","push_null","reserve","reserve","reserve","resolution","resolution","return_next","return_next","rotation","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","translation","try_extend","try_extend","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","validity","validity","validity","validity","validity","validity_iter","validity_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","DISPLAY_PRECISION","Vec2D","Vec3D","Vec4D","__clone_box","__clone_box","__clone_box","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","data_type","data_type","data_type","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","index","index","init","init","init","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","name","name","new","new_array","new_array","new_array","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","w","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x","y","y","y","z","z","Arrow3D","BBox2D","Box3","ClassicTensor","DTYPE","Dense","F16","F16","F32","F32","F64","F64","I16","I16","I32","I32","I64","I64","I8","I8","Jpeg","Pinhole","Quaternion","Rigid3","TensorDataStore","TensorDataType","TensorDataTypeTrait","TensorElement","Transform","U16","U16","U32","U32","U64","U64","U8","U8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_f64","as_slice","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","data","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","dtype","dtype","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get","half_size","id","id","init","init","init","init","init","init","into","into","into","into","into","into","is_empty","is_shaped_like_an_image","is_shaped_like_an_image","is_vector","is_vector","len","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","max","meaning","meaning","meaning","min","new","num_dim","num_dim","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","rotation","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","serialize","serialize","shape","shape","shape","size","tensor_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","translation","try_as_u16","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","build_frame_nr","build_log_time","build_some_colors","build_some_instances","build_some_instances_from","build_some_labels","build_some_point2d","build_some_rects","Decoder","az","borrow","borrow_mut","buffer","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","encode","from","init","into","into_iter","lossless_try_into","lossy_into","new","next","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","zdecoder","arrow2","arrow2_convert","HASH_RANDOM_STATE","Hash128","Hash64","ZERO","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","double_hash","drop","drop","eq","eq","equivalent","equivalent","first64","fmt","fmt","from","from","get_hash","get_hash","hash","hash","hash","hash","hash","hash64","hash64","hash_with_seed","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","second64","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","BatchIndex","FullIndex","Index","IndexHash","Integer","NONE","Pixel","Sequence","SequentialIndex","String","Uuid","__clone_box","__clone_box","__clone_box","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","first64","fmt","fmt","fmt","fmt","from","from","from","from","from","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash64","init","init","init","into","into","into","is_empty","is_none","is_some","len","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","second64","serialize","serialize","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ArrowSerializationError","BadComponentValues","COL_COMPONENTS","COL_TIMELINES","Component","ComponentBundle","ENTITY_PATH_KEY","MissingComponentsField","MissingEntityPath","MissingTimelinesField","MsgBundle","MsgBundleError","MultipleTimepoints","NoRowsInTimeline","PathParseError","Result","SerializableComponent","Unreachable","__clone_box","__clone_box","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","components","data_type","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","entity_path","extract_components","extract_timelines","field","find_component","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","msg_id","name","name","name","nb_components","nb_instances","nb_instances","nb_rows","nb_rows","new","new","new_empty","new_from_boxed","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pack_components","provide","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","source","time_point","to_owned","to_owned","to_string","to_string","try_append_component","try_build_msg_bundle1","try_build_msg_bundle2","try_build_msg_bundle3","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","value","value_boxed","value_list","vzip","vzip","vzip","wrap_in_listarray","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","BadEscape","ComponentName","ComponentPath","DoubleSlash","EmptyString","EntityPath","EntityPathHash","EntityPathImpl","EntityPathPart","Index","InvalidSequence","LeadingSlash","MissingSlash","Name","PathParseError","UnterminatedString","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","component_name","component_name","component_path","deref","deref_mut","deserialize","drop","entity_path","entity_path","entity_path_impl","eq","equivalent","fmt","fmt","from","from","from","from","get_hash","hash","hash","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","parse_entity_path","parse_path","partial_cmp","parts","path","saturating_as","saturating_cast_from","serialize","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","details","ComponentName","__clone_box","as_ref","as_str","az","borrow","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","deref","deref","deref_mut","deserialize","drop","eq","eq","equivalent","fmt","fmt","from","from","from","full_name","get_hash","hash","hash","init","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","serialize","short_name","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","ComponentPath","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","component_name","component_name","deref","deref_mut","deserialize","drop","entity_path","entity_path","eq","equivalent","fmt","from","get_hash","hash","init","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","EntityPath","EntityPathHash","NONE","__clone_box","__clone_box","as_slice","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from_iter","get_hash","get_hash","hash","hash","hash","hash","hash64","hash64","init","init","into","into","is_child_of","is_descendant_of","is_none","is_root","is_some","iter","join","last","len","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","parent","partial_cmp","path","root","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","EntityPathImpl","__clone_box","as_slice","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","from","get_hash","hash","init","into","is_root","iter","last","len","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","parent","partial_cmp","parts","push","root","saturating_as","saturating_cast_from","serialize","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","BadEscape","DoubleSlash","EmptyString","InvalidSequence","LeadingSlash","MissingSlash","PathParseError","UnterminatedString","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","eq","equivalent","fmt","fmt","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","parse_entity_path","parse_part","provide","saturating_as","saturating_cast_from","to_string","try_from","try_into","type_id","unescape_string","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","details","Duration","MAX","NANOS_PER_MILLI","NANOS_PER_SEC","SEC_PER_DAY","SEC_PER_HOUR","SEC_PER_MINUTE","Time","__clone_box","__clone_box","add","add_assign","as_nanos","as_secs_f32","as_secs_f64","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","exact_format","fmt","fmt","format","format_time","from","from","from","from","from","from","from_millis","from_nanos","from_ns_since_epoch","from_seconds_since_epoch","from_secs","from_us_since_epoch","get_hash","get_hash","hash","hash","init","init","into","into","is_abolute_date","lerp","lossless_try_into","lossless_try_into","lossy_into","lossy_into","nanos_since_epoch","neg","now","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","sub","sub","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Sequence","Time","TimeInt","TimePoint","TimeType","Timeline","TimelineName","_IMPL_NUM_FromPrimitive_FOR_TimeType","__clone_box","__clone_box","arrow","arrow_deserialize","arrow_serialize","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","cmp","data_type","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","format","format_range","from","from","from","from_i64","from_iter","from_u64","get","get_hash","get_hash","hash","hash","hash","init","init","insert","into","into","into_iter","into_iter","is_empty","is_timeless","iter","lossless_try_into","lossless_try_into","lossy_into","lossy_into","name","new_array","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","remove","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","time_int","timeless","timeline","timelines","times","to_owned","to_owned","try_from","try_from","try_into","try_into","typ","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","TimePointArray","TimePointIterator","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","lossless_try_into","lossless_try_into","lossy_into","lossy_into","next","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","time_points","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","BEGINNING","MAX","MIN","TimeInt","__clone_box","abs","add","add","add_assign","as_f32","as_f64","as_i64","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","eq","equivalent","fmt","from","from","from","from","get_hash","hash","init","into","is_timeless","lossless_try_into","lossy_into","neg","overflowing_as","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_cast_from","serialize","sub","sub","sub_assign","sum","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","Timeline","TimelineName","__clone_box","__clone_box","as_ref","as_str","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","cmp","default","default","deref","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","format_time_range","from","from","from","from","get_hash","get_hash","hash","hash","hash","init","init","into","into","log_time","lossless_try_into","lossless_try_into","lossy_into","lossy_into","name","name","new","new","new_sequence","new_temporal","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","typ","typ","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","TimeRange","TimeRangeF","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","contains","contains","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","fmt","fmt","from","from","from","init","init","into","into","inverse_lerp","is_empty","length","length","lerp","lossless_try_into","lossless_try_into","lossy_into","lossy_into","max","max","min","min","new","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","point","point","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","TimeReal","__clone_box","abs","add","add","add_assign","as_f32","as_f64","az","borrow","borrow_mut","cast_from","ceil","checked_as","checked_cast_from","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","eq","equivalent","floor","fmt","from","from","from","from","from","from","from","get_hash","hash","init","into","lossless_try_into","lossy_into","mul","neg","overflowing_as","overflowing_cast_from","partial_cmp","partial_cmp","round","saturating_as","saturating_cast_from","serialize","sub","sub","sub_assign","sum","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from"],"q":["re_log_typesre_log_types::arrow_msg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_typesre_log_types::component_types::arrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::bbox","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::class_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::contextre_log_types::component_types::coordinatesre_log_types::component_types::instance_key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::keypoint_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::label","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::linestrip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::mat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::mesh3dre_log_types::component_types::msg_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::pointre_log_types::component_types::quaternion","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::radius","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::rect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::scalarre_log_types::component_types::size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::tensorre_log_types::component_types::tensor::TensorCastError","re_log_types::component_types::text_entry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::component_types::transformre_log_types::component_types::vec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::datagen","","","","","","","","re_log_types::encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::external","","re_log_types::hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::msg_bundle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path::PathParseError","re_log_types::path::component_name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path::component_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path::entity_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path::entity_path_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path::parse_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::path::parse_path::PathParseError","re_log_types::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::time_point","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::time_point::arrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::time_point::time_int","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::time_point::timeline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::time_range","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_log_types::time_real","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","The user-chosen name of the application doing the logging.","A 3D Arrow","A 3D Arrow","","Log an entity using an <code>ArrowMsg</code>.","","","","A new recording has begun.","Oriented 3D box","An N-dimensional collection of numbers.","","","","Densely packed tensor","A signed duration represented as nanoseconds since unix …","","Compressed/encoded mesh format","An operation (like a ‘clear’) on an <code>EntityPath</code>.","Server-backed operation on an <code>EntityPath</code>.","16-bit floating point number.","16-bit floating point number.","32-bit floating point number.","32-bit floating point number.","64-bit floating point number.","64-bit floating point number.","Some batches want to provide explicit indices","","","Sent when the client shuts down the connection.","Signed 16 bit integer.","Signed 16 bit integer.","Signed 32 bit integer.","Signed 32 bit integer.","Signed 64 bit integer.","Signed 64 bit integer.","Signed 8 bit integer.","Signed 8 bit integer.","The key of a table.","A 128 bit hash of <code>Index</code> with negligible risk of collision.","Any integer, e.g. a hash or an arbitrary identifier.","A JPEG image.","The most general log message sent from the SDK to the …","A Generic 3D Mesh.","","A unique id per <code>Mesh3D</code>.","A unique id per <code>crate::LogMsg</code>.","","Perhaps from some manual data ingestion?","","Camera perspective projection (a.k.a. intrinsics).","The parent is some local camera space, the child an image …","X,Y pixel coordinates, from top left.","The official Rerun Python Logging SDK","Order: XYZW","","A raw “triangle soup” mesh.","A unique id per recording (a stream of <code>LogMsg</code>es).","","","A proper rigid 3D transform, i.e. a rotation and a …","For instance: the parent is a 3D world space, the child a …","For arrays, assumed to be dense (0, 1, 2, …).","Many batches use implicit sequential-indexing","Anything goes.","The data types supported by a <code>ClassicTensor</code>.","The data types supported by a <code>ClassicTensor</code>.","","The data that can be stored in a <code>ClassicTensor</code>.","A date-time represented as nanoseconds since unix epoch","Either nanoseconds or sequence numbers.","","","Like <code>TimeRange</code>, but using <code>TimeReal</code> for improved precison.","Either nanoseconds or sequence numbers.","","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","The name of a timeline. Often something like <code>&quot;log_time&quot;</code> or …","A transform between two spaces.","Unsigned 16 bit integer.","Unsigned 16 bit integer.","Unsigned 32 bit integer.","Unsigned 32 bit integer.","Unsigned 64 bit integer.","Unsigned 64 bit integer.","Unsigned 8 bit integer.","Unsigned 8 bit integer.","We don’t know the transform, but it is …","UUID/GUID","","The recording id:s given to recordings that don’t have …","","","","","","","","","Albedo factor applied to the final color of the mesh.","The user-chosen name of the application doing the logging.","<code>ArrowMsg</code> is the <code>crate::LogMsg</code> sub-type containing an Arrow …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Potentially user-facing component types.","","","","The actual contents of the tensor.","Generate random data for tests and benchmarks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The per-element data format. numpy calls this <code>dtype</code>.","Saving/loading <code>LogMsg</code>:es to/from a file.","","Build a <code>EntityPath</code>:","Build a <code>Vec&lt;EntityPathPart&gt;</code>:","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Column-major projection matrix.","","","Optionally, the flattened indices array for this mesh.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","True if the recording is one of the official Rerun …","","","","","","","","","","","","","","","","","Lower right corner.","","","The per-element data meaning Used to indicated if the data …","","","Upper left corner.","","","Structs and functions used for framing and de-framing a …","","A unique id per <code>EntityPathOpMsg</code>.","Name of the timeline (e.g. “log_time”).","Optionally, the flattened normals array for this mesh.","","","","","","","","","","","","","","","","","","","","","Every logged entity in Rerun is logged to an <code>EntityPath</code>.","What operation.","The flattened positions array of this mesh.","","Should be unique for each recording.","","Pixel resolution (usually integers) of child image space. …","How is the child rotated?","","","","","","","","","","","","","","","","","","","","","","","","","","Example: <code>[h, w, 3]</code> for an RGB image, stored in …","When the recording started.","Unique identifier for the tensor","","","Time information (when it was logged, when it was …","","","","","","","","","","","","","","four columns of an affine transformation matrix","Translation to parent from child.","","","","","","","","","","","","","","","","","","Sequence or time?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message containing an Arrow payload","","","","","","","","Arrow chunk","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","A unique id per <code>crate::LogMsg</code>.","","","","","Arrow schema","","","","","Build a single Arrow log message tuple from this <code>MsgBundle</code>…","","","","","","","","","","A 3D Arrow","","","A 3D bounding box represented by it’s half-lengths","","A 16-bit ID representing a type of semantic class.","The data is an annotated <code>crate::component_types::ClassId</code> …","An RGBA color tuple.","Image data interpreted as depth map.","","Compressed/encoded mesh format","","","","","<code>arrow2_convert</code> helper for fields of type <code>[T; SIZE]</code>","","","","","","","A number used to specify a specific instance in an entity.","","A 16-bit ID representing a type of semantic keypoint …","A String label component","A Line Strip of 2D points","A Line Strip of 3D points","A 3x3 column-major Matrix made up of 3 Vecs","A Generic 3D Mesh.","","A unique id per <code>Mesh3D</code>.","A unique id per <code>crate::LogMsg</code>.","","Camera perspective projection (a.k.a. intrinsics).","The parent is some local camera space, the child an image …","A point in 2D space.","A point in 3D space.","A Quaternion represented by 4 real numbers.","A Radius component","","A raw “triangle soup” mesh.","A rectangle in 2D space.","","A proper rigid 3D transform, i.e. a rotation and a …","For instance: the parent is a 3D world space, the child a …","A double-precision scalar.","Additional properties of a scalar when rendered as a plot.","","A Multi-dimensional Tensor","Flattened <code>Tensor</code> data payload","","Flattened <code>Tensor</code> data payload","A unique id per <code>Tensor</code>.","","A text entry component, comprised of a text body and its …","A transform between two spaces.","","","","","Default behavior: guess based on shape","We don’t know the transform, but it is …","A vector in 2D space.","A vector in 3D space.","A vector in 4D space.","","[x_center, y_center, width/2, height/2]","[x_center, y_center, width, height]","[x, y, w, h], with x,y = left,top.","[x0, y0, x1, y1], with x0,y0 = left,top and x1,y1 = …","[y, x, h, w], with x,y = left,top.","[y0, x0, y1, x1], with x0,y0 = left,top and x1,y1 = …","","Albedo factor applied to the final color of the mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data payload","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Column-major projection matrix.","Optionally, the flattened indices array for this mesh.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Iterate over the registered field types","","","","","","","","","","","","","The per-element data meaning Used to indicated if the data …","","","","Reciprocal scale of meter unit for depth images","","Optional name of the dimension, e.g. “color” or “…","","Optionally, the flattened normals array for this mesh.","","","","","","","","","","The flattened positions array of this mesh.","","","","","Pixel resolution (usually integers) of child image space. …","How is the child rotated?","","","","","","","","","","Dimensionality and length","","Number of elements on this dimension. I.e. size-1 is the …","","","Unique identifier for the tensor","","","","four columns of an affine transformation matrix","Translation to parent from child.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 3D Arrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 3D bounding box represented by it’s half-lengths","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","A 16-bit ID representing a type of semantic class.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","An RGBA color tuple.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","The <code>AnnotationContext</code> provides additional information on …","","Information about an Annotation.","","","The description of a semantic Class.","Helper struct for converting <code>ClassDescription</code> to arrow","","","Helper struct for converting <code>AnnotationContext</code> to arrow","","","Helper struct for converting <code>ClassDescription</code> to arroweturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","<code>ClassId</code> or <code>KeypointId</code> to which this annotation info …","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Semantic connections between two keypointsow we interpret the coordinate system of an entity/space.","The six cardinal directions for 3D view-space and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns a matrix that translates RUB to this coordinate …","","","Choses a coordinate system based on just an up-axis.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an error if this does not span all three …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a matrix that translates this coordinate system to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A number used to specify a specific instance in an entity.","A special value indicating that this [<code>InstanceKey]</code> is …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Are we referring to a specific instance of the entity …","Are we referring to all instances of the entity (e.g. all …","","","","","","","","","","","Returns <code>None</code> if splat, otherwise the index.","","","","","","","","","","","A 16-bit ID representing a type of semantic keypoint …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","A String label component","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A Line Strip of 2D points","A Line Strip of 3D points","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A 3x3 column-major Matrix made up of 3 Vecs","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Compressed/encoded mesh format","Helper struct for converting <code>EncodedMesh3D</code> to arrow","","","","","","","","A Generic 3D Mesh.","","","","","","A unique id per <code>Mesh3D</code>.","","","","","","","","","","","A raw “triangle soup” mesh.","","","","","","","","","Albedo factor applied to the final color of the mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Optionally, the flattened indices array for this mesh.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optionally, the flattened normals array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The flattened positions array of this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","four columns of an affine transformation matrixll ones.","A unique id per <code>crate::LogMsg</code>.","All zeroes.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A shortened string representation of the message id.","","","","","","","","","","","","","A point in 2D space.","","","A point in 3D space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Quaternion represented by 4 real numbers.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","A Radius component","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A rectangle in 2D space.","","","","[x_center, y_center, width/2, height/2]","","[x_center, y_center, width, height]","","[x, y, w, h], with x,y = left,top.","","[x0, y0, x1, y1], with x0,y0 = left,top and x1,y1 = …","","[y, x, h, w], with x,y = left,top.","","[y0, x0, y1, x1], with x0,y0 = left,top and x1,y1 = …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A double-precision scalar.","Additional properties of a scalar when rendered as a plot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The data is an annotated <code>crate::component_types::ClassId</code> …","","","","","Image data interpreted as depth map.","","","","","","","","","","","","","","","","","","","","A Multi-dimensional Tensor","","","","Flattened <code>Tensor</code> data payload","","","","","","Flattened <code>Tensor</code> data payload","","","A unique id per <code>Tensor</code>.","","","","","","","","","","","","Default behavior: guess based on shape","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data payload","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The per-element data meaning Used to indicated if the data …","Reciprocal scale of meter unit for depth images","","Optional name of the dimension, e.g. “color” or “…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dimensionality and length","","","","","Number of elements on this dimension. I.e. size-1 is the …","","Unique identifier for the tensortext entry component, comprised of a text body and its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Camera perspective projection (a.k.a. intrinsics).","","The parent is some local camera space, the child an image …","","","A proper rigid 3D transform, i.e. a rotation and a …","","For instance: the parent is a 3D world space, the child a …","","","A transform between two spaces.","","","","We don’t know the transform, but it is …ocal length.","X &amp; Y focal length in pixels.","Field of View on the Y axis, i.e. the angle between top …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Column-major projection matrix.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Principal point of the pinhole camera, i.e. the …","","","","","","","","Pixel resolution (usually integers) of child image space. …","","","How is the child rotated?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Translation to parent from child.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of decimals shown for all vector display methods.","A vector in 2D space.","A vector in 3D space.","A vector in 4D space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Oriented 3D box","An N-dimensional collection of numbers.","","Densely packed tensor","16-bit floating point number.","16-bit floating point number.","32-bit floating point number.","32-bit floating point number.","64-bit floating point number.","64-bit floating point number.","Signed 16 bit integer.","Signed 16 bit integer.","Signed 32 bit integer.","Signed 32 bit integer.","Signed 64 bit integer.","Signed 64 bit integer.","Signed 8 bit integer.","Signed 8 bit integer.","A JPEG image.","","Order: XYZW","","The data types supported by a <code>ClassicTensor</code>.","The data types supported by a <code>ClassicTensor</code>.","","The data that can be stored in a <code>ClassicTensor</code>.","","Unsigned 16 bit integer.","Unsigned 16 bit integer.","Unsigned 32 bit integer.","Unsigned 32 bit integer.","Unsigned 64 bit integer.","Unsigned 64 bit integer.","Unsigned 8 bit integer.","Unsigned 8 bit integer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The actual contents of the tensor.","","","","","","","","","","","","","","","","","","","","","","","","","","The per-element data format. numpy calls this <code>dtype</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","The index must be the same length as the dimension.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","True if the shape has a zero in it anywhere.","","","Shape is one of <code>[N]</code>, <code>[1, N]</code> or <code>[N, 1]</code>","","Number of elements (the product of <code>Self::shape</code>).","","","","","","","","","","","","","Lower right corner.","","","The per-element data meaning Used to indicated if the data …","Upper left corner.","","Number of dimensions. Same as length of <code>Self::shape</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Example: <code>[h, w, 3]</code> for an RGB image, stored in …","Number of bytes used by the type","Unique identifier for the tensor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a (<code>Timeline</code>, <code>TimeInt</code>) tuple from <code>frame_nr</code> suitable …","Build a (<code>Timeline</code>, <code>TimeInt</code>) tuple from <code>log_time</code> suitable …","Create <code>len</code> dummy colors","Create <code>len</code> dummy <code>InstanceKey</code> keys. These keys will be …","","Create <code>len</code> dummy labels","Create <code>len</code> dummy <code>Point2D</code>","Create <code>len</code> dummy rectangles","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","128-bit hash. Negligible risk for collision.","64-bit hash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Hash the given value.","","","","","","","Hash the given value.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some batches want to provide explicit indices","The key of a table.","A 128 bit hash of <code>Index</code> with negligible risk of collision.","Any integer, e.g. a hash or an arbitrary identifier.","","X,Y pixel coordinates, from top left.","For arrays, assumed to be dense (0, 1, 2, …).","Many batches use implicit sequential-indexing","Anything goes.","UUID/GUID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>ComponentBundle</code> holds an Arrow component column, and its …","","","","","A <code>MsgBundle</code> holds data necessary for composing a single …","The errors that can occur when trying to convert between …","","","","","A trait to identify any <code>Component</code> that is ready to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the datatype of the bundled component, discarding …","","","","","","","","","","","Extract a vector of <code>ComponentBundle</code> from the message. This …","Extract a <code>TimePoint</code> from the “timelines” column. This …","Create a <code>Field</code> for this <code>Component</code>","Returns the index of <code>component</code> in the bundle, if it exists.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","A unique id per <code>crate::LogMsg</code>.","The name of the component","","The name of the Component, used as column name in the …","Returns the number of component collections in this …","Returns the number of <em>instances</em> for a given <code>row</code> in the …","Returns the number of <em>instances</em> for a given <code>row</code> in the …","Returns the number of <em>rows</em> in this bundle, i.e. the length …","Returns the number of <em>rows</em> for each component collections …","","Create a new <code>MsgBundle</code> with a pre-built Vec of …","","Create a new <code>ComponentBundle</code> from a boxed <code>Array</code>. The <code>Array</code> …","","","","","","","Pack the passed iterator of <code>ComponentBundle</code> into a …","","","","","","","","","","","","","","Try to append a collection of <code>Component</code> onto the …","Helper to build a <code>MessageBundle</code> from 1 component","Helper to build a <code>MessageBundle</code> from 2 components","Helper to build a <code>MessageBundle</code> from 3 components","","","","","","Extract a <code>MsgBundle</code> from an <code>ArrowMsg</code>.","","","","","","","","","","","","","","The Component payload <code>Array</code>.","Get the <code>ComponentBundle</code> value as a boxed <code>Array</code>.","Get the <code>ComponentBundle</code> value","","","","Wrap <code>field_array</code> in a single-element <code>ListArray</code>","","","","","","","","The name of an entity component, e.g. <code>pos</code> or <code>color</code>.","A <code>EntityPath</code> plus a <code>ComponentName</code>.","","","<code>camera / &quot;left&quot; / points / #42</code>","A 128 bit hash of <code>EntityPath</code> with negligible risk of …","<code>camera / &quot;left&quot; / points / #42</code>","The different parts that make up an <code>EntityPath</code>.","Array/table/map member. Each member must be of the same …","","","","Struct member. Each member can have a different type.","","","","","","","","","","","","","","“color”","","","","","","","<code>camera / &quot;left&quot; / points / #42</code>","","","","","","","","Returns the argument unchanged.","","","","precomputed hash","","Calls <code>U::from(self)</code>.","","","","","Parses an entity path, e.g. …","","","","","","","","","","","","","","","","","","","The name of an entity component, e.g. <code>pos</code> or <code>color</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Includes namespace, e.g. <code>rerun.color</code> or <code>ext.confidence</code>.","","","Precomputed hash of the string.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Excludes the rerun namespace, so you’ll get <code>color</code> but …","","","","","","","","","","","A <code>EntityPath</code> plus a <code>ComponentName</code>.","","","","","","","","","","","“color”","","","","","","<code>camera / &quot;left&quot; / points / #42</code>","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","<code>camera / &quot;left&quot; / points / #42</code>","A 128 bit hash of <code>EntityPath</code> with negligible risk of …","Sometimes used as the hash of <code>None</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","precomputed hash","","Precomputed 64-bit hash.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this a direct child of the other path.","Is this a strict descendant of the given path.","","","","","","","Number of parts","","","","","","","","","","Return <code>None</code> if root.","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>camera / &quot;left&quot; / points / #42</code>","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Number of components","","","","","","Return <code>None</code> if root.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Parses an entity path, e.g. …","","","","","","","","","","","","","","","","A signed duration represented as nanoseconds since unix …","","","","","","","A date-time represented as nanoseconds since unix epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Human-readable formatting","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If true, this time is likely relative to unix epoch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used e.g. for frames in a film.","Normal wall time.","Either nanoseconds or sequence numbers.","A point in time.","The type of a <code>TimeInt</code>.","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","The name of a timeline. Often something like <code>&quot;log_time&quot;</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Name of the timeline (e.g. “log_time”).","","","","","","","","","","","","","","","","Logging to this time means the data will show upp in all …","","","","","","","","","","Sequence or time?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The beginning of time.","","","Either nanoseconds or sequence numbers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","The name of a timeline. Often something like <code>&quot;log_time&quot;</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a formatted string of <code>time_range</code> on this <code>Timeline</code>.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Precomputed hash of the string.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The log time timeline to which all API functions will …","","","","","","Name of the timeline (e.g. “log_time”).","","","","","","","","","","","","","","","","","","","","","","","","","Sequence or time?","","","","","","","","","","","","","","Like <code>TimeRange</code>, but using <code>TimeReal</code> for improved precison.","","","","","","","","","","","","","","","","","","","","Inclusive","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Where in the range is this value? Returns 0-1 if within …","","The amount of time or sequences covered by this range.","The amount of time or sequences covered by this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Either nanoseconds or sequence numbers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,8,0,0,0,8,0,0,5,5,231,184,0,95,0,0,8,187,34,187,34,187,34,202,94,94,8,187,34,187,34,187,34,187,34,0,0,201,184,0,0,0,0,0,94,11,0,0,169,201,11,0,95,0,0,0,0,0,169,201,202,201,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,34,187,34,187,34,187,34,169,201,0,6,6,7,8,9,10,11,12,5,92,10,0,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,96,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,5,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,6,7,0,0,0,0,188,0,6,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,188,0,5,0,0,6,7,9,10,11,12,5,6,7,9,10,11,12,5,0,6,6,7,7,8,9,10,11,11,12,5,96,6,7,8,8,8,8,9,10,11,12,5,6,6,6,7,186,0,6,7,8,168,0,0,92,9,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,10,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,185,224,230,188,92,96,185,224,230,0,9,12,225,92,40,40,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,6,7,0,12,92,6,10,10,168,167,186,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,188,10,188,0,0,12,0,0,6,7,8,9,10,11,12,5,6,7,11,96,167,186,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,225,6,7,8,9,10,11,12,5,7,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,40,40,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,6,7,8,9,10,11,12,5,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,32,32,0,0,0,37,0,37,95,0,137,137,0,0,0,94,94,137,137,137,137,0,137,0,0,0,0,0,0,0,0,0,94,0,169,0,0,0,0,95,0,0,0,0,169,0,0,0,0,0,0,0,0,0,0,0,137,137,137,137,37,169,0,0,0,0,123,123,123,123,123,123,31,92,0,232,232,232,31,32,0,162,232,31,32,232,31,32,96,232,31,32,232,31,32,232,31,32,0,0,0,0,139,232,232,31,31,32,232,31,32,232,31,32,32,32,96,232,31,32,32,233,233,168,92,232,31,32,0,232,31,32,233,233,0,0,0,162,0,232,31,32,232,31,32,0,233,139,0,92,96,139,0,138,232,92,233,40,232,31,32,232,31,32,0,92,32,0,0,0,168,167,232,31,32,232,31,32,0,128,233,139,0,138,32,0,139,0,32,0,96,167,232,31,32,232,31,32,232,31,32,232,31,32,232,31,32,0,40,232,31,32,120,232,31,32,232,31,32,52,112,113,120,133,52,112,113,120,133,52,113,120,133,0,0,0,0,40,40,40,41,41,41,41,41,47,46,40,41,47,46,40,41,47,46,40,41,47,46,40,41,47,46,40,41,47,46,40,40,40,46,41,40,41,41,41,47,46,40,41,47,46,40,40,41,47,46,40,40,41,46,41,46,41,40,41,47,46,40,46,41,47,46,40,41,41,47,46,40,47,46,41,41,47,46,40,41,47,46,40,40,41,40,46,40,41,47,46,40,41,47,46,40,41,41,46,41,47,46,40,41,47,46,40,40,41,40,41,41,47,46,40,41,47,46,40,41,41,47,46,40,41,47,46,40,41,47,46,40,41,41,46,40,41,47,46,40,41,47,46,40,41,47,46,40,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,67,62,58,59,60,62,61,58,59,60,62,61,63,64,65,66,63,64,65,66,63,64,65,66,63,64,65,66,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,61,61,62,58,67,62,58,67,62,58,68,69,70,71,58,63,59,64,60,65,62,61,66,63,64,65,66,58,63,67,64,65,62,66,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,67,62,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,67,62,58,67,62,66,71,66,71,63,68,63,68,65,70,64,69,64,69,65,70,65,70,63,68,58,63,67,64,65,62,66,58,63,73,68,67,67,59,64,74,69,60,60,65,75,70,62,62,61,66,76,71,68,69,70,71,58,67,60,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,63,64,65,66,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,73,68,74,69,75,70,76,71,59,59,67,60,67,60,58,63,64,65,66,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,62,63,64,65,66,58,59,60,62,61,68,69,70,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,63,64,65,66,63,64,65,66,68,69,70,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,67,62,63,64,65,66,58,67,62,63,64,65,66,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,63,64,65,66,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,63,64,65,66,63,64,65,66,68,69,70,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,58,63,73,68,67,59,64,74,69,60,65,75,70,62,61,66,76,71,0,79,79,79,0,79,82,78,78,78,81,78,78,78,81,79,82,0,0,79,0,0,80,80,80,79,77,80,81,78,82,77,77,78,78,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,77,79,77,80,81,78,82,79,77,80,81,78,82,77,82,77,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,80,81,78,78,82,77,79,77,80,81,78,82,79,80,82,77,77,78,77,77,79,77,80,81,78,82,79,77,80,81,78,82,79,79,77,80,81,78,82,79,77,80,81,78,82,77,78,77,79,77,80,81,78,82,79,77,80,81,78,82,77,77,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,79,78,79,77,80,81,78,82,77,80,78,79,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,77,79,77,80,81,78,82,79,77,80,81,78,82,79,77,80,81,78,82,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,0,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,89,90,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,100,95,0,0,0,0,99,94,99,94,104,0,0,0,0,0,0,0,104,0,0,0,0,99,94,104,100,95,0,0,0,0,101,92,96,94,95,92,109,110,101,92,96,93,94,95,101,92,96,93,94,95,97,98,99,100,97,98,99,100,97,98,99,100,97,98,99,100,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,96,93,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,92,96,94,95,101,92,96,94,95,101,102,103,101,97,92,96,93,98,99,94,100,95,97,98,99,100,97,98,99,100,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,92,96,94,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,92,96,94,95,101,94,97,102,98,103,98,103,97,102,97,102,98,103,97,102,97,102,98,103,101,104,104,97,92,96,98,99,94,94,100,95,96,93,101,104,97,105,102,92,96,93,93,98,106,103,99,107,109,94,100,108,110,95,101,94,102,103,101,94,109,110,92,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,97,98,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,105,102,106,103,107,109,108,110,97,98,99,100,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,95,92,96,93,95,97,98,99,100,101,92,96,93,94,95,102,103,109,110,92,92,99,100,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,92,104,97,98,99,100,101,97,98,99,100,102,103,92,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,92,96,94,95,97,98,99,100,101,92,96,94,95,104,94,96,93,97,98,99,100,101,104,97,105,102,92,96,96,93,98,106,103,99,107,109,94,100,108,110,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,97,98,99,100,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,99,100,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,97,98,99,100,97,98,102,103,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,101,104,97,105,102,92,96,93,98,106,103,99,107,109,94,100,108,110,95,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,112,113,112,113,112,113,112,113,114,115,114,115,114,115,114,115,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,112,113,112,113,116,117,112,114,113,115,114,115,114,115,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,112,113,114,116,115,117,114,116,115,117,115,117,112,114,113,115,112,112,114,118,116,113,113,115,119,117,116,117,112,114,118,116,113,115,119,117,114,115,112,114,118,116,113,115,119,117,118,116,119,117,114,115,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,112,113,112,114,113,115,112,113,116,117,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,114,115,114,115,116,117,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,114,115,112,113,114,115,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,114,115,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,114,115,114,115,116,117,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,112,114,118,116,113,115,119,117,112,113,112,113,113,120,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,0,0,0,124,123,124,123,124,123,124,123,124,123,124,123,123,126,123,123,124,124,124,124,124,125,126,123,124,125,126,123,124,125,126,123,124,125,126,123,124,125,126,123,124,125,126,123,123,123,124,123,124,124,124,125,126,123,124,125,126,123,124,125,126,123,123,124,123,124,125,126,123,123,123,126,124,125,126,123,124,125,126,123,125,126,124,124,125,126,123,124,125,126,123,123,124,123,126,124,124,125,126,123,124,125,126,123,124,124,124,125,126,123,124,125,126,123,124,123,123,124,124,125,126,123,124,125,126,123,124,124,125,126,123,124,124,125,126,123,124,125,126,123,124,124,125,126,123,123,124,125,126,123,124,125,126,123,0,0,0,0,0,127,128,127,128,127,128,129,129,129,129,127,128,129,132,130,127,128,129,132,130,127,128,129,132,130,127,128,129,132,130,127,128,129,132,130,127,128,129,132,130,127,128,127,128,130,127,128,129,129,129,127,128,129,132,130,127,128,129,132,130,127,128,129,132,130,129,130,127,128,129,127,127,128,129,132,130,130,127,128,129,132,130,129,127,128,129,132,130,132,130,129,127,128,129,132,130,127,128,129,132,130,127,128,129,127,128,130,127,128,129,132,130,127,128,129,132,130,129,129,130,127,128,129,132,130,127,128,129,132,130,128,129,127,128,129,127,128,129,132,130,127,128,129,132,130,129,127,128,129,132,130,127,128,129,132,130,127,128,129,132,130,129,129,130,127,128,129,132,130,127,128,129,132,130,127,128,129,132,130,0,0,0,0,133,133,134,134,134,134,133,134,136,135,133,134,136,135,133,134,136,135,133,134,136,135,133,134,136,135,133,134,136,135,135,133,134,134,134,133,134,136,135,133,134,136,135,133,134,136,135,134,135,134,135,134,135,133,134,133,134,136,135,135,133,134,136,135,134,133,134,136,135,136,135,134,133,134,136,135,133,134,136,135,133,134,133,135,133,134,136,135,133,134,136,135,134,134,135,133,134,136,135,133,134,136,135,134,134,133,134,136,135,133,134,136,135,134,133,134,136,135,133,134,136,135,133,134,136,135,134,134,135,133,134,136,135,133,134,136,135,133,134,136,135,133,133,133,146,142,37,138,138,138,142,37,140,137,140,137,140,137,140,137,140,137,140,137,140,137,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,146,140,137,140,137,140,137,140,137,142,37,35,137,138,37,139,152,153,35,137,138,37,139,35,137,138,37,139,140,141,142,143,140,141,142,143,140,141,142,143,140,141,142,143,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,137,138,37,139,35,137,138,37,139,35,144,145,139,35,140,137,141,138,142,37,139,143,140,141,142,143,140,141,142,143,138,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,138,37,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,137,138,37,139,35,138,37,143,145,143,145,143,145,141,144,143,145,141,144,143,145,35,140,137,141,138,138,142,37,139,143,146,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,146,233,139,35,144,145,35,138,233,139,152,153,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,141,143,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,148,152,149,144,150,153,151,145,233,139,233,139,140,141,142,143,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,233,139,139,139,139,138,138,140,141,142,143,35,137,138,37,139,152,144,153,145,233,139,140,142,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,146,140,141,142,143,35,140,141,142,143,144,145,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,138,37,233,139,139,140,141,142,143,138,146,139,0,35,137,138,37,139,138,146,140,141,142,143,35,140,148,152,137,141,149,144,138,142,150,153,37,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,143,151,145,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,140,141,142,143,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,140,142,138,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,140,141,142,143,141,143,144,145,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,138,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,35,140,148,152,137,141,149,144,138,142,150,153,37,139,143,151,145,146,234,0,0,0,0,162,162,162,163,163,163,163,162,163,166,164,162,162,163,166,164,162,163,166,164,162,163,166,164,162,163,166,164,162,163,166,164,162,162,164,162,163,163,163,162,163,166,164,162,163,166,164,162,163,166,164,162,162,163,164,163,164,162,163,162,163,166,164,162,164,162,163,166,164,163,162,163,166,164,166,164,163,162,162,163,166,164,162,163,166,164,162,162,163,162,164,162,163,166,164,162,163,166,164,163,163,164,162,163,166,164,162,163,166,164,163,162,163,162,163,166,164,162,163,166,164,163,162,163,166,164,162,163,166,164,162,163,166,164,163,163,164,162,163,166,164,162,163,166,164,162,163,166,164,167,0,0,0,0,172,169,0,0,0,172,169,0,0,0,0,0,172,169,167,168,169,180,167,168,169,167,168,169,170,171,172,170,171,172,170,171,172,170,171,172,168,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,167,167,168,169,167,168,169,174,175,170,167,171,168,172,169,170,171,172,170,167,171,172,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,167,168,169,170,177,174,167,171,178,175,168,172,179,180,169,167,168,169,171,175,171,175,170,174,170,174,170,167,171,168,172,169,168,168,168,170,177,174,167,171,178,175,168,172,179,180,169,174,175,168,180,170,177,174,167,171,178,175,168,172,179,180,169,170,171,170,177,174,167,171,178,175,168,172,179,180,169,177,174,178,175,179,180,170,171,172,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,169,170,171,172,167,168,169,167,167,174,175,180,172,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,167,168,170,171,172,170,171,172,168,168,174,175,167,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,167,168,169,170,171,172,167,168,169,167,170,171,172,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,170,171,172,170,177,174,167,171,178,175,168,172,179,180,169,172,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,170,171,172,170,171,174,175,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,170,177,174,167,171,178,175,168,172,179,180,169,0,0,0,0,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,176,182,182,183,183,176,176,176,182,182,182,183,176,182,176,182,183,176,182,183,176,182,183,176,182,183,176,182,182,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,176,182,183,183,176,182,183,176,182,183,176,182,183,176,182,183,182,183,0,0,0,0,231,184,187,34,187,34,187,34,187,34,187,34,187,34,187,34,184,0,0,0,0,0,0,0,0,187,34,187,34,187,34,187,34,185,186,187,34,184,188,34,184,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,188,188,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,188,188,185,186,187,34,184,188,187,184,188,185,186,187,187,34,184,188,185,186,187,34,184,188,188,188,188,186,188,188,185,186,187,34,184,188,185,186,187,34,184,188,188,188,188,188,188,188,185,186,187,34,184,188,185,186,187,34,184,188,185,188,188,188,185,188,188,188,185,186,187,34,184,188,185,186,187,34,184,188,186,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,188,188,188,187,188,185,186,187,34,184,188,187,186,34,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,185,186,187,34,184,188,0,0,0,0,0,0,0,0,0,195,195,195,195,195,195,195,195,195,195,0,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,0,0,0,0,0,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,0,197,198,197,198,197,198,198,197,198,197,198,197,198,0,197,197,198,198,197,198,0,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,197,198,0,202,0,0,201,203,201,201,202,201,201,201,202,203,201,202,203,201,202,203,201,202,203,201,202,203,201,202,203,201,202,203,201,202,203,201,202,203,201,202,201,202,203,201,202,203,201,202,201,202,203,201,202,203,201,202,203,203,201,201,202,203,201,201,201,202,203,201,202,203,201,201,202,203,203,203,201,202,203,201,202,203,202,203,203,202,201,202,203,201,202,203,201,202,203,201,202,203,201,202,201,202,203,201,202,203,203,201,202,201,202,203,201,201,202,203,201,202,203,201,202,203,201,202,203,201,202,203,201,202,203,201,202,203,201,202,203,26,26,0,0,0,0,0,26,26,26,0,0,26,26,26,0,0,26,204,27,26,204,27,26,204,27,26,204,27,26,204,27,26,204,27,26,204,27,204,27,204,27,27,204,26,204,27,26,204,27,26,204,27,27,0,0,235,27,26,26,204,27,27,26,26,26,26,204,27,26,204,27,26,204,27,26,204,27,26,204,27,27,235,204,204,27,204,27,204,27,204,27,204,204,26,204,27,26,204,27,0,26,26,204,27,26,204,27,26,27,204,27,26,27,27,0,0,0,26,204,204,204,204,27,27,26,204,27,26,204,27,26,204,27,26,204,27,204,204,204,26,204,27,0,26,204,27,26,204,27,208,0,0,208,208,0,0,0,0,213,208,208,208,213,0,208,213,213,213,213,213,213,213,213,213,213,0,214,0,213,213,213,213,0,214,0,213,213,213,213,213,213,213,213,213,213,4,213,213,213,213,213,213,0,0,213,217,4,213,213,213,213,213,213,213,213,213,213,213,213,213,236,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,0,0,215,215,4,4,215,4,215,4,215,4,215,4,215,4,215,4,215,4,215,4,4,215,4,215,4,4,215,4,215,4,215,4,215,4,4,215,4,4,4,4,4,4,4,215,4,215,4,4,4,215,4,215,4,215,4,4,4,215,4,215,4,4,4,4,215,4,215,4,4,215,4,215,4,4,4,4,4,215,4,215,4,4,215,4,4,215,4,215,4,215,4,215,4,215,4,215,4,215,4,215,4,0,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,208,208,208,208,208,208,0,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,0,0,208,208,208,208,208,208,208,0,208,208,208,208,208,236,0,219,219,219,219,219,219,0,190,219,190,190,219,219,219,190,219,190,219,190,219,190,219,190,219,190,219,190,219,190,219,190,219,190,219,190,219,190,219,190,219,190,219,190,219,219,190,219,190,190,190,190,190,219,219,219,219,219,190,190,219,190,190,219,190,219,190,219,190,219,190,190,190,219,190,219,190,219,190,190,219,190,219,190,219,190,219,190,219,190,219,190,190,190,219,219,190,190,219,190,219,190,219,190,219,190,219,190,219,190,219,190,219,223,223,0,0,0,0,0,0,25,223,0,25,25,25,223,25,223,25,223,25,223,25,223,25,223,25,223,25,223,25,223,25,25,25,223,25,223,25,223,25,223,25,223,25,223,25,223,223,223,25,25,223,223,25,223,25,25,223,25,223,223,25,223,25,25,223,25,25,25,25,25,25,223,25,223,225,25,25,223,25,223,25,223,25,25,223,25,223,25,223,0,25,0,25,25,25,223,25,223,25,223,225,25,223,25,223,25,223,25,223,25,223,25,223,0,0,228,227,228,227,228,227,228,227,228,227,228,227,228,227,228,227,228,227,228,227,228,227,228,227,228,227,228,227,228,227,228,228,227,228,227,228,227,228,227,228,228,227,228,227,228,227,228,227,228,227,228,227,228,227,228,227,189,189,189,0,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,0,0,229,225,229,229,229,225,229,229,225,229,225,229,225,229,225,229,225,229,225,229,225,229,225,229,225,229,229,225,229,225,229,225,229,225,229,229,225,229,225,229,229,225,225,229,229,229,225,229,225,229,229,225,229,225,229,225,225,229,225,229,225,225,225,229,225,225,225,229,225,229,225,229,225,229,225,229,225,229,225,229,225,229,229,225,229,225,225,225,229,225,229,225,229,225,229,225,229,225,229,225,0,0,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,224,224,230,224,230,230,224,230,224,230,230,230,224,230,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,224,230,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[3,4],5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],13],[[7,7],13],0,0,0,0,0,0,[[],6],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[15,[6]]]],[[],[[15,[7]]]],[[],[[15,[8]]]],[[],[[15,[9]]]],[[],[[15,[10]]]],[[],[[15,[11]]]],[[],[[15,[12]]]],[[],[[15,[5]]]],[14],[14],[14],[14],[14],[14],[14],[14],0,0,[5,4],0,0,[[6,6],3],[[7,7],3],[[9,9],3],[[10,10],3],[[11,11],3],[[12,12],3],[[5,5],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[6,16],17],[[6,16],17],[[7,16],17],[[7,16],17],[[8,16],17],[[9,16],17],[[10,16],17],[[11,16],17],[[11,16],17],[[12,16],17],[[5,16],17],0,[[]],[[]],[[]],[12,8],[9,8],[18,8],[[]],[[]],[[]],[[]],[[]],[19,[[15,[6]]]],[20,6],[[],21],[[],21],0,0,[6],[7],[8,22],0,0,0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],[[2,[13]]]],[[7,7],[[2,[13]]]],0,0,0,[[],6],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,15],[7,15],[8,15],[9,15],[10,15],[11,15],[12,15],[5,15],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],0,0,0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[[]],[[]],[[]],[[]],[[],2],[[],2],0,[18,18],[[]],[14],[14],[[],[[15,[18]]]],[14],[[18,18],3],[[18,16],17],[[]],[[],14],[[]],[[],2],[[]],0,[[]],[[]],[[]],[[]],0,[18,15],[18,[[15,[25,26]]]],[[]],[[],15],[27,[[28,[18]]]],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],29],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,[[],30],[14],[31],[14],[14],[14],[14],[14],[14],[14],[14],[[32,16],17],[[32,16],17],0,[[]],[[]],[33,32],[[]],[[],[[2,[34]]]],[[],35],0,0,[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[],3],[[],3],[[],36],0,0,0,0,[[],2],[[],2],[[],2],[[]],[[]],[[]],0,[[],37],0,0,0,0,0,0,0,[[]],0,[[],14],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[38],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],0,0,0,[32,[[2,[39]]]],0,0,0,[[],23],0,0,0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[[2,[40]]],[[2,[40]]]],[40,29],[41,42],[41,[[44,[43]]]],[41,[[45,[43]]]],[41,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[40,40],[[]],[46],[41,30],[[],30],0,[[],41],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[15,[40]]]],[14],[14],[14],[14],[[40,40],3],0,0,0,0,[[41,16],17],[[40,16],17],[[]],[[]],[[]],[[]],0,[[],14],[[],14],[[],14],[[],14],[41],[[]],[[]],[[]],[[]],[47],[[]],[41,14],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],48],[[],41],[[]],[46,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41],[[41,14]],[46,[[2,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,15],[41],[[]],[[41,49],29],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[41,[2,[[50,[40]]]]],29],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,[[2,[51]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[[],2],[52,29],[[]],[[]],[[]],[[]],[[],2],[[],2],[52,52],[[]],[[],30],[14],[14],[[],[[15,[52]]]],[14],[[52,52],3],[[52,16],17],[53,52],[[]],[[],14],[[]],[[],2],[[]],[[],48],[[54,54,54],52],[[]],[[]],[[]],[[]],[[]],[52,15],[[]],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],[[],[[2,[55]]]],[55,29],[[]],[[]],[[]],[[]],[[],2],[[],2],[55,55],[[]],[[55,55],13],[[],30],[[],55],[14],[14],[[],[[15,[55]]]],[14],[[55,55],3],[[],3],[[55,16],17],[[]],[[],21],[55],[[],14],[[]],[[],2],[[]],[[],48],[[]],[[]],[[]],[[55,55],[[2,[13]]]],[[]],[[]],[55,15],[[]],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,[1],[[],[[2,[56]]]],[56,29],[[]],[[]],[[]],[[]],[[],2],[[],2],[56,56],[[]],[[],30],[14],[14],[[],[[15,[56]]]],[14],[[56,56],3],[[],3],[[56,16],17],[[],56],[[]],[57,56],[[],14],[[]],[[],2],[[]],[[],48],[[]],[[]],[[]],[[]],[[]],[56,15],[56],[[]],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[2,[58]]],[[2,[58]]]],[[[2,[59]]],[[2,[59]]]],[[[2,[60]]],[[2,[60]]]],[[],2],[[[2,[61]]],[[2,[61]]]],[58,29],[59,29],[60,29],[62,29],[61,29],[63,42],[64,42],[65,42],[66,42],[63,[[44,[43]]]],[64,[[44,[43]]]],[65,[[44,[43]]]],[66,[[44,[43]]]],[63,[[45,[43]]]],[64,[[45,[43]]]],[65,[[45,[43]]]],[66,[[45,[43]]]],[63,42],[64,42],[65,42],[66,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,[58,58],[67,67],[62,62],[[]],[[]],[[]],0,[68],[69],[70],[71],[[],30],[63,30],[[],30],[64,30],[[],30],[65,30],[[],30],[[],30],[66,30],0,0,0,0,[[],58],[[],63],[[],67],[[],64],[[],65],[[],62],[[],66],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[15,[58]]]],[[],[[15,[67]]]],[[],[[15,[62]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[58,58],3],[[67,67],3],[[62,62],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[58,16],17],[[63,16],17],[[67,16],17],[[64,16],17],[[65,16],17],[[62,16],17],[[66,16],17],[[]],[[]],[[]],[[]],[60,67],[[]],[[]],[[]],[[]],[[]],[[]],[67,60],[[]],[[]],[[]],[[[72,[61]]],62],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[63],[64],[65],[66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73],[[]],[74],[[]],[75],[[]],[76],[[]],0,0,0,0,0,0,0,[63,14],[64,14],[65,14],[66,14],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],48],[[],63],[[],64],[[],65],[[],66],[[]],[[]],[[]],[[]],[[]],[68,2],[69,2],[70,2],[71,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63],[64],[65],[66],[[63,14]],[[64,14]],[[65,14]],[[66,14]],[68,[[2,[58]]]],[69,[[2,[59]]]],[70,[[2,[60]]]],[71,[[2,[61]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,15],[67,15],[62,15],[63],[64],[65],[66],[[]],[[]],[[]],[[63,49],29],[[64,49],29],[[65,49],29],[[66,49],29],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[63,[2,[[50,[58]]]]],29],[[64,[2,[[50,[59]]]]],29],[[65,[2,[[50,[60]]]]],29],[[66,[2,[[50,[61]]]]],29],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,[[2,[51]]]],[64,[[2,[51]]]],[65,[[2,[51]]]],[66,[[2,[51]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[[],2],[77,29],[78],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[79,79],[77,77],[80,80],[81,81],[78,78],[82,82],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[77,23],[82,19],[77,23],[[],[[15,[79]]]],[[],[[15,[77]]]],[[],[[15,[80]]]],[[],[[15,[81]]]],[[],[[15,[78]]]],[[],[[15,[82]]]],[14],[14],[14],[14],[14],[14],[[79,79],3],[[77,77],3],[[80,80],3],[[81,81],3],[[78,78],3],[[82,82],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[79,16],17],[[77,16],17],[[80,16],17],[[80,16],17],[[81,16],17],[[78,16],17],[[78,16],17],[[82,16],17],[77,[[2,[78]]]],[[]],[[]],[[]],[[]],[[]],[[]],[83,[[15,[79,23]]]],[14,80],[3,82],[77,84],[19,[[15,[77]]]],[19,[[15,[78]]]],[[78,82],77],[77,[[2,[82]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[79,19],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[],48],[[81,80],78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,[[2,[78]]]],[77,[[15,[23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[79,15],[77,15],[80,15],[81,15],[78,15],[82,15],[79,19],0,[[]],[[]],[[]],[[]],[[]],[[]],[77,84],[[],23],[[],23],[83,[[85,[79]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,[[2,[78]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],[[],[[2,[86]]]],[86,29],[[]],[[]],[[]],[[]],[[],2],[[],2],[86,86],[[]],[[86,86],13],[[],30],[14],[14],[[],[[15,[86]]]],[14],[[86,86],3],[[],3],[[86,16],17],[[86,16],17],[[]],[[],21],[86],[[],14],[[]],[86,3],[86,3],[[],2],[[]],[[],48],[[]],[[]],[[]],[[86,86],[[2,[13]]]],[[]],[[]],[86,15],[86,[[2,[86]]]],[[]],[[],23],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,[1],[[],[[2,[87]]]],[87,29],[[]],[[]],[[]],[[]],[[],2],[[],2],[87,87],[[]],[[87,87],13],[[],30],[[],87],[14],[14],[[],[[15,[87]]]],[14],[[87,87],3],[[],3],[[87,16],17],[[]],[[],21],[87],[[],14],[[]],[[],2],[[]],[[],48],[[]],[[]],[[]],[[87,87],[[2,[13]]]],[[]],[[]],[87,15],[[]],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,[1],[[],[[2,[88]]]],[88,29],[[]],[[]],[[]],[[]],[[],2],[[],2],[88,88],[[]],[[],30],[14],[14],[[],[[15,[88]]]],[14],[[88,88],3],[[],3],[[88,16],17],[23,88],[[]],[[],14],[[]],[[],2],[[]],[[],48],[[]],[[]],[[]],[[]],[[]],[88,15],[[]],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,0,[1],[1],[[],2],[[],2],[89,29],[90,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[89,89],[90,90],[[]],[[]],[[],30],[[],30],[14],[14],[14],[14],[[],[[15,[89]]]],[[],[[15,[90]]]],[14],[14],[[89,89],3],[[90,90],3],[[89,16],17],[[90,16],17],[[]],[72,89],[[]],[72,90],[[],14],[[],14],[[]],[[]],[[],2],[[],2],[[]],[[]],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,15],[90,15],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[[],2],[91,29],[[]],[[]],[[]],[[]],[[],2],[[],2],[91,91],[[]],[[],30],[14],[14],[[],[[15,[91]]]],[14],[[91,91],3],[[91,16],17],[[],91],[84,91],[[]],[91],[[],14],[[]],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[91,15],[[]],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],0,0,0,[[],2],[[[2,[92]]],[[2,[92]]]],[[],2],[[[2,[93]]],[[2,[93]]]],[[[2,[94]]],[[2,[94]]]],[[[2,[95]]],[[2,[95]]]],[[],29],[92,29],[96,29],[93,29],[94,29],[95,29],[97,42],[98,42],[99,42],[100,42],[97,[[44,[43]]]],[98,[[44,[43]]]],[99,[[44,[43]]]],[100,[[44,[43]]]],[97,[[45,[43]]]],[98,[[45,[43]]]],[99,[[45,[43]]]],[100,[[45,[43]]]],[97,42],[98,42],[99,42],[100,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[101,101],[92,92],[96,96],[94,94],[95,95],[[]],[[]],[[]],[[]],[[]],[[101,101],13],[102],[103],[[],30],[97,30],[[],30],[[],30],[[],30],[98,30],[99,30],[[],30],[100,30],[[],30],0,0,0,0,[[],97],[[],98],[[],99],[[],100],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[15,[101]]]],[[],[[15,[92]]]],[[],[[15,[96]]]],[[],[[15,[94]]]],[[],[[15,[95]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[101,101],3],[[92,92],3],[[96,96],3],[[94,94],3],[[95,95],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[101,16],17],[[104,16],17],[[104,16],17],[[97,16],17],[[92,16],17],[[96,16],17],[[98,16],17],[[99,16],17],[[94,16],17],[[94,16],17],[[100,16],17],[[95,16],17],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,93],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],0,0,[101],[94],0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[97],[98],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105],[[]],[106],[[]],[107],[[]],[108],[[]],[97,14],[98,14],[99,14],[100,14],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[95,101],0,0,0,[[],48],[[],97],[[],98],[[],99],[[],100],[[]],[[]],[[]],[[]],[[]],[[]],[102,2],[103,2],[109,2],[110,2],0,[92,14],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[101,101],[[2,[13]]]],0,[38],[97],[98],[99],[100],[[],101],[[97,14]],[[98,14]],[[99,14]],[[100,14]],[102,[[2,[92]]]],[103,[[2,[93]]]],[92,[[15,[104]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,15],[92,15],[96,15],[94,15],[95,15],[97],[98],[99],[100],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],0,0,[[97,49],29],[[98,49],29],[[99,49],29],[[100,49],29],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[93,[[85,[96]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[97,[2,[[50,[92]]]]],29],[[98,[2,[[50,[93]]]]],29],[[99,[2,[[50,[94]]]]],29],[[100,[2,[[50,[95]]]]],29],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[97,[[2,[51]]]],[98,[[2,[51]]]],[99,[[2,[51]]]],[100,[[2,[51]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[[],[[2,[22]]]],[22,29],[22,111],[[]],[[]],[[]],[[]],[[],2],[[],2],[22,22],[[]],[[22,22],13],[[],30],[14],[14],[[],[[15,[22]]]],[14],[[22,22],3],[[],3],[[22,16],17],[[22,16],17],[[]],[[],21],[22],[[],14],[[]],[[],2],[[]],[[],48],[[]],[[]],[[]],[[22,22],[[2,[13]]]],[[],22],[[]],[[]],[22,15],[22,23],[[]],[[],23],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[1],[[[2,[112]]],[[2,[112]]]],[[[2,[113]]],[[2,[113]]]],[112,29],[113,29],[114,42],[115,42],[114,[[44,[43]]]],[115,[[44,[43]]]],[114,[[45,[43]]]],[115,[[45,[43]]]],[114,42],[115,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[112,112],[113,113],[[]],[[]],[116],[117],[[],30],[114,30],[[],30],[115,30],0,0,[[],114],[[],115],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[112,112],3],[[113,113],3],0,0,0,0,0,0,0,0,0,0,[[112,16],17],[[114,16],17],[[113,16],17],[[115,16],17],[[],112],[[]],[[]],[[]],[[]],[[]],[[],113],[[]],[[]],[[]],0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[114],[115],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[118],[[]],[119],[[]],[114,14],[115,14],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],48],[[],48],[[54,54],112],[[],114],[[54,54,54],113],[[],115],[[]],[[]],[116,2],[117,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[114],[115],[[114,14]],[[115,14]],[116,[[2,[112]]]],[117,[[2,[113]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[114],[115],[[]],[[]],[[114,49],29],[[115,49],29],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[114,[2,[[50,[112]]]]],29],[[115,[2,[[50,[113]]]]],29],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[114,[[2,[51]]]],[115,[[2,[51]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[[],2],[120,29],[[]],[[]],[[]],[[]],[[],2],[[],2],[120,120],[[]],[[],30],[[],120],[14],[14],[[],[[15,[120]]]],[14],[[120,120],3],[[120,16],17],[121,120],[[]],[[],14],[[]],[[],2],[[]],[[],48],[[54,54,54,54],120],[[]],[[]],[[]],[[]],[[]],[120,15],[[]],[[],15],[[],15],[[],24],[[]],[[]],[[]],0,[[]],[[]],0,0,0,0,[1],[[],[[2,[122]]]],[122,29],[[]],[[]],[[]],[[]],[[],2],[[],2],[122,122],[[]],[[],30],[14],[14],[14],[[122,16],17],[54,122],[[]],[[],14],[[]],[[],2],[[]],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[[[2,[123]]],[[2,[123]]]],[123,29],[124,42],[124,[[44,[43]]]],[124,[[45,[43]]]],[124,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[123,123],[[]],[124,30],[[],30],0,[[],124],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[123,123],3],[[124,16],17],[[123,16],17],[[]],[[]],[[]],[[]],[[54,54,54,54],123],[123,54],0,[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[125],[[]],[124,14],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],48],[[],124],[[]],[126,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124],[[124,14]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124],[[]],[123],[[124,49],29],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[124,[2,[[50,[123]]]]],29],[[],24],[[],24],[[],24],[[],24],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124,[[2,[51]]]],[[]],[[]],[[]],[[]],[123,54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[1],[[],[[2,[127]]]],[[[2,[128]]],[[2,[128]]]],[127,29],[128,29],[129,42],[129,[[44,[43]]]],[129,[[45,[43]]]],[129,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[127,127],[128,128],[[]],[[]],[130],[[],30],[[],30],[129,30],0,[[],129],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],0,0,[[127,16],17],[[128,16],17],[[129,16],17],[[]],[131,127],[[]],[[]],[[]],[[]],0,[[],14],[[],14],[[],14],[[],14],[[],14],[129],[[]],[[]],[[]],[[]],[[]],[132],[[]],[129,14],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[],48],[[],48],[[],129],[[]],[[]],[130,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[129],[[129,14]],[130,[[2,[128]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[129],[[]],[[]],[[129,49],29],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[129,[2,[[50,[128]]]]],29],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[129,[[2,[51]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[[2,[133]]],[[2,[133]]]],[133,29],[134,42],[134,[[44,[43]]]],[134,[[45,[43]]]],[134,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[135],[[],30],[134,30],0,[[],134],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],0,0,0,0,0,0,[[133,16],17],[[134,16],17],[[]],[[]],[[]],[[]],0,[[],14],[[],14],[[],14],[[],14],[134],[[]],[[]],[[]],[[]],[136],[[]],[134,14],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],48],[[],134],[[]],[135,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[134],[[134,14]],[135,[[2,[133]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[134],[[134,49],29],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[134,[2,[[50,[133]]]]],29],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[134,[[2,[51]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],0,0,[[],2],[[[2,[137]]],[[2,[137]]]],[[[2,[138]]],[[2,[138]]]],[[[2,[37]]],[[2,[37]]]],[[[2,[139]]],[[2,[139]]]],[[],29],[137,29],[138,29],[37,29],[139,29],[140,42],[141,42],[142,42],[143,42],[140,[[44,[43]]]],[141,[[44,[43]]]],[142,[[44,[43]]]],[143,[[44,[43]]]],[140,[[45,[43]]]],[141,[[45,[43]]]],[142,[[45,[43]]]],[143,[[45,[43]]]],[140,42],[141,42],[142,42],[143,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[35,35],[137,137],[138,138],[37,37],[139,139],[[]],[[]],[[]],[[]],[[]],[[35,35],13],[144],[145],0,[[],30],[140,30],[[],30],[141,30],[[],30],[142,30],[[],30],[[],30],[143,30],0,0,0,0,[[],140],[[],141],[[],142],[[],143],[21,138],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[15,[35]]]],[[],[[15,[138]]]],[[],[[15,[37]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[35,35],3],[[137,137],3],[[138,138],3],[[37,37],3],[[139,139],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[35,16],17],[[140,16],17],[[137,16],17],[[141,16],17],[[138,16],17],[[138,16],17],[[142,16],17],[[37,16],17],[[139,16],17],[[143,16],17],[[146,16],17],[[146,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[147,146],[[]],[[],[[2,[34]]]],[139,[[2,[34]]]],[[],21],0,0,[35],[21,138],[[],35],[139,35],0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[141],[143],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[148],[[]],[149],[[]],[150],[[]],[151],[[]],[[],3],[139,3],[[],3],[139,3],[140,14],[141,14],[142,14],[143,14],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[139,37],0,0,[[],48],0,[[21,23],138],[[],140],[[],141],[[],142],[[],143],[[]],[[]],[[]],[[]],[[]],[152,2],[144,2],[153,2],[145,2],[[],14],[139,14],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[35,35],[[2,[13]]]],[38],[140],[141],[142],[143],[[],35],[[140,14]],[[141,14]],[[142,14]],[[143,14]],[144,[[2,[138]]]],[145,[[2,[139]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,15],[138,15],[37,15],[[]],[139],0,[140],[141],[142],[143],0,[146,[[2,[39]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[140,49],29],[[141,49],29],[[142,49],29],[[143,49],29],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[156,[154,155]]],[[15,[139]]]],[[[158,[157,155]]],[[15,[139]]]],[[],15],[[[156,[159,155]]],[[15,[139]]]],[[[158,[160,155]]],[[15,[139]]]],[[[156,[83,155]]],[[15,[139]]]],[[[158,[131,155]]],[[15,[139]]]],[[[158,[21,155]]],[[15,[139]]]],[[[158,[161,155]]],[[15,[139]]]],[[[156,[54,155]]],[[15,[139]]]],[[[158,[57,155]]],[[15,[139]]]],[[[156,[131,155]]],[[15,[139]]]],[[[156,[161,155]]],[[15,[139]]]],[[[158,[159,155]]],[[15,[139]]]],[[[158,[154,155]]],[[15,[139]]]],[[[156,[160,155]]],[[15,[139]]]],[[[158,[83,155]]],[[15,[139]]]],[[[156,[21,155]]],[[15,[139]]]],[[[156,[157,155]]],[[15,[139]]]],[[[156,[57,155]]],[[15,[139]]]],[[[158,[54,155]]],[[15,[139]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[140,[2,[[50,[137]]]]],29],[[141,[2,[[50,[138]]]]],29],[[142,[2,[[50,[37]]]]],29],[[143,[2,[[50,[139]]]]],29],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,[21,138],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[140,[[2,[51]]]],[141,[[2,[51]]]],[142,[[2,[51]]]],[143,[[2,[51]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,138],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[[[2,[162]]],[[2,[162]]]],[162,29],[163,42],[163,[[44,[43]]]],[163,[[45,[43]]]],[163,42],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[162,162],[[]],[164],[[],30],[163,30],0,[[],163],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[162,162],3],[[],3],0,0,0,0,[[162,16],17],[[163,16],17],[[]],[[]],[[]],[[]],[[[165,[23]]],162],0,[[],14],[[],14],[[],14],[[],14],[163],[[]],[[]],[[]],[[]],[166],[[]],[163,14],0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],48],[[[165,[23]],[2,[23]]],162],[[],163],[[]],[164,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[163],[[163,14]],[164,[[2,[162]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[163],[[]],[[163,49],29],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[163,[2,[[50,[162]]]]],29],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[163,[[2,[51]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[[2,[167]]],[[2,[167]]]],[[[2,[168]]],[[2,[168]]]],[[[2,[169]]],[[2,[169]]]],[167,29],[168,29],[169,29],[170,42],[171,42],[172,42],[170,[[44,[43]]]],[171,[[44,[43]]]],[172,[[44,[43]]]],[170,[[45,[43]]]],[171,[[45,[43]]]],[172,[[45,[43]]]],[170,42],[171,42],[172,42],[168,[[2,[54]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[167,173],[167,167],[168,168],[169,169],[[]],[[]],[[]],[174],[175],[170,30],[[],30],[171,30],[[],30],[172,30],[[],30],0,0,0,[[],170],[[],167],[[],171],[[],172],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[15,[167]]]],[[],[[15,[168]]]],[[],[[15,[169]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[167,167],3],[[168,168],3],[[169,169],3],0,0,0,0,0,0,0,0,[[170,16],17],[[167,16],17],[[171,16],17],[[168,16],17],[[172,16],17],[[169,16],17],[168,[[2,[54]]]],[168,176],[168,[[2,[54]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[170],[171],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[177],[[]],[178],[[]],[179],[[]],[170,14],[171,14],[172,14],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],48],[[],170],[[],171],[[],172],[[]],[[]],[[]],[173,167],[173,167],[174,2],[175,2],[180,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[167,173],[168,181],[170],[171],[172],[[170,14]],[[171,14]],[[172,14]],[168,[[2,[181]]]],0,[174,[[2,[167]]]],[175,[[2,[168]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[167,15],[168,15],[169,15],[170],[171],[172],[[]],[[]],[[]],0,[[170,49],29],[[171,49],29],[[172,49],29],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[170,[2,[[50,[167]]]]],29],[[171,[2,[[50,[168]]]]],29],[[172,[2,[[50,[169]]]]],29],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[170,[[2,[51]]]],[171,[[2,[51]]]],[172,[[2,[51]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],[1],[1],[[],[[2,[176]]]],[[],[[2,[182]]]],[[],[[2,[183]]]],[176,29],[182,29],[183,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[176,176],[182,182],[183,183],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],176],[[],182],[[],183],[14],[14],[14],[14],[14],[14],[[],[[15,[176]]]],[[],[[15,[182]]]],[[],[[15,[183]]]],[14],[14],[14],[[176,176],3],[[182,182],3],[[183,183],3],[[176,16],17],[[176,16],17],[[182,16],17],[[182,16],17],[[183,16],17],[[183,16],17],[[],176],[[]],[181,176],[[]],[53,182],[[],182],[[]],[176],[182],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],48],[[],48],[[54,54,54],182],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[176,15],[182,15],[183,15],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[183,54],[[]],[[]],[[]],[[]],[[]],[[]],[176,54],[182,54],[183,54],[176,54],[182,54],[183,54],[182,54],[183,54],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[34,131],[184,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[185,185],[186,186],[187,187],[34,34],[184,184],[188,188],[[]],[[]],[[]],[[]],[[]],[[]],[188,2],0,[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[],[[15,[185]]]],[[],[[15,[186]]]],[[],[[15,[187]]]],[[],[[15,[34]]]],[[],[[15,[184]]]],[[],[[15,[188]]]],[14],[14],[14],[14],[14],[14],[188,187],0,[[185,185],3],[[186,186],3],[[187,187],3],[[34,34],3],[[184,184],3],[[188,188],3],[[],3],[[],3],[[],3],[[185,16],17],[[186,16],17],[[187,16],17],[[187,16],17],[[34,16],17],[[184,16],17],[[188,16],17],[[]],[[]],[[]],[[]],[[]],[139,188],[[]],[188,[[2,[34]]]],[188,[[2,[34]]]],0,[188,35],[188,35],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[188,3],[188,3],[188,3],[188,3],[188,3],[188,21],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,[188,37],[188,37],0,0,[[35,[72,[138]],187,37,184],188],[188,14],[188,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[185,15],[186,15],[187,15],[34,15],[184,15],[188,15],[188],[188],0,[187,21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],23],0,[34,[[2,[160]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[189],[190],[14,[[72,[56]]]],[14,[[72,[86]]]],[49,[[72,[86]]]],[14,[[72,[23]]]],[14,[[72,[112]]]],[14,[[72,[123]]]],0,[[]],[[]],[[]],0,[[]],[[],2],[[],2],[14],[14],[14],[[36,191],192],[[]],[[],14],[[]],[[]],[[],2],[[]],[193,[[192,[[195,[[194,[193]]]]]]]],[[[195,[196]]],2],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[197,197],[198,198],[[]],[[]],[14],[14],[14],[14],[[[0,[199,200]]]],[14],[14],[[197,197],3],[[198,198],3],[[],3],[[],3],[198,21],[[197,16],17],[[198,16],17],[[]],[[]],[[],21],[[],21],[199,21],[197],[[[0,[199,200]]],197],[[[0,[199,200]]],198],[198],[197,21],[198,21],[[199,111],21],[[],14],[[],14],[[]],[[]],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[198,21],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[201,201],[202,202],[203,203],[[]],[[]],[[]],[[201,201],13],[[202,202],13],[14],[14],[14],[14],[14],[14],[[],[[15,[201]]]],[[],[[15,[202]]]],[14],[14],[14],[[201,201],3],[[202,202],3],[[203,203],3],[[],3],[[],3],[[],3],[203,21],[[201,16],17],[[201,16],17],[[202,16],17],[[203,16],17],[[]],[23,201],[19,201],[[]],[[]],[[],21],[[],21],[[],21],[201,203],[201],[202],[201,203],[203],[203,21],[[],14],[[],14],[[],14],[[]],[[]],[[]],[202,3],[203,3],[203,3],[202,14],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[201,201],[[2,[13]]]],[[202,202],[[2,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[203,21],[201,15],[202,15],[[]],[[]],[[]],[[],23],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[204,204],[27,27],[[]],[[]],0,[204,30],[14],[14],[14],[14],[14],[14],[14],[14],[14],0,[[205,206],[[28,[[72,[204]]]]]],[[205,206],[[28,[25]]]],[[],207],[[27,48],[[2,[14]]]],[[26,16],17],[[26,16],17],[[204,16],17],[[27,16],17],[[27,16],17],[208,26],[209,26],[210,26],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],0,[[],48],[204,48],0,[27,14],[[204,14],[[2,[14]]]],[[27,14],[[2,[14]]]],[204,14],[27,14],[[48,[211,[161]]],204],[[22,4,25,[72,[204]]],27],[[48,30],204],[[48,43],204],[[]],[[]],[[]],[[]],[[]],[[]],[36],[38],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[2,[39]]]],0,[[]],[[]],[[],23],[[],23],[27,28],[22,[[28,[27]]]],[22,[[28,[27]]]],[22,[[28,[27]]]],[[],15],[72,[[28,[204]]]],[[[72,[212]]],[[28,[204]]]],[[],[[28,[204]]]],[[],15],[18,[[28,[27]]]],[[],15],[[],15],[[],15],[[],15],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],0,[204,[[45,[43]]]],[204,211],[[]],[[]],[[]],[[[45,[43]]],[[211,[161]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[],2],[[],2],[213,213],[[]],[[213,213],13],0,0,0,[14],[14],[[],[[15,[213]]]],[14],0,0,0,[[213,213],3],[[],3],[[213,16],17],[[213,16],17],[201,213],[23,213],[[]],[19,213],[[],21],[213],0,[[],14],[[]],[[],2],[[]],[[]],[[]],[19,[[15,[[72,[213]],208]]]],0,[[213,213],[[2,[13]]]],0,0,[[]],[[]],[213,15],[[]],[[],23],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,0,[1],[48,19],[48,19],[[]],[[]],[48,19],[[]],[[]],[[],2],[[],2],[48,48],[[]],[[48,48],13],[48,19],[14],[14],[[],[[15,[48]]]],[14],[[48,19],3],[[48,48],3],[[],3],[[48,16],17],[[48,16],17],[19,48],[23,48],[[]],[48,19],[[],21],[48],[48,21],[[],14],[[]],[[],2],[[]],[19,48],[[]],[[]],[[48,48],[[2,[13]]]],[[]],[[]],[48,15],[48,19],[[]],[[],23],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,[1],[[]],[[]],[[]],[[]],[[],2],[[],2],[214,214],[[]],[214,48],0,[14],[14],[[],[[15,[214]]]],[14],[214,4],0,[[214,214],3],[[],3],[[214,16],17],[[]],[[],21],[214],[[],14],[[]],[[],2],[[]],[[4,48],214],[[]],[[]],[[]],[[]],[214,15],[[]],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[1],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[215,215],[4,4],[[]],[[]],[[4,4],13],[14],[14],[14],[14],[216,[[15,[4]]]],[14],[14],[[215,215],3],[[4,4],3],[[],3],[[],3],[[215,16],17],[[4,16],17],[[4,16],17],[[]],[[]],[23,4],[19,4],[[],4],[[[72,[213]]],4],[217,4],[49,4],[[],21],[[],21],[215],[4,215],[4],0,[215,21],[4,21],[[],14],[[],14],[[]],[[]],[[4,4],3],[[4,4],3],[215,3],[4,3],[215,3],[4,36],[[4,4],4],[4,[[2,[213]]]],[4,14],[[],2],[[],2],[[]],[[]],[[[72,[213]]],4],[[]],[[]],[[]],[[]],[4,[[2,[4]]]],[[4,4],[[2,[13]]]],0,[[],4],[[]],[[]],[[]],[[]],[[4,218],15],[[]],[[]],[[],23],[[],15],[[],15],[[],15],[[],15],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[217],[[]],[[]],[[]],[[]],[[],2],[[],2],[217,217],[[]],[[217,217],13],[14],[14],[[],[[15,[217]]]],[14],[[217,217],3],[[],3],[[217,16],17],[[217,16],17],[[]],[[],217],[[],21],[217],[[],14],[[]],[217,3],[217,36],[217,[[2,[213]]]],[217,14],[[],2],[[]],[[[72,[213]]],217],[[]],[[]],[217,[[2,[217]]]],[[217,217],[[2,[13]]]],0,[[217,213]],[[],217],[[]],[[]],[217,15],[[]],[[],23],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[14],[14],[14],[[208,208],3],[[],3],[[208,16],17],[[208,16],17],[[]],[[],14],[[]],[[],2],[[]],[[]],[[]],[19,[[15,[[72,[213]],208]]]],[19,[[15,[213,208]]]],[38],[[]],[[]],[[],23],[[],15],[[],15],[[],24],[19,[[15,[23,19]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[1],[[190,219]],[[190,219]],[219,154],[219,54],[219,131],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[190,190],[219,219],[[]],[[]],[[190,190],13],[[219,219],13],[14],[14],[14],[14],[[],[[15,[190]]]],[[],[[15,[219]]]],[14],[14],[[190,190],3],[[219,219],3],[[],3],[[],3],[[219,16],17],[[190,16],17],[[219,16],17],[190,23],[[190,19],23],[220,190],[[]],[189,190],[189,219],[220,219],[[]],[154,219],[154,219],[154,190],[131,190],[54,219],[154,190],[[],21],[[],21],[190],[219],[[],14],[[],14],[[]],[[]],[190,3],[[[221,[190]],54],190],[[],2],[[],2],[[]],[[]],[190,154],[219,219],[[],190],[[]],[[]],[[]],[[]],[[190,190],[[2,[13]]]],[[219,219],[[2,[13]]]],[[]],[[]],[[]],[[]],[190,15],[219,15],[[190,190],219],[[190,219]],[[]],[[]],[[],23],[[],15],[222,[[15,[190]]]],[[],15],[[],15],[[],15],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[1],[1],0,[[],2],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[25,25],[223,223],[[]],[[]],[[25,25],13],[[223,223],13],[[],30],[[],25],[14],[14],[14],[14],[[],[[15,[25]]]],[[],[[15,[223]]]],[14],[14],[[25,25],3],[[223,223],3],[[],3],[[],3],[[25,16],17],[[223,16],17],[[223,189],23],[[223,224],23],[[]],[[],25],[[]],[154,[[2,[223]]]],[49,25],[21,[[2,[223]]]],[[25,225],[[2,[189]]]],[[],21],[[],21],[25],[223],[223,21],[[],14],[[],14],[[25,225,189],[[2,[189]]]],[[]],[[]],[25],[25],[25,3],[25,3],[25,226],[[],2],[[],2],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[25,25],[[2,[13]]]],[[223,223],[[2,[13]]]],[[25,225],[[2,[189]]]],[[]],[[]],[[]],[[]],[25,15],[223,15],0,[[],25],0,[25,226],[25,226],[[]],[[]],[[],15],[[],15],[[],15],[[],15],0,[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[14],[14],[14],[14],[14],[14],[[]],[[]],[[],14],[[],14],[[]],[[]],[[]],[227],[[],2],[[],2],[[]],[[]],[228,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],[189,189],[[189,220]],[[189,189]],[[189,189]],[189,54],[189,131],[189,154],[[]],[[]],[[]],[[]],[[],2],[[],2],[189,189],[[]],[[189,189],13],[14],[14],[[],[[15,[189]]]],[14],[[189,189],3],[[189,220],3],[[],3],[[189,16],17],[190,189],[219,189],[154,189],[[]],[[],21],[189],[[],14],[[]],[189,3],[[],2],[[]],[189],[[]],[[]],[[189,220],[[2,[13]]]],[[189,189],[[2,[13]]]],[[]],[[]],[189,15],[[189,220]],[[189,189]],[[189,189]],[36,189],[[]],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]],0,0,[1],[1],[229,19],[229,19],[[]],[[]],[[]],[229,19],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[229,229],[225,225],[[]],[[]],[[229,229],13],[[225,225],13],[[],229],[[],225],[229,19],[14],[14],[14],[14],[[],[[15,[229]]]],[[],[[15,[225]]]],[14],[14],[[229,19],3],[[229,229],3],[[225,225],3],[[],3],[[],3],[[229,16],17],[[229,16],17],[[225,16],17],[[225,224],23],[23,229],[19,229],[[]],[[]],[[],21],[[],21],[229,21],[229],[225],[[],14],[[],14],[[]],[[]],[[],225],[[],2],[[],2],[[]],[[]],[225,229],0,[19,229],[[[165,[229]],223],225],[[[165,[229]]],225],[[[165,[229]]],225],[[]],[[]],[[]],[[]],[[229,229],[[2,[13]]]],[[225,225],[[2,[13]]]],[[]],[[]],[[]],[[]],[229,15],[225,15],[[]],[[]],[[],23],[[],15],[[],15],[[],15],[[],15],[225,223],0,[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[224,224],[230,230],[[]],[[]],[[224,189],3],[[230,220],3],[14],[14],[14],[14],[[],[[15,[224]]]],[[],[[15,[230]]]],[14],[14],[[224,224],3],[[],3],[[224,16],17],[[230,16],17],[[]],[224,230],[[]],[[],14],[[],14],[[]],[[]],[[230,220],54],[230,3],[224,189],[230,220],[[230,54],220],[[],2],[[],2],[[]],[[]],0,0,0,0,[[189,189],224],[[[165,[220]],[165,[220]]],230],[[]],[[]],[[]],[[]],[[[165,[189]]],224],[[[165,[220]]],230],[[]],[[]],[[]],[[]],[224,15],[230,15],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[220,220],[[220,189]],[[220,220]],[[220,220]],[220,54],[220,131],[[]],[[]],[[]],[[]],[220,189],[[],2],[[],2],[220,220],[[]],[[220,220],13],[14],[14],[[],[[15,[220]]]],[14],[[220,189],3],[[220,220],3],[[],3],[220,189],[[220,16],17],[189,220],[219,220],[[]],[190,220],[131,220],[54,220],[154,220],[[],21],[220],[[],14],[[]],[[],2],[[]],[[220,131]],[220],[[]],[[]],[[220,189],[[2,[13]]]],[[220,220],[[2,[13]]]],[220,189],[[]],[[]],[220,15],[[220,220]],[[220,189]],[[220,220]],[36,220],[[]],[[],15],[[],15],[[],24],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Private"],[4,"Option"],[15,"bool"],[3,"EntityPath"],[4,"PathOp"],[3,"RecordingId"],[3,"ApplicationId"],[4,"LogMsg"],[3,"BeginRecordingMsg"],[3,"RecordingInfo"],[4,"RecordingSource"],[3,"EntityPathOpMsg"],[4,"Ordering"],[15,"usize"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"ArrowMsg"],[15,"str"],[3,"Uuid"],[15,"u64"],[3,"MsgId"],[3,"String"],[3,"TypeId"],[3,"TimePoint"],[4,"MsgBundleError"],[3,"MsgBundle"],[6,"Result"],[6,"Result"],[4,"DataType"],[3,"FIELDS"],[4,"FieldError"],[3,"TryFromSliceError"],[4,"TensorElement"],[3,"TensorId"],[8,"Iterator"],[4,"TensorDataMeaning"],[3,"Demand"],[8,"Error"],[3,"Arrow3D"],[3,"MutableArrow3DArray"],[8,"Any"],[8,"Array"],[3,"Arc"],[3,"Box"],[3,"Arrow3DArrayIterator"],[3,"Arrow3DArray"],[3,"ComponentName"],[8,"IntoIterator"],[8,"Borrow"],[3,"MutableBitmap"],[3,"Box3D"],[3,"Vec3"],[15,"f32"],[3,"ClassId"],[3,"ColorRGBA"],[15,"u32"],[3,"AnnotationInfo"],[3,"KeypointPairArrow"],[3,"ClassDescriptionArrow"],[3,"ClassMapElemArrow"],[3,"AnnotationContext"],[3,"MutableAnnotationInfoArray"],[3,"MutableKeypointPairArrowArray"],[3,"MutableClassDescriptionArrowArray"],[3,"MutableClassMapElemArrowArray"],[3,"ClassDescription"],[3,"AnnotationInfoArrayIterator"],[3,"KeypointPairArrowArrayIterator"],[3,"ClassDescriptionArrowArrayIterator"],[3,"ClassMapElemArrowArrayIterator"],[3,"Vec"],[3,"AnnotationInfoArray"],[3,"KeypointPairArrowArray"],[3,"ClassDescriptionArrowArray"],[3,"ClassMapElemArrowArray"],[3,"ViewCoordinates"],[3,"SignedAxis3"],[4,"ViewDir"],[4,"Axis3"],[4,"Sign"],[4,"Handedness"],[15,"u8"],[3,"Mat3"],[6,"Result"],[3,"InstanceKey"],[3,"KeypointId"],[3,"Label"],[3,"LineStrip2D"],[3,"LineStrip3D"],[3,"Mat3x3"],[3,"RawMesh3D"],[3,"EncodedMesh3DArrow"],[4,"MeshFormat"],[4,"Mesh3D"],[3,"EncodedMesh3D"],[3,"MutableRawMesh3DArray"],[3,"MutableEncodedMesh3DArrowArray"],[3,"MutableMeshFormatArray"],[3,"MutableMesh3DArray"],[3,"MeshId"],[3,"RawMesh3DArrayIterator"],[3,"EncodedMesh3DArrowArrayIterator"],[4,"RawMeshError"],[3,"RawMesh3DArray"],[3,"EncodedMesh3DArrowArray"],[3,"MeshFormatArray"],[3,"Mesh3DArray"],[3,"MeshFormatArrayIterator"],[3,"Mesh3DArrayIterator"],[15,"u128"],[3,"Point2D"],[3,"Point3D"],[3,"MutablePoint2DArray"],[3,"MutablePoint3DArray"],[3,"Point2DArrayIterator"],[3,"Point3DArrayIterator"],[3,"Point2DArray"],[3,"Point3DArray"],[3,"Quaternion"],[3,"Quat"],[3,"Radius"],[4,"Rect2D"],[3,"MutableRect2DArray"],[3,"Rect2DArray"],[3,"Rect2DArrayIterator"],[3,"Scalar"],[3,"ScalarPlotProps"],[3,"MutableScalarPlotPropsArray"],[3,"ScalarPlotPropsArrayIterator"],[15,"f64"],[3,"ScalarPlotPropsArray"],[3,"Size3D"],[3,"MutableSize3DArray"],[3,"Size3DArrayIterator"],[3,"Size3DArray"],[4,"TensorData"],[3,"TensorDimension"],[3,"Tensor"],[3,"MutableTensorDataArray"],[3,"MutableTensorDimensionArray"],[3,"MutableTensorDataMeaningArray"],[3,"MutableTensorArray"],[3,"TensorDimensionArrayIterator"],[3,"TensorArrayIterator"],[4,"TensorCastError"],[3,"ShapeError"],[3,"TensorDataArray"],[3,"TensorDimensionArray"],[3,"TensorDataMeaningArray"],[3,"TensorArray"],[3,"TensorDataArrayIterator"],[3,"TensorDataMeaningArrayIterator"],[15,"i64"],[8,"Dimension"],[6,"Array"],[15,"i8"],[6,"ArrayView"],[15,"i16"],[15,"u16"],[15,"i32"],[3,"TextEntry"],[3,"MutableTextEntryArray"],[3,"TextEntryArrayIterator"],[8,"Into"],[3,"TextEntryArray"],[3,"Rigid3"],[3,"Pinhole"],[4,"Transform"],[3,"MutableRigid3Array"],[3,"MutablePinholeArray"],[3,"MutableTransformArray"],[3,"IsoTransform"],[3,"Rigid3ArrayIterator"],[3,"PinholeArrayIterator"],[3,"Vec2D"],[3,"Rigid3Array"],[3,"PinholeArray"],[3,"TransformArray"],[3,"TransformArrayIterator"],[3,"Vec2"],[3,"Vec3D"],[3,"Vec4D"],[4,"TensorDataStore"],[3,"BBox2D"],[3,"Box3"],[4,"TensorDataType"],[3,"ClassicTensor"],[3,"TimeInt"],[3,"Time"],[8,"Write"],[6,"Result"],[8,"Read"],[3,"BufReader"],[3,"Decoder"],[8,"BufRead"],[3,"Hash64"],[3,"Hash128"],[8,"Hash"],[8,"Copy"],[4,"Index"],[4,"BatchIndex"],[3,"IndexHash"],[3,"ComponentBundle"],[3,"Schema"],[3,"Chunk"],[3,"Field"],[4,"PathParseError"],[4,"Infallible"],[4,"Error"],[3,"ListArray"],[8,"SerializableComponent"],[4,"EntityPathPart"],[3,"ComponentPath"],[3,"EntityPathHash"],[8,"Deserializer"],[3,"EntityPathImpl"],[8,"Serializer"],[3,"Duration"],[3,"TimeReal"],[3,"RangeInclusive"],[3,"SystemTime"],[4,"TimeType"],[3,"TimeRange"],[3,"Timeline"],[8,"ExactSizeIterator"],[3,"TimePointArray"],[3,"TimePointIterator"],[3,"TimelineName"],[3,"TimeRangeF"],[8,"TensorDataTypeTrait"],[3,"FixedSizeArrayField"],[8,"TensorTrait"],[13,"BadTensorShape"],[8,"Component"],[13,"BadEscape"]]},\
"re_memory":{"doc":"Crate for tracking memory use.","t":[2,3,3,3,3,18,11,0,11,0,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,12,0,0,0,12,12,12,11,11,11,11,11,0,3,3,7,7,3,17,17,7,17,17,3,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,5,11,11,11,11,5,12,11,11,5,5,12,12,11,5,12,12,12,11,12,12,12,5,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,11,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,12,11,11,11,11,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,12,12,12,11,11,11,11,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,11,11,11,5,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,5],"n":["AccountingAllocator","CountAndSize","MemoryHistory","MemoryLimit","MemoryUse","ZERO","__clone_box","accounting_allocator","add","allocation_tracker","borrow","borrow_mut","clone","clone_into","count","counted","counted","counted_gpu","counted_store","default","eq","equivalent","fmt","from","get_hash","hash","into","limit","memory_history","memory_limit","memory_use","resident","resident","size","sub","to_owned","try_from","try_into","type_id","util","AccountingAllocator","AtomicCountAndSize","BIG_ALLOCATION_TRACKER","GLOBAL_STATS","GlobalStats","IS_TRHEAD_IN_ALLOCATION_TRACKER","MAX_CALLSTACKS","MEDIUM_ALLOCATION_TRACKER","MEDIUM_SIZE","SMALL_SIZE","TrackingStatistics","add","alloc","alloc_zeroed","allocator","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","count","dealloc","default","from","from","from","from","fully_tracked","fully_tracked","global_allocs","into","into","into","into","is_tracking_callstacks","live","load","new","note_alloc","note_dealloc","overhead","overhead","realloc","set_tracking_callstacks","size","stochastically_tracked","stochastically_tracked","sub","top_callstacks","track_callstacks","track_size_threshold","tracking_stats","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","turn_on_tracking_if_env_var","type_id","type_id","type_id","type_id","untracked","untracked","zero","AllocationTracker","BacktraceHash","CallstackStatistics","PtrHash","ReadableBacktrace","__clone_box","__clone_box","__clone_box","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callstack_stats","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","equivalent","equivalent","extant","fmt","fmt","fmt","format_backtrace","from","from","from","from","from","get_hash","get_hash","hash","hash","hash_backtrace","into","into","into","into","into","live_allocs","new","new","on_alloc","on_dealloc","readable","readable_backtrace","readable_backtraces","should_sample","stochastic_rate","stochastic_rate","to_owned","to_owned","to_owned","to_owned","to_string","top_callstacks","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_stochastic_rate","MemoryHistory","borrow","borrow_mut","capture","counted","counted_gpu","counted_store","default","from","into","is_empty","resident","try_from","try_into","type_id","MemoryLimit","__clone_box","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","fmt","from","into","is_exceeded_by","limit","parse","to_owned","try_from","try_into","type_id","MemoryUse","__clone_box","borrow","borrow_mut","bytes_resident","capture","clone","clone_into","counted","eq","equivalent","fmt","from","into","resident","sub","to_owned","try_from","try_into","type_id","sec_since_start"],"q":["re_memory","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_memory::accounting_allocator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_memory::allocation_tracker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_memory::memory_history","","","","","","","","","","","","","","","re_memory::memory_limit","","","","","","","","","","","","","","","","","","","re_memory::memory_use","","","","","","","","","","","","","","","","","","","","re_memory::util"],"d":["","Number of allocation and their total size.","Tracks memory use over time.","","","","","Track allocations and memory use.","Add an allocation.","","","","","","Number of allocations.","Bytes used by the application according to our own memory …","Bytes used by the application according to our own memory …","VRAM bytes used by the application according to its own …","Bytes used by the datastore according to its own …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Limit in bytes.","","","","Bytes allocated by the application according to operating …","Bytes allocated by the application according to operating …","Number of bytes.","Remove an allocation.","","","","","","Install this as the global allocator to get memory usage …","","Statistics about extant allocations larger than <code>MEDIUM_SIZE</code>…","","","Used to prevent re-entrancy when tracking allocations.","","Statistics about some extant allocations larger than  …","Allocations smaller than are stochastically sampled.","Only track allocations of at least this size.","","Add an allocation.","","","","","","","","","","","","Number of allocations.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","All live allocations tracked by the large <code>AllocationTracker</code>…","All live largish allocations, fully tracked.","Total number of live allocations, and the number of live …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Are we doing (rather expensive) tracking of the callstacks …","All extant allocations.","","","","","The live allocations done by <code>AllocationTracker</code> used for …","All live allocations used for internal book-keeping.","","Should we do (rather expensive) tracking of the callstacks …","Number of bytes.","All live allocations sampled by the stochastic medium …","All live allocations sampled of medium size, …","Remove an allocation.","The most popular callstacks.","Do detailed statistics of allocations? This is expensive, …","Allocations smaller than these are left untracked.","Gather statistics from the live tracking, if enabled.","","","","","","","","","Turn on callstack tracking (rather expensive) if a given …","","","","","The live allocations not tracked by any <code>AllocationTracker</code>.","All live allocations that we are NOT tracking (because …","","Track the callstacks of allocations.","","Per-callstack statistics.","A hash of a pointer address.","Formatted <code>Backtrace</code>.","","","","","","","","","","","","","","","How much memory is allocated by each callstack?","","","","","","","","","","","","","Live allocations at this callstack.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Current live allocations.","","","","","Human-readable backtrace.","For when we print this statistic.","De-duplicated readable backtraces.","","Sample every N allocations. Must be power-of-two.","If this was stochastically sampled - at what rate?","","","","","","Return the <code>n</code> callstacks that currently is using the most …","","","","","","","","","","","","","","","","","Tracks memory use over time.","","","Add data to history","Bytes used by the application according to our own memory …","VRAM bytes used by the application according to its own …","Bytes used by the datastore according to its own …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Bytes allocated by the application according to operating …","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns how large fraction of memory we should free to go …","Limit in bytes.","","","","","","","","","","According to the OS. This is what matters.","","","","Bytes used by the application according to our own memory …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Bytes allocated by the application according to operating …","","","","","","Returns monotonically increasing time in seconds."],"i":[0,0,0,0,0,2,2,0,2,0,2,2,2,2,2,28,31,28,28,2,2,2,2,2,2,2,2,30,0,0,0,28,31,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,10,12,12,12,10,34,17,12,10,34,17,12,10,12,12,10,34,17,12,34,17,0,10,34,17,12,0,34,10,12,0,0,34,17,12,0,10,34,17,10,17,34,17,0,10,34,17,12,10,34,17,12,0,10,34,17,12,34,17,10,0,0,0,0,0,19,20,21,22,25,19,20,21,22,25,19,20,21,22,25,19,20,21,22,19,20,21,22,19,20,19,20,22,19,20,21,0,25,19,20,21,22,19,20,19,20,0,25,19,20,21,22,25,19,21,25,25,21,22,25,25,25,22,19,20,21,22,21,25,25,19,20,21,22,25,19,20,21,22,25,19,20,21,22,25,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,31,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0],"f":[0,0,0,0,0,0,[1],0,[[2,3]],0,[[]],[[]],[2,2],[[]],0,0,0,0,0,[[],2],[[2,2],4],[[],4],[[2,5],6],[[]],[[],7],[2],[[]],0,0,0,0,0,0,0,[[2,3]],[[]],[[],8],[[],8],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,[[10,3]],[[[12,[11]],13],14],[[[12,[11]],13],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[12,[11]],14,13]],[[],[[12,[15]]]],[[]],[[]],[[]],[[]],0,0,[[],[[16,[2]]]],[[]],[[]],[[]],[[]],[[],4],0,[10,2],[[],12],[[14,3]],[[14,3]],0,0,[[[12,[11]],14,13,3],14],[4],0,0,0,[[10,3]],0,0,0,[[],[[16,[17]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[18],[[],9],[[],9],[[],9],[[],9],0,0,[[],10],0,0,0,0,0,[1],[1],[1],[1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[19,19],[20,20],[21,21],[22,22],[[]],[[]],[[]],[[]],[[19,19],4],[[20,20],4],[[],4],[[],4],0,[[19,5],6],[[20,5],6],[[21,5],6],[23,[[24,[18]]]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[19],[20],[23,20],[[]],[[]],[[]],[[]],[[]],0,[14,19],[23,21],[[25,19,3]],[[25,19,3]],0,0,0,[[25,19],4],0,0,[[]],[[]],[[]],[[]],[[],26],[[25,3],[[27,[22]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[3,25],0,[[]],[[]],[[28,[16,[29]],[16,[29]]]],0,0,0,[[],28],[[]],[[]],[28,4],0,[[],8],[[],8],[[],9],0,[1],[[]],[[]],[30,30],[[]],[[],30],[[30,30],4],[[],4],[[30,5],6],[[]],[[]],[[30,31],[[16,[32]]]],0,[18,[[8,[30,26]]]],[[]],[[],8],[[],8],[[],9],0,[1],[[]],[[]],[[],[[16,[29]]]],[[],31],[31,31],[[]],0,[[31,31],4],[[],4],[[31,5],6],[[]],[[]],0,[[31,31]],[[]],[[],8],[[],8],[[],9],[[],33]],"p":[[3,"Private"],[3,"CountAndSize"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u64"],[4,"Result"],[3,"TypeId"],[3,"AtomicCountAndSize"],[8,"GlobalAlloc"],[3,"AccountingAllocator"],[3,"Layout"],[15,"u8"],[8,"Default"],[4,"Option"],[3,"TrackingStatistics"],[15,"str"],[3,"PtrHash"],[3,"BacktraceHash"],[3,"ReadableBacktrace"],[3,"CallstackStatistics"],[3,"Backtrace"],[3,"Arc"],[3,"AllocationTracker"],[3,"String"],[3,"Vec"],[3,"MemoryHistory"],[15,"i64"],[3,"MemoryLimit"],[3,"MemoryUse"],[15,"f32"],[15,"f64"],[3,"GlobalStats"]]},\
"re_query":{"doc":"Provide query-centric access to the <code>re_arrow_store</code>","t":[13,13,13,3,3,13,13,4,6,13,11,11,11,11,11,11,12,0,11,11,11,0,11,11,11,11,11,5,11,12,11,11,11,12,11,11,12,12,11,0,5,5,0,5,11,11,11,11,11,11,11,11,11,0,12,0,11,11,11,12,12,5,5,5,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,14],"n":["ArrowError","BadAccess","ComponentNotFound","ComponentWithInstances","EntityView","PolarsError","PrimaryNotFound","QueryError","Result","TypeMismatch","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","components","dataframe_util","deref","deref_mut","drop","entity_view","fmt","fmt","from","from","from","get_component_with_instances","init","instance_keys","into","lossless_try_into","lossy_into","name","overflowing_as","overflowing_cast_from","phantom","primary","provide","query","query_entity_with_primary","query_primary_with_history","range","range_entity_with_primary","saturating_as","saturating_cast_from","source","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","util","values","visit","vzip","wrapping_as","wrapping_cast_from","actual","requested","df_builder1","df_builder2","df_builder3","fix_polars_nulls","iter_column","ComponentJoinedIterator","ComponentWithInstances","EntityView","__clone_box","__clone_box","as_df","as_df1","as_df2","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","component_instance_key_iter","component_value_iter","components","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_native","from_native","from_native2","has_component","init","init","init","instance_keys","into","into","into","into_iter","is_empty","iter_component","iter_instance_keys","iter_instance_keys","iter_primary","iter_primary_flattened","iter_values","len","lookup","lookup_arrow","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","name","name","next","next_component_instance_key","num_instances","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","phantom","primary","primary_instance_key_iter","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","splatted_component_value","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","values","visit1","visit2","visit3","visit4","visit5","visit6","visit7","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","__populate_example_store","get_component_with_instances","query_entity_with_primary","range_entity_with_primary","query_primary_with_history","create_visitor"],"q":["re_query","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_query::QueryError","","re_query::dataframe_util","","","","","re_query::entity_view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_query::query","","","re_query::range","re_query::util","re_query::visit"],"d":["","","","A type-erased array of <code>Component</code> values and the …","A view of an entity at a particular point in time returned …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Retrieves a <code>ComponentWithInstances</code> from the <code>DataStore</code>.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Retrieve an <code>EntityView</code> from the <code>DataStore</code>","Either dispatch to <code>query_entity_with_primary</code> or …","","Iterates over the rows of any number of components and …","","","","","","","","","","","","Visit the primary and joined components of an <code>EntityView</code>","","","","","","","","","Make it so that our arrays can be deserialized again by …","Iterator for a single column in a dataframe as the …","Iterator over a single component joined onto a primary …","A type-erased array of <code>Component</code> values and the …","A view of an entity at a particular point in time returned …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Produce a <code>ComponentWithInstances</code> from native component …","Helper function to produce an <code>EntityView</code> from rust-native …","Helper function to produce an <code>EntityView</code> from rust-native …","Check if the entity has a component and its not empty","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Iterate over the values of a <code>Component</code>.","Iterate over the instance keys","Iterate over the instance keys","Iterate over the primary component values.","Iterate over the flattened list of primary component …","Iterate over the values and convert them to a native …","Number of values. 1 for splats.","Look up the value that corresponds to a given <code>InstanceKey</code> …","Look up the value that corresponds to a given <code>InstanceKey</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Visit the primary component of an <code>EntityView</code>. See …","Visit the primary component of an <code>EntityView</code>. See …","Visit the primary component of an <code>EntityView</code>. See …","Visit the primary component of an <code>EntityView</code>. See …","Visit the primary component of an <code>EntityView</code>. See …","Visit the primary component of an <code>EntityView</code>. See …","Visit the primary component of an <code>EntityView</code>. See …","","","","","","","","","","Helper used to create an example store we can use for …","Retrieves a <code>ComponentWithInstances</code> from the <code>DataStore</code>.","Retrieve an <code>EntityView</code> from the <code>DataStore</code>","Iterates over the rows of any number of components and …","Either dispatch to <code>query_entity_with_primary</code> or …",""],"i":[3,3,3,0,0,3,3,0,0,3,3,3,3,3,3,3,16,0,3,3,3,0,3,3,3,3,3,0,3,12,3,3,3,12,3,3,16,16,3,0,0,0,0,0,3,3,3,3,3,3,3,3,3,0,12,0,3,3,3,37,37,0,0,0,0,0,0,0,0,12,16,12,16,16,35,12,16,35,12,16,35,12,16,35,12,16,35,12,16,35,12,16,12,16,12,16,35,35,16,35,12,16,35,12,16,35,12,16,12,16,16,35,12,16,12,16,16,16,35,12,16,12,35,12,16,35,12,16,12,16,16,16,12,12,12,12,35,12,16,35,12,16,12,12,35,35,16,35,12,16,35,12,16,16,16,35,35,12,16,35,12,16,35,12,16,16,35,12,16,35,12,16,35,12,16,35,12,16,35,12,16,12,16,16,16,16,16,16,16,35,12,16,35,12,16,35,12,16,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],0,0,[2],[2],[2],0,[[3,4],5],[[3,4],5],[6,3],[7,3],[[]],[[8,9,10,11],[[13,[12]]]],[[],2],0,[[]],[[],1],[[]],0,[[]],[[]],0,0,[14],0,[[8,9,10],[[13,[[16,[15]]]]]],[[8,17,18,19,10],[[13,[20]]]],0,[[8,21,10],20],[[]],[[]],[3,[[1,[22]]]],[[],23],[[],24],[[],24],[[],25],[[]],[[]],0,0,0,[[]],[[]],[[]],0,0,[26,[[13,[27]]]],[[26,26],[[13,[27]]]],[[26,26,26],[[13,[27]]]],[28,[[29,[28]]]],[27,20],0,0,0,[30],[30],[12,[[13,[27]]]],[16,[[13,[27]]]],[16,[[13,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[12,12],[[[16,[[0,[31,15]]]]],[[16,[[0,[31,15]]]]]],[[]],[[]],0,0,0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[[12,4],5],[[[16,[[0,[32,15]]]],4],5],[[[16,[15]],4],5],[[]],[[]],[[]],[[[1,[26]],26],[[13,[12]]]],[[],[[13,[16]]]],[[],[[13,[16]]]],[16,33],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[12,33],[16,[[13,[20]]]],[12,[[13,[20]]]],[16,[[13,[20]]]],[16,[[13,[20]]]],[16,20],[12,[[13,[20]]]],[12,2],[[12,34],13],[[12,34],[[1,[[29,[28]]]]]],[[],1],[[],1],[[],1],[[]],[[]],[[]],[12,11],0,[35,[[1,[1]]]],0,[16,2],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],0,[[16,36],13],[[16,36],13],[[16,36],13],[[16,36],13],[[16,36],13],[[16,36],13],[[16,36],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[8,9,10,11],[[13,[12]]]],[[8,9,10],[[13,[[16,[15]]]]]],[[8,21,10],20],[[8,17,18,19,10],[[13,[20]]]],0],"p":[[4,"Option"],[15,"usize"],[4,"QueryError"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"PolarsError"],[3,"DataStore"],[3,"LatestAtQuery"],[3,"EntityPath"],[3,"ComponentName"],[3,"ComponentWithInstances"],[6,"Result"],[3,"Demand"],[8,"Component"],[3,"EntityView"],[3,"Timeline"],[3,"TimeInt"],[3,"ExtraQueryHistory"],[8,"Iterator"],[3,"RangeQuery"],[8,"Error"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Vec"],[3,"DataFrame"],[8,"Array"],[3,"Box"],[3,"Private"],[8,"Clone"],[8,"Debug"],[15,"bool"],[3,"InstanceKey"],[3,"ComponentJoinedIterator"],[8,"FnMut"],[13,"TypeMismatch"]]},\
"re_renderer":{"doc":"Rerun’s renderer.","t":[2,18,18,18,18,18,3,18,18,18,18,18,3,6,3,3,8,18,18,18,18,3,18,18,18,18,18,18,3,3,3,3,18,18,6,3,3,3,3,18,18,18,18,18,3,18,11,11,11,11,11,11,11,12,12,11,11,11,11,10,11,11,11,11,12,0,0,0,11,11,0,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,0,12,10,0,0,0,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,0,12,11,11,0,14,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,0,12,11,11,11,5,12,12,12,12,12,12,12,12,12,0,12,11,11,10,0,12,12,0,12,11,11,12,0,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,0,12,0,0,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,5,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,6,8,3,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,14,11,11,11,11,11,12,14,11,11,11,11,11,11,5,11,11,3,3,3,18,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,0,7,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,8,7,3,3,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,11,11,5,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,3,3,12,12,12,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,12,5,0,0,5,5,5,5,5,5,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,3,3,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,5,3,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,13,8,4,3,3,3,3,3,3,13,13,3,3,13,13,13,13,3,3,3,4,3,13,3,8,16,16,3,4,4,3,13,12,12,12,12,12,12,12,12,12,11,11,12,0,10,12,11,11,11,10,11,11,12,12,12,12,11,0,12,11,12,11,12,12,12,0,12,0,12,0,12,12,12,12,12,0,12,0,12,12,12,12,11,11,11,11,12,12,12,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,18,18,18,18,13,17,3,3,4,3,3,3,3,18,18,18,17,13,11,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,12,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,17,18,18,13,3,3,3,3,4,3,3,11,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,3,3,4,4,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,12,11,12,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,13,13,6,3,13,13,3,13,4,4,4,13,13,13,3,3,12,12,12,12,12,12,12,12,0,12,12,0,0,12,12,12,12,12,12,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,4,4,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,18,18,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,18,18,18,18,18,13,13,4,13,4,3,6,3,13,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,12,12,12,11,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,0,12,0,12,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,12,12,12,12,12,12,12,0,12,0,12,0,0,12,0,12,0,11,0,12,12,11,12,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,13,13,3,3,3,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,3,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,8,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,10,12,11,12,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,4,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,3,3,6,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["AutoSizeConfig","BLACK","BLACK","BLUE","BLUE","BROWN","Color32","DARK_BLUE","DARK_GRAY","DARK_GREEN","DARK_RED","DEBUG_COLOR","DebugLabel","DepthOffset","FileResolver","FileServer","FileSystem","GOLD","GRAY","GREEN","GREEN","ImportClause","KHAKI","LIGHT_BLUE","LIGHT_GRAY","LIGHT_GREEN","LIGHT_RED","LIGHT_YELLOW","LineStripBuilder","LineStripSeriesBuilder","PointCloudBatchBuilder","PointCloudBuilder","RED","RED","RecommendedFileResolver","RenderContext","Rgba","SearchPath","Size","TEMPORARY_COLOR","TRANSPARENT","TRANSPARENT","WHITE","WHITE","WgpuResourcePoolStatistics","YELLOW","a","a","add","additive","additive","b","b","batches","batches","borrow","borrow","borrow_mut","borrow_mut","canonicalize","clone","clone","clone_into","clone_into","colors","config","context","debug_label","default","default","depth_offset","deref","deref","deref_mut","deref_mut","deserialize","deserialize","device","dirs","downcast","downcast","drop","drop","eq","eq","equivalent","err_tracker","error_tracker","events_rx","exists","file_resolver","file_server","file_system","fmt","fmt","frame_index","from","from","from","from","from","from","from","from","from_additive_luminance","from_black_alpha","from_black_alpha","from_gray","from_gray","from_luminance_alpha","from_rgb","from_rgb","from_rgb_additive","from_rgba_premultiplied","from_rgba_premultiplied","from_rgba_unmultiplied","from_rgba_unmultiplied","from_srgba_premultiplied","from_srgba_unmultiplied","from_white_alpha","from_white_alpha","fs","g","g","gamma_multiply","get_filesystem","get_hash","get_hash","global_bindings","gpu_resources","hash","hash","importer","include_file","index","index","index_mut","index_mut","init","init","intensity","into","into","is_opaque","is_valid_bit_pattern","is_valid_bit_pattern","label","line_strip_builder","linear_multiply","mesh","mesh_manager","mul","mul","multiply","new_recommended_file_resolver","num_bind_group_layouts","num_bind_groups","num_buffers","num_pipeline_layouts","num_render_pipelines","num_samplers","num_shader_modules","num_textures","path","point_cloud_builder","queue","r","r","read_to_string","renderer","renderers","resolver","resource_managers","search_path","serialize","serialize","shared_renderer_data","size","strip_user_data","strips","strips","texture_manager_2d","to_array","to_array","to_normalized_gamma_f32","to_opaque","to_opaque","to_owned","to_owned","to_rgba_unmultiplied","to_srgba_unmultiplied","to_srgba_unmultiplied","to_tuple","to_tuple","total_buffer_size_in_bytes","total_texture_size_in_bytes","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","user_data","user_data","vertices","vertices","view_builder","watcher","wgpu_buffer_types","wgpu_resources","HardwareTier","RenderContextConfig","Web","borrow","borrow","borrow_mut","borrow_mut","check_downlevel_capabilities","clone","clone_into","deref","deref","deref_mut","deref_mut","device_descriptor","downcast","downcast","drop","drop","features","fmt","from","from","hardware_tier","init","init","into","into","limits","output_format_color","required_downlevel_capabilities","supported_backends","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","RenderContext","Renderers","SharedRendererData","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","config","deref","deref","deref","deref_mut","deref_mut","deref_mut","device","downcast","downcast","downcast","drop","drop","drop","err_tracker","frame_index","frame_maintenance","from","from","from","get","get_or_create","global_bindings","gpu_resources","init","init","init","into","into","into","mesh_manager","new","queue","renderers","renderers","resolver","shared_renderer_data","texture_manager_2d","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uniform_buffer_allocation_size","upcast","upcast","upcast","DebugLabel","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","downcast","drop","eq","equivalent","fmt","from","from","from","from","get","get_hash","hash","init","into","label","push_str","to_owned","try_from","try_into","type_id","upcast","DepthOffset","DedupableError","ErrorTracker","WrappedContextError","borrow","borrow","borrow_mut","borrow_mut","clear","clear_countdown","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","eq","equivalent","errors","fmt","from","from","get_hash","handle_error","hash","hash","impl_trait","init","init","into","into","tick","tick_nr","try_downcast","try_from","try_from","try_into","try_into","type_id","type_id","type_of_var","upcast","upcast","FileResolver","ImportClause","InterpolatedFile","PREFIX","RecommendedFileResolver","SearchPath","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contents","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dirs","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_env","from_str","from_str","fs","imports","init","init","init","init","insert","into","into","into","into","iter","new","new_recommended","path","populate","push","resolve_clause_path","search_path","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","with_search_path","FileServer","file_server_impl","FILE_SERVER","FileServer","borrow","borrow_mut","collect","deref","deref_mut","downcast","drop","events_rx","from","get","get_mut","init","into","new","try_from","try_into","type_id","unwatch","upcast","watch","watcher","FileSystem","MEM_FILE_SYSTEM","MemFileSystem","OsFileSystem","borrow","borrow","borrow_mut","borrow_mut","canonicalize","canonicalize","canonicalize","create_dir_all","create_dir_all","create_dir_all","create_file","create_file","create_file","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","exists","exists","exists","files","from","from","get","get_filesystem","init","init","into","into","new_uninit","read_to_string","read_to_string","read_to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","FrameUniformBuffer","GlobalBindings","_padding","auto_size_lines","auto_size_points","borrow","borrow","borrow_mut","borrow_mut","camera_forward","camera_position","clone","clone_into","create_bind_group","depth_offset_factor","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","init","init","into","into","is_valid_bit_pattern","layout","nearest_neighbor_sampler","new","pixel_world_size_from_camera_distance","pixels_from_point","projection_from_view","projection_from_world","tan_half_fov","to_owned","trilinear_sampler","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","view_from_world","calculate_bounding_box","gltf","obj","to_uniform_scale","gather_instances_recursive","import_mesh","load_gltf_from_buffer","map_format","load_obj_from_buffer","LineBatchBuilder","LineStripBuilder","LineStripSeriesBuilder","add_axis_aligned_rectangle_outline_2d","add_box_outline","add_rectangle_outline","add_rectangle_outline_2d","add_segment","add_segment_2d","add_segments","add_segments_2d","add_strip","add_strip_2d","add_vertices","batch","batch_mut","batches","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","color","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","drop","flags","from","from","from","init","init","init","into","into","into","is_empty","iter_strips_with_vertices","iter_vertices_by_batch","radius","strip_user_data","strips","strips","to_draw_data","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","user_data","user_data","vertices","world_from_obj","GpuMaterial","GpuMesh","Material","Mesh","albedo","albedo_multiplier","bind_group","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","from","from","from","from","gpu_data","index_buffer","index_buffer_range","index_range","index_range","indices","init","init","init","init","into","into","into","into","label","label","materials","materials","mesh_vertices","new","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vertex_buffer_combined","vertex_buffer_data_range","vertex_buffer_positions_range","vertex_data","vertex_positions","MaterialUniformBuffer","albedo_multiplier","borrow","borrow_mut","clone","clone_into","deref","deref_mut","downcast","drop","from","init","into","is_valid_bit_pattern","to_owned","try_from","try_into","type_id","upcast","MeshVertexData","borrow","borrow_mut","clone","clone_into","deref","deref_mut","downcast","drop","fmt","from","init","into","is_valid_bit_pattern","next_free_shader_location","normal","texcoord","to_owned","try_from","try_into","type_id","upcast","vertex_buffer_layouts","PointBuilder","PointCloudBatchBuilder","PointCloudBuilder","PointsBuilder","add_point","add_point_2d","add_points","add_points_2d","batch","batch_mut","batches","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","color","color","colors","colors","colors","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","extend_defaults","flags","from","from","from","from","init","init","init","init","into","into","into","into","iter_vertices_and_userdata_by_batch","iter_vertices_by_batch","max_points","radii","radius","to_draw_data","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","user_data","user_data","user_data","user_data","user_data","vertex","vertices","vertices","world_from_obj","Background","DrawData","DrawOrder","GenericSkyboxDrawData","LineBatchInfo","LineDrawData","LineStripFlags","LineStripInfo","LineVertex","Linear","Linear","MeshDrawData","MeshInstance","Nearest","Nearest","NumberOfColorsNotEqualNumberOfVertices","Opaque","PointCloudBatchFlags","PointCloudBatchInfo","PointCloudDrawData","PointCloudDrawDataError","PointCloudVertex","Postprocess","RectangleDrawData","Renderer","Renderer","RendererDrawData","TestTriangleDrawData","TextureFilterMag","TextureFilterMin","TexturedRect","Transparent","additive_tint","batches","batches","batches","bind_group_all_lines","bind_group_all_points","bind_groups","bits","bits","borrow","borrow_mut","color","compositor","create_renderer","depth_offset","deref","deref_mut","downcast","draw","draw_order","drop","extent_u","extent_v","flags","flags","from","generic_skybox","gpu_mesh","init","instance_buffer","into","label","label","line_vertex_count","lines","mesh","mesh_renderer","multiplicative_tint","point_cloud","point_count","position","position","radius","radius","rectangles","strip_index","test_triangle","texture","texture_filter_magnification","texture_filter_minification","top_left_corner_position","try_from","try_into","type_id","upcast","world_from_mesh","world_from_obj","world_from_obj","Compositor","CompositorDrawData","bind_group","bind_group_layout","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_renderer","deref","deref","deref_mut","deref_mut","downcast","downcast","draw","drop","drop","from","from","init","init","into","into","new","render_pipeline","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","GenericSkybox","GenericSkyboxDrawData","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_renderer","deref","deref","deref_mut","deref_mut","downcast","downcast","draw","draw_order","drop","drop","from","from","init","init","into","into","new","render_pipeline","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","CAP_END_ROUND","CAP_END_TRIANGLE","CAP_START_ROUND","CAP_START_TRIANGLE","InvalidStripIndex","LINE_STRIP_TEXTURE_SIZE","LineBatchInfo","LineDrawData","LineDrawDataError","LineRenderer","LineStripBatch","LineStripFlags","LineStripInfo","MAX_NUM_STRIPS","MAX_NUM_VERTICES","NO_COLOR_GRADIENT","POSITION_TEXTURE_SIZE","PoolError","all","batches","bind_group","bind_group_all_lines","bind_group_layout_all_lines","bind_group_layout_batch","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","color","complement","contains","create_renderer","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","drop","drop","drop","empty","eq","eq","equivalent","equivalent","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","get_triangle_cap_tip_length","gpu_data","hash","init","init","init","init","init","init","init","insert","intersection","intersects","into","into","into","into","into","into","into","is_all","is_empty","is_valid_bit_pattern","label","line_vertex_count","new","not","partial_cmp","provide","radius","remove","render_pipeline","set","source","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex_range","world_from_obj","BatchUniformBuffer","LineStripInfo","LineVertex","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","color","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","flags","from","from","from","init","init","init","into","into","into","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","position","radius","stippling","strip_index","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","world_from_obj","MeshBatch","MeshDrawData","MeshInstance","MeshRenderer","additive_tint","batches","bind_group_layout","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","count","create_renderer","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","from","from","from","from","gpu_data","gpu_mesh","init","init","init","init","instance_buffer","into","into","into","into","mesh","mesh","new","render_pipeline","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","world_from_mesh","InstanceData","additive_tint","borrow","borrow_mut","clone","clone_into","deref","deref_mut","downcast","drop","from","init","into","is_valid_bit_pattern","to_owned","try_from","try_into","type_id","upcast","vertex_buffer_layout","world_from_mesh_normal_row_0","world_from_mesh_normal_row_1","world_from_mesh_normal_row_2","world_from_mesh_row_0","world_from_mesh_row_1","world_from_mesh_row_2","DATA_TEXTURE_SIZE","ENABLE_SHADING","MAX_NUM_POINTS","NumberOfColorsNotEqualNumberOfVertices","PointCloudBatch","PointCloudBatchFlags","PointCloudBatchInfo","PointCloudDrawData","PointCloudDrawDataError","PointCloudRenderer","PointCloudVertex","all","batches","bind_group","bind_group_all_points","bind_group_layout_all_points","bind_group_layout_batch","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","create_renderer","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","drop","drop","drop","drop","drop","drop","drop","empty","eq","eq","equivalent","equivalent","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","gpu_data","hash","init","init","init","init","init","init","init","insert","intersection","intersects","into","into","into","into","into","into","into","is_all","is_empty","is_valid_bit_pattern","label","new","not","partial_cmp","point_count","position","provide","radius","remove","render_pipeline","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex_range","world_from_obj","BatchUniformBuffer","PositionData","_padding","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","flags","from","from","init","init","into","into","is_valid_bit_pattern","is_valid_bit_pattern","pos","radius","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","world_from_obj","Linear","Linear","Nearest","Nearest","RectangleDrawData","RectangleRenderer","TextureFilterMag","TextureFilterMin","TexturedRect","bind_group_layout","bind_groups","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_renderer","default","depth_offset","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","draw","draw_order","drop","drop","drop","drop","drop","extent_u","extent_v","fmt","fmt","from","from","from","from","from","gpu_data","init","init","init","init","init","into","into","into","into","into","multiplicative_tint","new","render_pipeline","texture","texture_filter_magnification","texture_filter_minification","to_owned","top_left_corner_position","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","UniformBuffer","borrow","borrow_mut","clone","clone_into","depth_offset","deref","deref_mut","downcast","drop","extent_u","extent_v","from","init","into","is_valid_bit_pattern","multiplicative_tint","to_owned","top_left_corner_position","try_from","try_into","type_id","upcast","TestTriangle","TestTriangleDrawData","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_renderer","deref","deref","deref_mut","deref_mut","downcast","downcast","draw","drop","drop","from","from","init","init","into","into","new","render_pipeline","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","ExpiredResource","Frame","GpuMeshHandle","GpuTexture2DHandle","LongLived","LongLived","MeshManager","NullHandle","ResourceHandle","ResourceLifeTime","ResourceManagerError","ResourceNotFound","ResourcePoolError","SingleFrame","Texture2DCreationDesc","TextureManager2D","data","device","device","format","height","label","manager","mesh_bound_group_layout","mesh_manager","queue","queue","resource_manager","texture_manager","white_texture","width","key","valid_frame_index","current_frame_index","valid_frame_index","GpuMeshHandle","MeshHandleInner","MeshManager","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","create","data","default","deref","deref","deref_mut","deref_mut","deserialize","device","downcast","downcast","drop","drop","eq","equivalent","fmt","frame_maintenance","from","from","from","get","get_hash","hash","init","init","into","into","manager","mesh_bound_group_layout","new","partial_cmp","queue","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","ExpiredResource","Frame","LongLived","LongLived","NullHandle","ResourceHandle","ResourceLifeTime","ResourceManager","ResourceManagerError","ResourceNotFound","ResourcePoolError","SingleFrame","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_frame_resource_lifetime","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","frame_index","frame_maintenance","from","from","from","from","get","init","init","init","init","into","into","into","into","long_lived_resources","provide","single_frame_resources","store_resource","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","key","valid_frame_index","current_frame_index","valid_frame_index","GpuTexture2DHandle","Texture2DCreationDesc","TextureManager2D","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","convert_rgb8_to_rgba8","create","create_and_upload_texture","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","device","downcast","downcast","downcast","drop","drop","drop","format","frame_maintenance","from","from","from","get","height","init","init","init","into","into","into","invalid","label","new","queue","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","white_texture","white_texture_handle","width","AUTO","AUTO_LARGE","Size","SizeHalf","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","eq","fmt","from","from","from","init","init","into","into","is_auto","is_valid_bit_pattern","is_valid_bit_pattern","mul","mul_assign","new_points","new_scene","points","scene","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","AutoSizeConfig","DrawFn","MAIN_TARGET_COLOR_FORMAT","MAIN_TARGET_DEFAULT_DEPTH_STATE","MAIN_TARGET_DEFAULT_MSAA_STATE","MAIN_TARGET_DEPTH_FORMAT","MAIN_TARGET_SAMPLE_COUNT","NearPlaneCenter","Orthographic","OrthographicCameraMode","Perspective","Projection","QueuedDraw","SharedViewBuilder","TargetConfiguration","TopLeftCornerAndExtendZ","ViewBuilder","ViewTargetSetup","auto_size_config","bind_group_0","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","composite","default","default","default","depth_buffer","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw_func","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","line_radius","main_target_msaa","main_target_resolved","name","name","pixels_from_point","point_radius","projection_from_view","queue_draw","queued_draws","resolution_in_pixel","resolution_in_pixel","serialize","setup","setup_view","sorting_index","to_owned","to_owned","to_owned","to_owned","tonemapping_draw_data","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","view_from_world","camera_mode","far_plane_distance","near_plane_distance","vertical_fov","vertical_world_size","Mat4","Mat4x3","Vec2","Vec2Padded","Vec3","Vec3Unpadded","Vec4","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c0","c0","c1","c1","c2","c2","c3","c3","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","padding","padding0","padding1","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","w","x","x","x","x","x","y","y","y","y","y","z","z","z","BindGroupDesc","BindGroupEntry","BindGroupLayoutDesc","BufferDesc","GpuBindGroupHandle","GpuBindGroupHandleStrong","GpuBindGroupLayoutHandle","GpuBindGroupLayoutPool","GpuBindGroupPool","GpuBufferHandle","GpuBufferHandleStrong","GpuBufferPool","GpuPipelineLayoutHandle","GpuPipelineLayoutPool","GpuRenderPipelineHandle","GpuRenderPipelinePool","GpuSamplerHandle","GpuSamplerPool","GpuShaderModuleHandle","GpuShaderModulePool","GpuTexture","GpuTextureHandle","GpuTextureHandleStrong","GpuTexturePool","PipelineLayoutDesc","PoolError","RenderPipelineDesc","SamplerDesc","ShaderModuleDesc","TextureDesc","VertexBufferLayout","WgpuResourcePoolStatistics","WgpuResourcePools","bind_group_layout_pool","bind_group_layouts","bind_group_pool","bind_groups","borrow","borrow","borrow_mut","borrow_mut","buffer_pool","buffers","default","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","dynamic_resource_pool","from","from","init","init","into","into","num_bind_group_layouts","num_bind_groups","num_buffers","num_pipeline_layouts","num_render_pipelines","num_samplers","num_shader_modules","num_textures","pipeline_layout_pool","pipeline_layouts","render_pipeline_pool","render_pipelines","resource","sampler_pool","samplers","shader_module_pool","shader_modules","static_resource_pool","statistics","texture_pool","textures","total_buffer_size_in_bytes","total_bytes","total_texture_size_in_bytes","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","BindGroupLayoutDesc","GpuBindGroupLayoutHandle","GpuBindGroupLayoutPool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","entries","eq","eq","equivalent","equivalent","fmt","frame_maintenance","from","from","from","from","get_hash","get_hash","get_or_create","get_resource","hash","hash","init","init","init","into","into","into","label","num_resources","partial_cmp","pool","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","BindGroupDesc","BindGroupEntry","Buffer","DefaultTextureView","GpuBindGroupHandle","GpuBindGroupHandleStrong","GpuBindGroupPool","Sampler","_owned_buffers","_owned_textures","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","data","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","entries","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","frame_maintenance","from","from","from","from","from","from","get_hash","get_hash","get_hash","get_resource","handle","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","label","layout","num_resources","partial_cmp","pool","resource_size_in_bytes","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","handle","offset","size","BufferDesc","GpuBufferHandle","GpuBufferHandleStrong","GpuBufferPool","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","frame_maintenance","from","from","from","from","get_hash","get_hash","get_resource","get_resource_weak","get_strong_handle","hash","hash","init","init","init","into","into","into","label","num_resources","partial_cmp","pool","resource_size_in_bytes","serialize","size","to_owned","to_owned","total_gpu_size_in_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","usage","DynamicResourcePool","SizedResourceDesc","alive_handles","alloc","borrow","borrow_mut","current_frame_index","default","deref","deref_mut","downcast","drop","frame_maintenance","from","get_resource","get_strong_handle","init","into","last_frame_deallocated","num_resources","resource_size_in_bytes","resources","total_resource_size_in_bytes","total_resource_size_in_bytes","try_from","try_into","type_id","upcast","GpuPipelineLayout","GpuPipelineLayoutHandle","GpuPipelineLayoutPool","PipelineLayoutDesc","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","entries","eq","eq","equivalent","equivalent","fmt","frame_maintenance","from","from","from","from","from","get_hash","get_hash","get_or_create","get_resource","hash","hash","init","init","init","init","into","into","into","into","label","layout","num_resources","partial_cmp","pool","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","GpuRenderPipelineHandle","GpuRenderPipelinePool","RenderPipelineDesc","VertexBufferLayout","array_stride","attributes","attributes_from_formats","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","create_render_pipeline","data","default","default","depth_stencil","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fragment_entrypoint","fragment_handle","frame_maintenance","from","from","from","from","from","get_hash","get_hash","get_hash","get_or_create","get_resource","hash","hash","hash","init","init","init","init","into","into","into","into","label","multisample","num_resources","partial_cmp","pipeline_layout","pool","primitive","render_targets","serialize","step_mode","to_owned","to_owned","to_owned","to_wgpu_desc","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","vertex_buffers","vertex_entrypoint","vertex_handle","NullHandle","PoolError","ResourceNotAvailable","ResourceStatistics","UnknownDescriptor","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equivalent","fmt","fmt","frame_created","from","from","init","init","into","into","last_frame_used","provide","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","GpuSamplerHandle","GpuSamplerPool","SamplerDesc","address_mode_u","address_mode_v","address_mode_w","anisotropy_clamp","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","frame_maintenance","from","from","from","from","get_hash","get_hash","get_or_create","get_resource","hash","hash","init","init","init","into","into","into","label","lod_max_clamp","lod_min_clamp","mag_filter","min_filter","mipmap_filter","num_resources","partial_cmp","pool","serialize","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","GpuShaderModuleHandle","GpuShaderModulePool","ShaderModuleDesc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","create_shader_module","data","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","frame_maintenance","from","from","from","from","get","get_hash","get_hash","get_or_create","get_statistics","hash","hash","init","init","init","into","into","into","label","num_resources","partial_cmp","pool","serialize","source","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","StaticResourcePool","StoredResource","borrow","borrow","borrow_mut","borrow_mut","current_frame_index","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","get_or_create","get_resource","get_statistics","init","init","into","into","lookup","num_resources","recreate_resources","resource","resources","statistics","to_pool_error","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","GpuTexture","GpuTextureHandle","GpuTextureHandleStrong","GpuTexturePool","TextureDesc","alloc","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","data","default","default","default_view","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dimension","downcast","downcast","downcast","downcast","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","format","frame_maintenance","from","from","from","from","from","get_hash","get_hash","get_resource","get_resource_weak","get_strong_handle","hash","hash","init","init","init","init","into","into","into","into","label","mip_level_count","num_resources","partial_cmp","pool","resource_size_in_bytes","sample_count","serialize","size","texture","to_owned","to_owned","total_gpu_size_in_bytes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","usage"],"q":["re_rendererre_renderer::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::debug_label","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::depth_offset","re_renderer::error_tracker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::file_resolver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::file_server","","re_renderer::file_server::file_server_impl","","","","","","","","","","","","","","","","","","","","","","","re_renderer::file_system","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::global_bindings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::importer","","","","re_renderer::importer::gltf","","","","re_renderer::importer::obj","re_renderer::line_strip_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::mesh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::mesh::gpu_data","","","","","","","","","","","","","","","","","","","re_renderer::mesh::mesh_vertices","","","","","","","","","","","","","","","","","","","","","","","re_renderer::point_cloud_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::compositor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::generic_skybox","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::linesre_renderer::renderer::lines::gpu_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::mesh_renderer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::mesh_renderer::gpu_data","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::point_cloudre_renderer::renderer::point_cloud::gpu_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::rectangles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::rectangles::gpu_data","","","","","","","","","","","","","","","","","","","","","","","re_renderer::renderer::test_triangle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::resource_managers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::resource_managers::ResourceHandle","","re_renderer::resource_managers::ResourceManagerError","","re_renderer::resource_managers::mesh_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::resource_managers::resource_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::resource_managers::resource_manager::ResourceHandle","","re_renderer::resource_managers::resource_manager::ResourceManagerError","","re_renderer::resource_managers::texture_manager","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::view_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::view_builder::Projection","","","","","re_renderer::wgpu_buffer_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::bind_group_layout_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::bind_group_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::bind_group_pool::BindGroupEntry","","","re_renderer::wgpu_resources::buffer_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::dynamic_resource_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::pipeline_layout_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::render_pipeline_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::resource","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::sampler_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::shader_module_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::static_resource_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_renderer::wgpu_resources::texture_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","This format is used for space-efficient color …","","","","","","Label for resources. Optimized out in release builds.","Depth offset used to resolve z-fighting between 2d …","The <code>FileResolver</code> handles both resolving import clauses and …","A file server capable of watching filesystem events in the …","A very limited filesystem, just enough for our internal …","","","","","A pre-parsed import clause, as in <code>#import &lt;something&gt;</code>.","","","","","","","","Builder for a vector of line strips, making it easy to …","","Builder for point clouds, making it easy to create …","","","The recommended <code>FileResolver</code> type for the current …","Any resource involving wgpu rendering which can be re-used …","0-1 linear space <code>RGBA</code> color with premultiplied alpha.","Specifies where to look for imports when both absolute and …","A size of something in either world-units, screen-units, …","An ugly color that is planned to be replaced before making …","","","","","","","","","","Returns an additive version of self","Return an additive version of this color (alpha = 0)","","","","","","","","","","","","","","","","","","","","","","","","","","","","All directories currently in the search path, in …","","","","","","","","","Special error handling datastructures for debug builds …","","","This module implements one half of our cross-platform …","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Transparent black","","","","","","","From <code>sRGBA</code> with premultiplied alpha.","","From <code>sRGBA</code> WITHOUT premultiplied alpha.","","","","","Transparent white","A handle to the filesystem being used. Generally a …","","","Multiply with 0.5 to make color half as opaque, …","Returns the recommended filesystem handle for the current …","","","","","","","","A macro to read the contents of a file on disk, and …","","","","","","","How perceptually intense (bright) is the color?","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Multiply with 0.5 to make color half as opaque in linear …","","","","","Multiply with e.g. 0.5 to make us half transparent","Returns the recommended <code>FileResolver</code> for the current …","","","","","","","","","The path being imported, as-is: neither canonicalized nor …","","","","","","","","","Resource managers are concerned with mapping (typically) …","The search path that we will go through when an import …","","","","","","","","","Premultiplied RGBA","Premultiplied RGBA","Converts to floating point values in the range 0-1 without …","Returns an opaque version of self","Returns an opaque version of self","","","unmultiply the alpha","","unmultiply the alpha","Premultiplied RGBA","Premultiplied RGBA","","","","","","","","","","","","","","","","","Explicitly padded and/or aligned types following wgsl …","Wgpu resource pools are concerned with handling low level …","Hardware tiers <code>re_renderer</code> distinguishes.","Startup configuration for a <code>crate::RenderContext</code>","Maintains strict WebGL capability.","","","","","Checks if passed downlevel capabilities support the given …","","","","","","","Device descriptor compatible with the given hardware tier.","","","","","Required features for the given hardware tier.","","Returns the argument unchanged.","Returns the argument unchanged.","The targeted hardware tier.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Wgpu limits required by the given hardware tier.","The color format used by the eframe output buffer.","Downlevel features required by the given tier.","Backends that are officially supported by <code>re_renderer</code>.","","","","","","","","","","Any resource involving wgpu rendering which can be re-used …","Struct owning <em>all</em> <code>Renderer</code>. <code>Renderer</code> are created lazily …","Immutable data that is shared between all <code>Renderer</code>","","","","","","","","","","","","","","","","","","","","","","","Call this at the beginning of a new frame.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Global bindings, always bound to 0 bind group slot zero. …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Gets allocation size for a uniform buffer padded in a way …","","","","Label for resources. Optimized out in release builds.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Depth offset used to resolve z-fighting between 2d …","An error with some extra deduplication logic baked in.","Coalesces wgpu errors until the tracker is <code>clear()</code>ed.","A <code>wgpu_core::ContextError</code> with hashing and equality …","","","","","Resets the tracker.","This countdown reaching 0 indicates that the pipeline has …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Logs a wgpu error, making sure to deduplicate them as …","","","E.g. to implement <code>DedupableError</code> for u32 + u64:","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Increment tick count used in logged errors, and clear the …","","Tries downcasting a given value into the specified …","","","","","","","","","","The <code>FileResolver</code> handles both resolving import clauses and …","A pre-parsed import clause, as in <code>#import &lt;something&gt;</code>.","","","The recommended <code>FileResolver</code> type for the current …","Specifies where to look for imports when both absolute and …","","","","","","","","","","","","","","","","","","","","","","","","","","","All directories currently in the search path, in …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","A handle to the filesystem being used. Generally a …","","","","","","Insert a path into search path.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator over the directories in the search …","","Returns the recommended <code>FileResolver</code> for the current …","The path being imported, as-is: neither canonicalized nor …","","Push a path to search path.","","The search path that we will go through when an import …","","","","","","","","","","","","","","","","","","","","","","","","","The global <code>FileServer</code>.","A file server capable of watching filesystem events in the …","","","Coalesces all filesystem events since the last call to …","","","","","","Returns the argument unchanged.","Returns a reference to the global <code>FileServer</code>.","Returns a mutable reference to the global <code>FileServer</code>.","","Calls <code>U::from(self)</code>.","","","","","Stops watching for file events at the given <code>path</code>.","","Starts watching for file events at the given <code>path</code>.","","A very limited filesystem, just enough for our internal …","The global <code>MemFileSystem</code>.","A <code>FileSystem</code> implementation backed by an hash map.","A <code>FileSystem</code> implementation that simply delegates to …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the global <code>MemFileSystem</code>.","Returns the recommended filesystem handle for the current …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Mirrors the GPU contents of a frame-global uniform buffer.","","","","","","","","","Camera direction in world space. Same as …","Camera position in world space.","","","Creates a bind group that follows the global bind group …","Factor used to compute depth offsets, see <code>depth_offset.wgsl</code>…","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","For perspective: Multiply this with a camera distance to …","How many pixels there are per point. I.e. the ui scaling …","","","(tan(fov_y / 2) * aspect_ratio, tan(fov_y /2)), i.e. half …","","","","","","","","","","","","","","","","","","Loads both gltf and glb into the mesh &amp; texture manager.","","Load a Wavefront .obj file into the mesh &amp; texture manager.","","","Builder for a vector of line strips, making it easy to …","Add 2D rectangle outlines with axis along X and Y.","Add box outlines from a unit cube transformed by <code>transform</code>.","Add rectangle outlines.","Add 2D rectangle outlines.","Adds a single 3D line segment connecting two points.","Adds a single 2D line segment connecting two points. Uses …","Adds a series of unconnected 3D line segments.","Adds a series of unconnected 2D line segments.","Adds a 3D series of line connected points.","Adds a 2D series of line connected points.","","Start of a new batch.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterates over all line strips batches together with their …","","","","","","Finalizes the builder and returns a line draw data with …","","","","","","","","","","","","","Adds user data for every strip this builder adds.","","","Sets the <code>world_from_obj</code> matrix for the <em>entire</em> batch.","","","","","Base color texture, also known as albedo. (not optional, …","Factor applied to the decoded albedo color.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Index range within the owning <code>Mesh</code> that should be rendered …","Index range within the owning <code>Mesh</code> that should be rendered …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Every mesh has at least one material.","Defines how mesh vertices are built.","","","","","","","","","","","","","","","","","","","","","","Buffer for all vertex data, subdivided in several sections …","","","","","Keep in sync with <code>MaterialUniformBuffer</code> in …","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Mesh vertex as used in gpu residing vertex buffers.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Next vertex attribute index that can be used for another …","","","","","","","","Vertex buffer layouts describing how vertex data should be …","","","Builder for point clouds, making it easy to create …","","","Adds a single 2D point. Uses an autogenerated depth value.","Add several 3D points","Adds several 2D points. Uses an autogenerated depth value, …","Start of a new batch.","","","","","","","","","","","","","Assigns colors to all points.","","","","","","","","","","","","","","","","","","","","","Each time we <code>add_points</code>, or upon builder drop, make sure …","Set flags for this batch.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Assigns radii to all points.","","Finalizes the builder and returns a point cloud draw data …","","","","","","","","","","","","","","","","","","Assigns user data for all points in this builder.","","","","","","","Sets the <code>world_from_obj</code> matrix for the <em>entire</em> batch.","Backgrounds should always be rendered last.","GPU sided data used by a <code>Renderer</code> to draw things to the …","Assigns rough meaning to draw sorting indices","","Data that is valid for a batch of line strips.","A line drawing operation. Encompasses several lines, each …","Property flags for a line strip","Style information for a line strip.","","","","","","","","","Opaque objects, performing reads/writes to the depth …","Property flags for a point batch","Data that is valid for a batch of point cloud points.","A point cloud drawing operation. Expected to be recrated …","","Description of a point cloud.","Postprocessing effects that are applied before the final …","","A Renderer encapsulate the knowledge of how to render a …","","","","Texture filter setting for magnification (a texel covers …","Texture filter setting for minification (several texels …","","Transparent objects. Each draw typically gets its own …","Per-instance (as opposed to per-material/mesh!) tint color …","","","","","","","","","","","srgb color. Alpha unused right now","","","","","","","","Relative location in the rendering process when this …","","Vector that spans up the rectangle from its top left …","Vector that spans up the rectangle from its top left …","Additional properties of this point cloud batch.","Additional properties for the linestrip.","Returns the argument unchanged.","","Gpu mesh this instance refers to.","","","Calls <code>U::from(self)</code>.","","","Number of vertices covered by this batch.","Line renderer for efficient rendering of many line(strips)","Optional cpu representation of the mesh, not needed for …","Mesh renderer.","Tint that is multiplied to the rect, supports …","Point renderer for efficient rendering of point clouds.","Number of points covered by this batch.","Connected points. Must be at least 2.","","Radius of the point in world space","Radius of the line strip in world space","Renderer that makes it easy to draw textured 2d rectangles …","","","Texture that fills the rectangle","","","Top left corner position in world space.","","","","","Where this instance is placed in world space and how its …","Transformation applies to line positions","Transformation applies to point positions","","","<code>GpuBindGroupHandleStrong</code> pointing at the current image …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Renders a generated skybox from a color gradient","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Adds a round cap at the end of a line strip (excludes …","Puts a equilateral triangle at the end of the line strip …","Adds a round cap at the start of a line strip (excludes …","Puts a equilateral triangle at the start of the line strip …","","","Data that is valid for a batch of line strips.","A line drawing operation. Encompasses several lines, each …","","","Internal, ready to draw representation of <code>LineBatchInfo</code>","Property flags for a line strip","Style information for a line strip.","Total maximum number of line strips per <code>LineDrawData</code>.","Total maximum number of line vertices per <code>LineDrawData</code>.","Disable color gradient which is on by default","","","Returns the set containing all flags.","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","srgb color. Alpha unused right now","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","Returns an empty set of flags.","","","","","","Additional properties for the linestrip.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Number of vertices covered by this batch.","Transforms and uploads line strip data to be consumed by …","Returns the complement of this set of flags.","","","Radius of the line strip in world space","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","Transformation applies to line positions","Uniform buffer that changes for every batch of line strips.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Per-instance (as opposed to per-material/mesh!) tint color …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gpu mesh this instance refers to.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Optional cpu representation of the mesh, not needed for …","","Transforms and uploads mesh instance data to be consumed …","","","","","","","","","","","","","","","","","","","","Where this instance is placed in world space and how its …","Element in the gpu residing instance buffer.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Textures are 2D since 1D textures are very limited in size …","If true, we shade all points in the batch like spheres.","Maximum number of vertices per <code>PointCloudDrawData</code>.","","Internal, ready to draw representation of …","Property flags for a point batch","Data that is valid for a batch of point cloud points.","A point cloud drawing operation. Expected to be recrated …","","","Description of a point cloud.","Returns the set containing all flags.","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","Returns an empty set of flags.","","","","","","Additional properties of this point cloud batch.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Transforms and uploads point cloud data to be consumed by …","Returns the complement of this set of flags.","","Number of points covered by this batch.","Connected points. Must be at least 2.","","Radius of the point in world space","Removes the specified flags in-place.","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","Transformation applies to point positions","Uniform buffer that changes for every batch of line strips.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Texture filter setting for magnification (a texel covers …","Texture filter setting for minification (several texels …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vector that spans up the rectangle from its top left …","Vector that spans up the rectangle from its top left …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tint that is multiplied to the rect, supports …","","","Texture that fills the rectangle","","","","Top left corner position in world space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Handle that is valid for a single frame","","Handle to a 2D resource.","Resource handle that keeps the resource alive as long as …","A resource that lives until its last handle was dropped.","","","Handle to a resource that is stored in a resource manager.","","","","","A resources that lives only for a single frame.","Data required to create a texture 2d resource.","Texture manager for 2D textures.","Data for the highest mipmap level. Must be padded …","","","","","","","","","","","","","","","","This handle is only valid for this frame. Querying it …","","","","","","","","","","","","","Takes ownership of a mesh.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Accesses a given resource.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Handle that is valid for a single frame","Resource handle that keeps the resource alive as long as …","A resource that lives until its last handle was dropped.","","Handle to a resource that is stored in a resource manager.","","","","","","A resources that lives only for a single frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","We store a refcounted handle along side every long lived …","","","Creates a new resource.","","","","","","","","","","","","","","","","","","","","","This handle is only valid for this frame. Querying it …","","","Handle to a 2D resource.","Data required to create a texture 2d resource.","Texture manager for 2D textures.","","","","","","","","","","Creates a new 2D texture resource and schedules data …","","Data for the highest mipmap level. Must be padded …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieves gpu handle.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns a single pixel white pixel.","","Automatically sized, based on a view builder setting.","Like <code>Size::AUTO</code>, but larger by some small factor (~2).","A size of something in either world-units, screen-units, …","Same as <code>Size</code> but stored with a f16 float.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the size is an automatically determined …","","","","","Creates a new size in ui point units.","Creates a new size in scene units.","Get the point size of this, if stored as a point size.","Get the scene-size of this, if stored as a scene size.","","","","","","","","","","","","How <code>Size::AUTO</code> is interpreted.","","Color format used for the main target of the view builder.","Default depth state for enabled depth write &amp; read.","Default multisample state that any <code>wgpu::RenderPipeline</code> …","Depth format used for the main target of the view builder.","Enable MSAA always. This makes our pipeline less variable …","Puts the view space origin into the middle of the screen.","Orthographic projection with the camera position at the …","Configures the camera placement in the orthographic …","Perspective camera looking along the negative z view space …","How we project from 3D to 2D.","","<code>ViewBuilder</code> that can be shared between threads.","Basic configuration for a target view.","Puts the view space origin at the top-left corner of the …","The highest level rendering block in <code>re_renderer</code>. Used to …","","How <code>Size::AUTO</code> is interpreted.","","","","","","","","","","","","","","","","","","","","","","","","Composites the final result of a <code>ViewBuilder</code> to a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","Draws the frame as instructed to a temporary HDR target.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determines the line radius for <code>crate::Size::AUTO</code> for lines.","","","","","How many pixels are there per point. I.e. the ui scaling …","Determines the point radius when <code>crate::Size::AUTO</code>.","","","","","","","Result of <code>ViewBuilder::setup_view</code> - needs to be <code>Option</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Distance of the far plane to the camera.","Distance of the near plane.","Viewing angle in view space y direction (which is the …","Size of the orthographic camera view space y direction …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Collection of all wgpu resource pools.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the bind group layout. This will show up in …","","","","","","","","","","","","","","","","","","","","","","","","A reference counter baked bind group handle.","Resource pool for bind groups.","","","","Returns a ref counted handle to a currently unused …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Takes a strong handle to ensure the user is still holding …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the bind group. This will show up in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Base offset of the buffer. For bindings with …","Size of the binding, or <code>None</code> for using the rest of the …","","","A reference counter baked bind group handle. Once all …","","Returns a ref counted handle to a currently unused buffer. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Called by <code>RenderContext</code> every frame. Updates statistics …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Takes strong buffer handle to ensure the user is still …","Internal method to retrieve a resource with a weak handle …","Internal method to retrieve a strong handle from a weak …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of a buffer. This will show up in graphics …","","","","","","Size of a buffer.","","","","","","","","","","","","","","","","Usages of a buffer. If the buffer is used in any way that …","Generic resource pool for all resources that have varying …","","Handles to all alive resources. We story any ref counted …","","","","","","","","","","","Returns the argument unchanged.","","Upgrades a “weak” handle to a reference counted handle …","","Calls <code>U::from(self)</code>.","Any resource that has been deallocated last frame. We keep …","","","All known resources of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the pipeline layout. This will show up in …","","","","","","","","","","","","","","","","","","","","","","","","","","Renderpipeline descriptor, can be converted into …","A copy of <code>wgpu::VertexBufferLayout</code> with a <code>smallvec</code> for the …","The stride, in bytes, between elements of this buffer.","The list of attributes which comprise a single vertex.","Generates attributes with successive shader locations …","","","","","","","","","","","","","","","","","","","","The effect of draw calls on the depth and stencil aspects …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the pipeline. This will show up in graphics …","The multi-sampling properties of the pipeline.","","","","","The properties of the pipeline at the primitive assembly …","The color state of the render targets.","","How often this vertex buffer is “stepped” forward.","","","","","","","","","","","","","","","","","","","","","The format of any vertex buffers used with this pipeline.","","","","","","","","","","","","","","","","","","","","","","","","Frame index in which this resource was (re)created.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Frame index in which a handle to this resource was last …","","","","","","","","","","","","","","How to deal with out of bounds accesses in the u (i.e. x) …","How to deal with out of bounds accesses in the v (i.e. y) …","How to deal with out of bounds accesses in the w (i.e. z) …","Valid values: 1, 2, 4, 8, and 16.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the sampler. This will show up in graphics …","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","How to filter the texture when it needs to be minified …","How to filter between mip map levels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the shader. This will show up in graphics …","","","","","Path to the source code of this shader module.","","","","","","","","","","","","","","","Generic resource pool for all resources that are fully …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","A reference counter baked texture handle. Once all strong …","","","Returns a ref counted handle to a currently unused texture.","","","","","","","","","","","","","","","","","","","","","","","","","","","Dimensions of the texture.","","","","","","","","","","","","","","","Format of the texture.","Called by <code>RenderContext</code> every frame. Updates statistics …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Takes strong texture handle to ensure the user is still …","Internal method to retrieve a resource with a weak handle …","Internal method to retrieve a strong handle from a weak …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Debug label of the texture. This will show up in graphics …","Mip count of texture. For a texture with no extra mips, …","","","","Number of bytes this texture is expected to take.","Sample count of texture. If this is not 1, texture must …","","Size of the texture. All components must be greater than …","","","","","","","","","","","","","","","","","","","","","Allowed usages of the texture. If used in other ways, the …"],"i":[0,1,3,1,3,1,0,1,1,1,1,1,0,0,0,0,0,1,1,1,3,0,1,1,1,1,1,1,0,0,0,0,1,3,0,0,0,0,0,1,1,3,1,3,0,1,1,3,3,1,3,1,3,92,76,1,3,1,3,51,1,3,1,3,92,0,0,0,1,3,0,1,3,1,3,1,3,30,45,1,3,1,3,1,3,1,30,0,52,51,0,0,0,1,3,30,1,1,1,1,3,3,3,3,1,1,3,1,3,3,1,3,1,1,3,1,3,3,3,1,3,35,1,3,1,0,1,3,0,30,1,3,0,0,1,3,1,3,1,3,3,1,3,1,1,3,39,0,1,0,30,3,3,3,0,159,159,159,159,159,159,159,159,46,0,30,1,3,51,0,30,30,0,35,1,3,30,0,76,74,76,30,1,3,1,1,3,1,3,3,1,3,1,3,159,159,1,3,1,3,1,3,1,3,74,92,92,76,0,52,0,0,0,0,23,38,23,38,23,23,23,23,38,23,38,23,23,38,23,38,23,23,23,38,23,38,38,23,38,23,23,38,23,0,23,38,23,38,23,38,23,38,23,0,0,0,30,32,31,30,32,31,32,30,32,31,30,32,31,30,30,32,31,30,32,31,30,30,30,30,32,31,31,31,32,30,30,32,31,30,32,31,30,30,30,30,31,30,30,30,30,32,31,30,32,31,30,32,31,0,30,32,31,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,41,43,41,43,41,41,41,41,43,41,43,41,43,41,43,197,43,43,41,43,41,43,43,41,197,43,0,41,43,41,43,41,41,0,41,43,41,43,41,43,0,41,43,0,0,0,46,0,0,45,46,47,35,45,46,47,35,45,46,47,45,46,47,47,45,47,35,45,46,47,35,45,46,47,35,45,45,46,47,35,45,46,47,35,45,46,45,46,45,45,46,46,47,45,46,46,47,35,45,45,46,35,47,45,46,47,35,45,45,46,47,35,45,35,0,46,35,45,35,35,45,46,47,45,46,45,46,47,35,45,46,47,35,45,46,47,35,45,46,47,35,35,0,0,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,55,16,55,16,51,55,16,51,51,55,51,51,55,16,55,16,55,16,55,16,55,16,51,55,16,55,55,16,55,0,55,16,55,16,55,51,55,16,55,16,55,16,55,16,55,16,0,0,56,56,56,57,56,57,56,56,56,56,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,57,56,56,57,57,57,56,56,56,56,56,56,57,57,56,57,56,57,56,57,56,56,0,0,0,0,0,0,0,0,0,0,0,0,72,72,72,72,72,72,72,72,72,72,72,76,72,76,72,74,76,72,74,76,74,76,72,74,76,72,74,76,72,74,76,72,72,74,76,74,72,74,76,72,74,76,72,74,76,76,76,76,74,76,74,76,76,72,74,76,72,74,76,72,74,76,72,74,76,74,74,76,72,0,0,0,0,82,82,84,67,82,83,84,67,82,83,84,67,82,83,84,67,82,83,84,67,82,83,84,67,82,83,84,67,82,83,84,67,82,83,84,67,82,83,84,0,83,83,82,84,67,67,82,83,84,67,82,83,84,67,82,67,83,0,83,67,82,83,84,67,82,83,84,67,82,83,84,67,82,83,84,67,82,83,84,83,83,83,67,67,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,88,88,88,88,88,88,88,88,88,88,88,88,88,0,88,88,88,88,88,88,88,0,0,0,0,0,89,89,89,89,92,89,92,92,89,90,91,92,89,90,91,90,90,91,92,91,92,92,89,90,91,92,89,90,91,92,89,90,91,92,89,89,90,91,89,89,92,89,90,91,92,89,90,91,92,89,90,91,92,92,91,91,90,92,92,89,90,91,92,89,90,91,92,89,90,91,92,89,90,91,90,91,92,90,91,90,92,91,89,198,0,0,0,0,0,0,0,0,125,126,0,0,125,126,96,198,0,0,0,0,0,198,0,0,199,200,0,0,0,0,198,69,80,95,114,80,95,122,78,94,198,198,103,0,200,124,198,198,198,200,200,198,124,124,93,103,198,0,69,198,114,198,77,93,77,0,69,0,124,0,93,201,110,201,103,0,110,0,124,124,124,124,198,198,198,198,69,77,93,0,0,98,99,99,98,99,98,98,98,99,99,98,99,98,99,98,99,99,98,99,98,99,98,99,98,98,99,98,99,98,99,98,99,98,99,98,0,0,101,100,101,100,100,100,101,101,100,101,100,101,100,101,101,101,100,101,100,101,100,101,100,100,101,100,101,100,101,100,101,100,101,100,78,78,78,78,106,0,0,0,0,0,0,0,0,80,80,78,0,106,78,80,102,80,105,105,78,78,78,78,78,78,78,78,77,105,102,80,78,103,106,77,105,102,80,78,103,106,102,80,78,103,102,80,78,103,78,103,78,78,105,78,103,77,105,102,80,78,103,106,77,105,102,80,78,103,106,78,77,105,102,80,78,103,106,105,77,105,102,80,78,103,106,78,78,106,78,106,78,103,78,78,78,78,78,106,106,77,105,102,80,78,103,106,106,78,78,78,78,78,78,0,78,77,105,102,80,78,103,106,78,78,78,77,105,102,80,78,103,106,78,78,78,77,77,80,78,78,106,103,78,105,78,106,78,78,78,102,80,78,103,106,78,77,105,102,80,78,103,106,77,105,102,80,78,103,106,77,105,102,80,78,103,106,78,77,105,102,80,78,103,106,102,77,0,0,0,110,111,112,110,111,112,110,111,112,110,111,112,111,110,111,112,110,111,112,110,111,112,110,111,112,111,110,111,112,110,111,112,110,111,112,110,111,112,110,111,111,110,110,111,112,110,111,112,110,111,112,110,111,112,110,111,112,112,0,0,0,0,69,114,115,69,115,113,114,69,115,113,114,113,114,113,114,113,115,69,115,113,114,69,115,113,114,69,115,113,114,115,69,115,113,114,69,115,113,114,0,69,69,115,113,114,114,69,115,113,114,69,113,114,115,113,114,69,115,113,114,69,115,113,114,69,115,113,114,69,115,113,114,69,0,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,0,94,95,96,0,0,0,0,0,0,0,94,95,118,95,119,119,94,94,94,94,94,94,94,94,93,201,119,94,118,95,96,93,201,119,94,118,95,96,94,118,95,94,118,95,94,94,94,119,94,93,201,119,94,118,95,96,93,201,119,94,118,95,96,94,93,201,119,94,118,95,96,119,93,201,119,94,118,95,96,94,94,96,94,96,94,93,94,94,94,94,94,96,96,93,201,119,94,118,95,96,94,94,94,94,94,0,94,93,201,119,94,118,95,96,94,94,94,93,201,119,94,118,95,96,94,94,94,93,95,94,94,93,201,96,201,94,119,94,94,94,94,94,118,95,96,94,93,201,119,94,118,95,96,93,201,119,94,118,95,96,93,201,119,94,118,95,96,94,93,201,119,94,118,95,96,118,93,0,0,121,120,121,120,121,120,121,120,121,120,121,120,121,120,121,120,121,121,120,121,120,121,120,121,120,121,120,120,120,121,120,121,120,121,120,121,120,121,121,125,126,125,126,0,0,0,0,0,123,122,124,123,125,126,122,124,123,125,126,122,122,122,123,124,124,124,123,125,126,122,124,123,125,126,122,124,123,125,126,122,123,123,124,123,125,126,122,124,124,125,126,124,123,125,126,122,0,124,123,125,126,122,124,123,125,126,122,124,122,123,124,124,124,122,124,124,123,125,126,122,124,123,125,126,122,124,123,125,126,122,124,123,125,126,122,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,0,129,128,129,128,128,128,129,129,128,129,128,129,128,129,129,128,129,128,129,128,129,128,128,129,128,129,128,129,128,129,128,129,128,86,137,0,0,137,68,0,86,0,0,0,86,86,68,0,0,142,131,66,142,142,142,131,131,0,131,66,0,0,66,142,202,202,203,203,0,0,0,131,130,131,130,130,130,130,131,130,130,131,130,131,130,130,131,131,130,131,130,130,130,130,131,131,130,130,131,130,130,131,130,131,130,131,131,131,130,131,130,130,131,130,131,130,131,130,131,130,86,137,137,68,86,0,0,0,0,86,86,68,134,137,86,68,134,137,86,68,134,137,68,137,68,134,134,137,86,68,134,137,86,68,134,137,86,68,134,137,86,68,137,86,137,86,137,86,86,134,134,134,137,86,68,134,134,137,86,68,134,137,86,68,134,86,134,134,137,68,86,134,137,86,68,134,137,86,68,134,137,86,68,134,137,86,68,202,202,203,203,0,0,0,142,66,140,142,66,140,140,140,142,66,66,142,142,66,140,142,66,140,66,142,66,140,142,66,140,142,66,142,66,140,66,142,142,66,140,142,66,140,140,142,66,66,140,142,66,140,142,66,140,142,66,140,142,66,140,66,66,142,79,79,0,0,79,143,79,143,79,143,79,143,79,143,79,143,79,79,143,79,143,79,79,79,143,143,79,143,79,143,79,79,143,79,79,79,79,79,79,79,79,143,79,143,79,143,79,143,79,143,0,0,148,148,148,148,148,144,145,0,145,0,0,0,0,144,0,0,147,204,205,204,148,144,145,146,147,205,204,148,144,145,146,147,144,145,146,147,144,145,146,147,148,148,146,147,204,205,204,148,144,145,146,147,205,204,148,144,145,146,147,146,205,204,148,144,145,146,147,148,205,205,204,148,144,145,146,147,144,145,146,147,205,204,148,144,145,146,147,205,204,148,144,145,146,147,205,204,148,144,145,146,147,146,204,204,204,147,147,146,147,148,148,204,147,146,148,148,205,144,145,146,147,204,205,204,148,144,145,146,147,205,204,148,144,145,146,147,205,204,148,144,145,146,147,205,204,148,144,145,146,147,147,206,206,207,207,206,0,0,0,0,0,0,0,150,151,152,153,154,155,156,150,151,152,153,154,155,156,155,156,155,156,155,156,155,156,150,151,152,153,154,155,156,150,151,152,153,154,155,156,150,151,152,153,154,155,156,150,151,152,153,154,155,156,150,151,152,153,154,155,156,150,151,152,153,154,155,156,150,150,151,151,152,152,152,153,153,153,154,154,154,155,155,156,156,150,151,152,153,154,155,156,150,151,152,153,154,155,156,150,151,152,153,154,155,156,152,151,151,150,151,152,153,154,155,156,150,151,152,153,154,155,156,150,151,152,153,154,155,156,150,151,152,153,154,155,156,150,151,152,153,154,155,156,154,150,151,152,153,154,150,151,152,153,154,152,153,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,33,33,159,33,159,0,33,33,159,33,159,33,159,33,159,33,159,0,33,159,33,159,33,159,159,159,159,159,159,159,159,159,0,33,0,33,0,0,33,0,33,0,33,0,33,159,159,159,33,159,33,159,33,159,33,159,0,0,0,85,160,161,85,160,161,85,160,85,160,85,85,85,160,161,85,160,161,85,160,161,85,85,160,161,85,160,161,160,85,160,85,160,85,161,85,85,160,161,85,160,161,161,85,160,85,160,161,85,160,161,160,161,85,161,85,85,160,85,160,161,85,160,161,85,160,161,85,160,161,0,0,168,168,0,0,0,168,58,58,163,167,58,168,164,163,167,58,168,164,163,167,58,168,164,167,58,168,164,167,167,167,163,167,58,58,168,164,163,167,58,168,164,163,167,167,58,168,164,163,167,58,168,164,163,164,167,168,164,167,168,164,167,168,164,163,167,167,58,168,164,163,167,168,164,163,58,167,168,164,167,58,168,164,163,167,58,168,164,163,164,164,163,167,163,164,167,167,58,168,164,167,58,168,164,163,167,58,168,164,163,167,58,168,164,163,167,58,168,164,163,208,208,208,0,0,0,0,165,171,170,165,171,170,165,171,170,171,170,171,171,171,165,171,170,165,171,170,165,171,171,170,165,171,170,165,171,170,171,170,171,170,165,171,171,170,165,171,170,165,165,165,171,170,171,170,165,171,170,165,170,165,171,165,170,171,170,171,170,165,171,170,165,171,170,165,171,170,165,171,170,165,170,0,0,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,209,173,173,173,173,173,173,173,0,0,0,0,178,175,176,177,178,175,176,177,175,176,175,176,175,175,175,177,178,175,176,177,178,175,176,177,175,178,175,176,177,178,175,176,177,176,175,176,175,176,175,177,178,175,175,176,177,175,176,177,177,175,176,178,175,176,177,178,175,176,177,176,178,177,175,177,175,175,176,178,175,176,177,178,175,176,177,178,175,176,177,178,175,176,177,0,0,0,0,117,117,117,180,117,181,184,180,117,181,184,180,117,181,180,117,181,180,181,180,180,184,181,180,117,181,184,180,117,181,184,180,180,117,181,184,180,117,181,184,180,117,181,180,117,181,180,117,181,181,181,184,180,180,117,181,184,180,117,181,184,184,180,117,181,180,117,181,184,180,117,181,184,181,181,184,180,181,184,181,181,180,117,180,117,181,117,180,117,181,184,180,117,181,184,180,117,181,184,180,117,181,184,181,181,181,108,0,108,0,108,192,108,192,108,192,108,192,108,192,108,192,108,108,108,108,108,192,192,108,192,108,192,108,192,108,108,192,108,192,108,192,108,192,108,0,0,0,187,187,187,187,186,187,166,186,187,166,186,187,186,187,186,186,186,187,166,186,187,166,186,187,166,186,186,187,166,186,187,166,186,187,186,187,186,166,186,186,187,166,186,187,166,166,186,187,186,187,166,186,187,166,187,187,187,187,187,187,166,186,166,186,186,187,186,187,166,186,187,166,186,187,166,186,187,166,0,0,0,189,190,182,189,190,182,189,190,189,190,189,190,189,189,182,189,190,182,189,190,182,189,189,190,182,189,190,182,189,190,189,190,189,190,182,189,189,190,182,182,189,190,182,182,189,190,189,190,182,189,190,182,190,182,189,182,189,190,189,190,189,190,182,189,190,182,189,190,182,189,190,182,0,0,210,193,210,193,193,193,210,193,210,193,210,193,210,193,210,193,193,193,193,210,193,210,193,193,193,193,210,193,210,193,210,193,210,193,210,193,210,193,0,0,0,0,0,141,196,195,194,141,196,195,194,141,195,194,195,194,195,195,195,141,196,196,195,194,141,196,195,194,141,195,194,196,195,194,141,196,195,194,141,195,194,195,194,195,194,194,141,196,195,195,194,141,195,194,141,141,141,195,194,196,195,194,141,196,195,194,141,194,194,141,195,141,194,194,195,194,196,195,194,141,196,195,194,141,196,195,194,141,196,195,194,141,196,195,194,141,194],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],[[3,3],3],[1,1],[3,3],[1,2],[3,4],0,0,[[]],[[]],[[]],[[]],[[[6,[5]]],[[8,[7]]]],[1,1],[3,3],[[]],[[]],0,0,0,0,[[],1],[[],3],0,[9],[9],[9],[9],[[],[[10,[1]]]],[[],[[10,[3]]]],0,0,[[]],[[]],[9],[9],[[1,1],11],[[3,3],11],[[],11],0,0,0,[[[6,[5]]],11],0,0,0,[[1,12],[[10,[13]]]],[[3,12],[[10,[13]]]],0,[14,1],[[]],[3,1],[15,1],[1,3],[15,3],[[]],[14,3],[2,1],[2,1],[4,3],[2,1],[4,3],[[4,4],3],[[2,2,2],1],[[4,4,4],3],[[2,2,2],1],[[2,2,2,2],1],[[4,4,4,4],3],[[2,2,2,2],1],[[4,4,4,4],3],[[2,2,2,2],3],[[2,2,2,2],3],[2,1],[4,3],0,[1,2],[3,4],[[1,4],1],[[],16],[[],17],[[],17],0,0,[1],[3],0,0,[[1,9],2],[[3,9],4],[[1,9],2],[[3,9],4],[[],9],[[],9],[3,4],[[]],[[]],[1,11],[[],11],[[],11],0,0,[[1,4],1],0,0,[[3,3],3],[[3,4],3],[[3,4],3],[[],18],0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],[[[6,[5]]],[[8,[[20,[19]]]]]],0,0,0,0,0,[1,10],[3,10],0,0,0,0,0,0,[1],[3],[1],[1,1],[3,3],[[]],[[]],[3],[1],[3],[1],[3],0,0,[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[23,24],8],[23,23],[[]],[9],[9],[9],[9],[23,25],[[]],[[]],[9],[9],[23,26],[[23,12],27],[[]],[[]],0,[[],9],[[],9],[[]],[[]],[23,28],0,[23,24],[[],29],[[]],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[9],[9],[9],[9],[9],[9],0,[[]],[[]],[[]],[9],[9],[9],0,0,[30],[[]],[[]],[[]],[31,22],[[31,32,33,34,35]],0,0,[[],9],[[],9],[[],9],[[]],[[]],[[]],0,[[[36,[34]],[36,[37]],38],30],0,0,0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[34,17],[[],22],[[],22],[[],22],0,[[]],[[]],[39,39],[[]],[[],39],[9],[9],[[]],[9],[[39,39],11],[[],11],[[39,12],27],[[[22,[19]]],39],[40,39],[19,39],[[]],[39,[[22,[19]]]],[[],17],[39],[[],9],[[]],0,[[39,19],39],[[]],[[],10],[[],10],[[],21],[[],22],0,0,0,0,[[]],[[]],[[]],[[]],[41],0,[[],41],[9],[9],[9],[9],[[]],[[]],[9],[9],[42,11],[[43,43],11],[[],11],0,[[43,12],27],[[]],[[]],[[],17],[[41,44]],[[]],[43],0,[[],9],[[],9],[[]],[[]],[41],0,0,[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[46,46],[47,47],[[]],[[]],[[]],0,[[],45],[[],47],[[],[[35,[48]]]],[9],[9],[9],[9],[9],[9],[9],[9],0,[[]],[[]],[[]],[[]],[9],[9],[9],[9],[[45,45],11],[[46,46],11],[[],11],[[],11],[[45,12],27],[[45,12],27],[[46,12],27],[[46,12],27],[[47,12],27],[[]],[[]],[[[49,[7]]],46],[[]],[[]],[[],45],[19,[[10,[45]]]],[19,[[10,[46]]]],0,0,[[],9],[[],9],[[],9],[[],9],[[45,9,[6,[5]]]],[[]],[[]],[[]],[[]],[45,50],[51,[[35,[51]]]],[[],18],0,[[[35,[51]],[6,[5]]],[[8,[47]]]],[[45,[6,[5]]]],[[[35,[51]],[6,[5]],[6,[5]]],[[22,[7]]]],0,[[]],[[]],[[]],[[],40],[[],40],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[51,45],[[35,[51]]]],0,0,0,0,[[]],[[]],[[52,35],[[53,[7]]]],[9],[9],[[]],[9],0,[[]],[54],[54],[[],9],[[]],[[],[[8,[52]]]],[[],10],[[],10],[[],21],[[52,[6,[5]]],8],[[],22],[[52,35,[6,[5]],11],[[8,[7]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[[6,[5]]],[[8,[7]]]],[[55,[6,[5]]],[[8,[7]]]],[[16,[6,[5]]],[[8,[7]]]],[[[6,[5]]],8],[[[6,[5]]],8],[[55,[6,[5]]],8],[[[6,[5]],[20,[19]]],8],[[[6,[5]],[20,[19]]],8],[[55,[6,[5]],[20,[19]]],8],[[],16],[9],[9],[9],[9],[[]],[[]],[9],[9],[[[6,[5]]],11],[[55,[6,[5]]],11],[[16,[6,[5]]],11],0,[[]],[[]],[[],55],[[],16],[[],9],[[],9],[[]],[[]],[[],55],[[[6,[5]]],[[8,[[20,[19]]]]]],[[55,[6,[5]]],[[8,[[20,[19]]]]]],[[16,[6,[5]]],[[8,[[20,[19]]]]]],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[56,56],[[]],[[57,33,34,36],58],0,[9],[9],[9],[9],[[]],[[]],[9],[9],[[]],[[]],[[],9],[[],9],[[]],[[]],[[],11],0,0,[[33,34],57],0,0,0,0,0,[[]],0,[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,[[],59],0,0,[60,4],[[61,62,63,64]],[[65,66],[[8,[67]]]],[[19,68,30],[[8,[[61,[69]]]]]],[70,[[22,[71]]]],[[68,30],[[8,[[61,[69]]]]]],0,0,0,[[72,73,73],74],[[72,63],74],[[72,60,60,60],74],[[72,73,73,73],74],[[72,60,60],74],[[72,73,73],74],[[72,50],74],[[72,50],74],[[72,50],74],[[72,50],74],[[72,50,75]],[[76,[49,[39]]],72],[72,77],0,[[]],[[]],[[]],[[]],[[]],[[]],[[74,1],74],[[],[[76,[48]]]],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[72],[9],[9],[[74,78],74],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[76,11],[76,50],[76,50],[[74,79],74],0,0,0,[[76,30],80],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[74,74],0,0,[[72,81],72],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,67],[82,82],[83,83],[84,84],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],0,0,0,0,0,[[33,66,85,34,37,67],[[10,[83,86]]]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,[[]],[[]],[87,87],[[]],[9],[9],[[]],[9],[[]],[[],9],[[]],[[],11],[[]],[[],10],[[],10],[[],21],[[],22],0,[[]],[[]],[88,88],[[]],[9],[9],[[]],[9],[[88,12],27],[[]],[[],9],[[]],[[],11],[[],75],0,0,[[]],[[],10],[[],10],[[],21],[[],22],[[]],0,0,0,0,[[89,60],90],[[89,73],90],[[89,9,50],91],[[89,9,50],91],[[92,[49,[39]]],89],[89,93],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[90,1],90],0,[[91,50],91],0,0,[[],92],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[89],[9],[9],[9],[89],[[89,94],89],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[92,50],[92,50],0,[[91,50],91],[[90,79],90],[[92,30],[[10,[95,96]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[90,90],[[91,50],91],0,0,0,0,0,0,[[89,81],89],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,[[32,33,34,35]],0,[9],[9],[[]],[[33,97],8],[[],75],[9],0,0,0,0,[[]],0,0,[[],9],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],10],[[],10],[[],21],[[],22],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[98,98],[[]],[[32,33,34,35],99],[9],[9],[9],[9],[[]],[[]],[[99,33,97,98],8],[9],[9],[[]],[[]],[[],9],[[],9],[[]],[[]],[[30,36],98],0,[[]],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,0,[[]],[[]],[[]],[[]],[100,100],[[]],[[32,33,34,35],101],[9],[9],[9],[9],[[]],[[]],[[101,33,97,100],8],[[],75],[9],[9],[[]],[[]],[[],9],[[],9],[[]],[[]],[30,100],0,[[]],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],78],0,0,0,0,0,[[78,78],78],[[78,78]],[[78,78],78],[[78,78]],[78,2],0,[[78,78],78],[[78,78]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[102,102],[80,80],[78,78],[103,103],[[]],[[]],[[]],[[]],[[78,78],104],0,[78,78],[[78,78],11],[[32,33,34,35],105],[[],78],[[],103],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[78,78],78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[105,33,97],8],[9],[9],[9],[9],[9],[9],[9],[[],78],[[78,78],11],[[106,106],11],[[],11],[[],11],[[78,107]],0,[[78,12],27],[[78,12],27],[[78,12],27],[[78,12],27],[[78,12],27],[[106,12],27],[[106,12],27],[[]],[[]],[[]],[[]],[[]],[[]],[108,106],[[]],[2,[[22,[78]]]],[2,78],[2,78],[107,78],[[],17],[4,4],0,[78],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[78,78]],[[78,78],78],[[78,78],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,11],[78,11],[[],11],0,0,[30,[[10,[80,106]]]],[78,78],[[78,78],[[22,[104]]]],[109],0,[[78,78]],0,[[78,78,11]],[106,[[22,[42]]]],[[78,78],78],[[78,78]],[[78,78],78],[[]],[[]],[[]],[[]],[[],40],[[78,78]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[78,78],78],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[110,110],[111,111],[112,112],[[]],[[]],[[]],0,[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[9],[9],[9],0,[[]],[[]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[],11],[[],11],[[],11],0,0,0,0,[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[113,113],[114,114],[[]],[[]],0,[[32,33,34,35],115],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[115,33,97],8],[9],[9],[9],[9],[[]],[[]],[[]],[[]],0,0,[[],9],[[],9],[[],9],[[],9],0,[[]],[[]],[[]],[[]],0,0,[30,[[8,[114]]]],0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],0,0,0,[[]],[[]],[116,116],[[]],[9],[9],[[]],[9],[[]],[[],9],[[]],[[],11],[[]],[[],10],[[],10],[[],21],[[],22],[[],117],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],94],0,0,0,0,0,[[94,94],94],[[94,94]],[[94,94],94],[[94,94]],[94,75],0,[[94,94],94],[[94,94]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[94,94],[118,118],[95,95],[[]],[[]],[[]],[[94,94],104],[94,94],[[94,94],11],[[32,33,34,35],119],[[],94],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[94,94],94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[119,33,97],8],[9],[9],[9],[9],[9],[9],[9],[[],94],[[94,94],11],[[96,96],11],[[],11],[[],11],[[94,107]],0,[[94,12],27],[[94,12],27],[[94,12],27],[[94,12],27],[[94,12],27],[[96,12],27],[[96,12],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,[[22,[94]]]],[75,94],[75,94],[107,94],[[],17],0,[94],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[94,94]],[[94,94],94],[[94,94],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[94,11],[94,11],[[],11],0,[30,[[10,[95,96]]]],[94,94],[[94,94],[[22,[104]]]],0,0,[109],0,[[94,94]],0,[[94,94,11]],[[94,94],94],[[94,94]],[[94,94],94],[[]],[[]],[[]],[[],40],[[94,94]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[94,94],94],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,[[]],[[]],[[]],[[]],[120,120],[121,121],[[]],[[]],[9],[9],[9],[9],[[]],[[]],[9],[9],0,[[]],[[]],[[],9],[[],9],[[]],[[]],[[],11],[[],11],0,0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[122,122],[[]],[[32,33,34,35],123],[[],124],0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[123,33,97],8],[[],75],[9],[9],[9],[9],[9],0,0,[[125,12],27],[[126,12],27],[[]],[[]],[[]],[[]],[[]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],0,[30,[[10,[122,86]]]],0,0,0,0,[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],0,[[]],[[]],[127,127],[[]],0,[9],[9],[[]],[9],0,0,[[]],[[],9],[[]],[[],11],0,[[]],0,[[],10],[[],10],[[],21],[[],22],0,0,[[]],[[]],[[]],[[]],[128,128],[[]],[[32,33,34,35],129],[9],[9],[9],[9],[[]],[[]],[[129,33,97,128],8],[9],[9],[[]],[[]],[[],9],[[],9],[[]],[[]],[30,128],0,[[]],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[130,130],[[]],[[130,130],104],[[131,33,66,67,68],[[10,[132,86]]]],[130,133],[[],130],[9],[9],[9],[9],[[],[[10,[130]]]],0,[[]],[[]],[9],[9],[[130,130],11],[[],11],[[130,12],27],[[131,17]],[[]],[133,130],[[]],[[131,132],[[10,[83,86]]]],[[],17],[130],[[],9],[[],9],[[]],[[]],0,0,[[[36,[34]],[36,[37]],115],131],[[130,130],[[22,[104]]]],0,[130,10],[[]],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[134,17],[[10,[86]]]],[[[137,[[0,[135,136]]]]],[[137,[[0,[135,136]]]]]],[68,68],[[]],[[]],[[],[[134,[136]]]],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[[[137,[[0,[138,136]]]],137],11],[[86,86],11],[[],11],[[],11],[[[137,[[0,[139,136]]]],12],27],[[86,12],27],[[86,12],27],0,[[134,17]],[[]],[[]],[[]],[[]],[[134,137],[[10,[86]]]],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],0,[109],0,[[134,68],137],[[]],[[]],[[],40],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[140,140],[[]],[[],[[61,[2]]]],[[66,141,142],140],[[34,37,141,142],140],0,[9],[9],[9],[9],[9],[9],0,[[]],[[]],[[]],[9],[9],[9],0,[[66,17]],[[]],[[]],[[]],[[66,140],[[10,[36,86]]]],0,[[],9],[[],9],[[],9],[[]],[[]],[[]],[[],140],0,[[[36,[34]],[36,[37]],141],66],0,[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],0,[66,140],0,0,0,0,0,[[]],[[]],[[]],[[]],[79,79],[143,143],[[]],[[]],[9],[9],[9],[9],[[],[[10,[79]]]],[[]],[[]],[9],[9],[[79,79],11],[[79,12],27],[[]],[[]],[79,143],[[],9],[[],9],[[]],[[]],[79,11],[[],11],[[],11],[[79,4]],[[79,4]],[4,79],[4,79],[79,[[22,[4]]]],[79,[[22,[4]]]],[79,10],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[144,144],[145,145],[146,146],[147,147],[[]],[[]],[[]],[[]],[[148,30,97,73],8],[[],148],[[],146],[[],147],0,[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[],[[10,[146]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[148,30,3],[[8,[149]]]],0,[9],[9],[9],[9],[9],[9],[9],[[144,12],27],[[145,12],27],[[146,12],27],[[147,12],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[148,148],0,0,0,[146,10],0,[[148,30,147],[[8,[148]]]],0,[[]],[[]],[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[9],[73,150],[[]],[73,151],[[]],[60,152],[157,152],[[]],[60,153],[157,153],[[]],[158,154],[3,154],[[]],[81,155],[[]],[[]],[63,156],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],33],[[],159],[9],[9],[9],[9],[[]],[[]],[9],[9],0,[[]],[[]],[[],9],[[],9],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[33,159],0,0,0,[159,17],0,[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[85,85],[160,160],[[]],[[]],[[85,85],104],[85,133],[[],85],[[],160],[[],161],[9],[9],[9],[9],[9],[9],[[],[[10,[85]]]],[[]],[[]],[[]],[9],[9],[9],0,[[85,85],11],[[160,160],11],[[],11],[[],11],[[85,12],27],[[161,17]],[[]],[133,85],[[]],[[]],[[],17],[[],17],[[161,34,160],85],[[161,85],[[10,[162,108]]]],[85],[160],[[],9],[[],9],[[],9],[[]],[[]],[[]],0,[161,9],[[85,85],[[22,[104]]]],0,[85,10],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,[[163,34,164,161,141,165,166],58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[167,167],[58,58],[168,168],[164,164],[[]],[[]],[[]],[[]],[[167,167],104],[167,133],[[],167],[[],163],[9],[58],[9],[9],[9],[9],[9],[9],[9],[9],[9],[[],[[10,[167]]]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],0,[[167,167],11],[[168,168],11],[[164,164],11],[[],11],[[],11],[[],11],[[167,12],27],[[168,12],27],[[164,12],27],[[163,17,141,165,166]],[133,167],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[163,58],[[10,[169,108]]]],0,[167],[168],[164],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],0,0,[163,9],[[167,167],[[22,[104]]]],0,[164,17],[167,10],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,[[165,34,170],[[36,[171]]]],[[]],[[]],[[]],[[]],[[]],[[]],[171,171],[170,170],[[]],[[]],[[171,171],104],[171,133],[[],171],[[],165],[9],[9],[9],[9],[9],[9],[[],[[10,[171]]]],[[]],[[]],[[]],[9],[9],[9],[[171,171],11],[[170,170],11],[[],11],[[],11],[[171,12],27],[[170,12],27],[[165,17]],[133,171],[[]],[[]],[[]],[[],17],[[],17],[[165,36],[[10,[172,108]]]],[[165,171],[[10,[172,108]]]],[[165,171],36],[171],[170],[[],9],[[],9],[[],9],[[]],[[]],[[]],0,[165,9],[[171,171],[[22,[104]]]],0,[170,17],[171,10],0,[[]],[[]],[165,17],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],0,0,0,0,[[173,174],36],[[]],[[]],0,[[],[[173,[136]]]],[9],[9],[[]],[9],[[173,17]],[[]],[173,[[10,[108]]]],[173,36],[[],9],[[]],0,[173,9],[[],17],0,[173,17],0,[[],10],[[],10],[[],21],[[],22],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[175,175],[176,176],[[]],[[]],[[175,175],104],[175,133],[[],175],[[],177],[9],[9],[9],[9],[9],[9],[9],[9],[[],[[10,[175]]]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],0,[[175,175],11],[[176,176],11],[[],11],[[],11],[[175,12],27],[[177,17]],[[]],[[]],[133,175],[[]],[[]],[[],17],[[],17],[[177,34,176,161],175],[[177,175],[[10,[178,108]]]],[175],[176],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],0,0,[177,9],[[175,175],[[22,[104]]]],0,[175,10],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,[[75,50],179],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[180,180],[117,117],[181,181],[[]],[[]],[[]],[[180,180],104],[[181,34,177,182],[[8,[183]]]],[180,133],[[],180],[[],184],0,[9],[9],[9],[9],[9],[9],[9],[9],[[],[[10,[180]]]],[[]],[[]],[[]],[[]],[9],[9],[9],[9],[[180,180],11],[[117,117],11],[[181,181],11],[[],11],[[],11],[[],11],[[180,12],27],[[117,12],27],[[181,12],27],0,0,[[184,34,17,182,177]],[[]],[133,180],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[184,34,181,177,182],180],[[184,180],[[10,[183,108]]]],[180],[117],[181],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],0,0,[184,9],[[180,180],[[22,[104]]]],0,0,0,0,[180,10],0,[[]],[[]],[[]],[117,185],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[9],[9],[9],[9],[[]],[[]],[9],[9],[[108,108],11],[[],11],[[108,12],27],[[108,12],27],0,[[]],[[]],[[],9],[[],9],[[]],[[]],0,[109],[[],40],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[186,186],[187,187],[[]],[[]],[[186,186],104],[186,133],[[],186],[[],187],[[],166],[9],[9],[9],[9],[9],[9],[[],[[10,[186]]]],[[]],[[]],[[]],[9],[9],[9],[[186,186],11],[[187,187],11],[[],11],[[],11],[[186,12],27],[[166,17]],[[]],[133,186],[[]],[[]],[[],17],[[],17],[[166,34,187],186],[[166,186],[[10,[188,108]]]],[186],[187],[[],9],[[],9],[[],9],[[]],[[]],[[]],0,0,0,0,0,0,[166,9],[[186,186],[[22,[104]]]],0,[186,10],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[189,189],[190,190],[[]],[[]],[[189,189],104],[[190,34,35],191],[189,133],[[],189],[[],182],[9],[9],[9],[9],[9],[9],[[],[[10,[189]]]],[[]],[[]],[[]],[9],[9],[9],[[189,189],11],[[190,190],11],[[],11],[[],11],[[189,12],27],[[190,12],27],[[182,34,35,17,53]],[133,189],[[]],[[]],[[]],[[182,189],[[10,[191,108]]]],[[],17],[[],17],[[182,34,35,190],189],[[182,189],[[10,[192,108]]]],[189],[190],[[],9],[[],9],[[],9],[[]],[[]],[[]],0,[182,9],[[189,189],[[22,[104]]]],0,[189,10],0,[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],0,0,[[]],[[]],[[]],[[]],0,[[],[[193,[136]]]],[9],[9],[9],[9],[[]],[[]],[9],[9],[[]],[[]],[[193,174]],[193,[[10,[108]]]],[193,[[10,[192,108]]]],[[],9],[[],9],[[]],[[]],0,[193,9],[[193,54]],0,0,0,[22,[[10,[108]]]],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],22],[[],22],0,0,0,0,0,[[141,34,194],[[36,[195]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[195,195],[194,194],[[]],[[]],[[195,195],104],[195,133],[[],195],[[],141],0,[9],[9],[9],[9],[9],[9],[9],[9],[[],[[10,[195]]]],0,[[]],[[]],[[]],[[]],[9],[9],[9],[9],[[195,195],11],[[194,194],11],[[],11],[[],11],[[195,12],27],[[194,12],27],0,[[141,17]],[[]],[[]],[133,195],[[]],[[]],[[],17],[[],17],[[141,36],[[10,[196,108]]]],[[141,195],[[10,[196,108]]]],[[141,195],36],[195],[194],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],0,0,[141,9],[[195,195],[[22,[104]]]],0,[194,17],0,[195,10],0,0,[[]],[[]],[141,17],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[],22],0],"p":[[3,"Color32"],[15,"u8"],[3,"Rgba"],[15,"f32"],[3,"Path"],[8,"AsRef"],[3,"PathBuf"],[6,"Result"],[15,"usize"],[4,"Result"],[15,"bool"],[3,"Formatter"],[3,"Error"],[3,"Hsva"],[3,"HsvaGamma"],[3,"OsFileSystem"],[15,"u64"],[6,"RecommendedFileResolver"],[15,"str"],[4,"Cow"],[3,"TypeId"],[4,"Option"],[4,"HardwareTier"],[3,"DownlevelCapabilities"],[6,"DeviceDescriptor"],[3,"Features"],[6,"Result"],[3,"Limits"],[3,"Backends"],[3,"RenderContext"],[3,"Renderers"],[3,"SharedRendererData"],[3,"WgpuResourcePools"],[3,"Device"],[3,"FileResolver"],[3,"Arc"],[3,"Queue"],[3,"RenderContextConfig"],[3,"DebugLabel"],[3,"String"],[3,"ErrorTracker"],[8,"Error"],[3,"WrappedContextError"],[4,"Error"],[3,"SearchPath"],[3,"ImportClause"],[3,"InterpolatedFile"],[8,"Default"],[8,"Into"],[8,"Iterator"],[8,"FileSystem"],[3,"FileServer"],[6,"HashSet"],[8,"FnMut"],[3,"MemFileSystem"],[3,"FrameUniformBuffer"],[3,"GlobalBindings"],[3,"GpuBindGroupHandleStrong"],[3,"BoundingBox"],[3,"Vec3"],[3,"Vec"],[3,"Node"],[3,"Affine3A"],[6,"HashMap"],[3,"Mesh"],[3,"TextureManager2D"],[3,"Mesh"],[4,"ResourceLifeTime"],[3,"MeshInstance"],[4,"Format"],[4,"TextureFormat"],[3,"LineBatchBuilder"],[3,"Vec2"],[3,"LineStripBuilder"],[15,"u32"],[3,"LineStripSeriesBuilder"],[3,"LineBatchInfo"],[3,"LineStripFlags"],[3,"Size"],[3,"LineDrawData"],[3,"Mat4"],[3,"Material"],[3,"GpuMesh"],[3,"GpuMaterial"],[3,"GpuBindGroupLayoutHandle"],[4,"ResourceManagerError"],[3,"MaterialUniformBuffer"],[3,"MeshVertexData"],[3,"PointCloudBatchBuilder"],[3,"PointBuilder"],[3,"PointsBuilder"],[3,"PointCloudBuilder"],[3,"PointCloudBatchInfo"],[3,"PointCloudBatchFlags"],[3,"PointCloudDrawData"],[4,"PointCloudDrawDataError"],[3,"RenderPass"],[3,"CompositorDrawData"],[3,"Compositor"],[3,"GenericSkyboxDrawData"],[3,"GenericSkybox"],[3,"LineStripBatch"],[3,"LineStripInfo"],[4,"Ordering"],[3,"LineRenderer"],[4,"LineDrawDataError"],[8,"IntoIterator"],[4,"PoolError"],[3,"Demand"],[3,"LineVertex"],[3,"LineStripInfo"],[3,"BatchUniformBuffer"],[3,"MeshBatch"],[3,"MeshDrawData"],[3,"MeshRenderer"],[3,"InstanceData"],[3,"VertexBufferLayout"],[3,"PointCloudBatch"],[3,"PointCloudRenderer"],[3,"PositionData"],[3,"BatchUniformBuffer"],[3,"RectangleDrawData"],[3,"RectangleRenderer"],[3,"TexturedRect"],[4,"TextureFilterMag"],[4,"TextureFilterMin"],[3,"UniformBuffer"],[3,"TestTriangleDrawData"],[3,"TestTriangle"],[3,"MeshHandleInner"],[3,"MeshManager"],[6,"GpuMeshHandle"],[3,"KeyData"],[3,"ResourceManager"],[8,"Clone"],[8,"Key"],[4,"ResourceHandle"],[8,"PartialEq"],[8,"Debug"],[3,"GpuTexture2DHandle"],[3,"GpuTexturePool"],[3,"Texture2DCreationDesc"],[3,"SizeHalf"],[4,"OrthographicCameraMode"],[4,"Projection"],[3,"AutoSizeConfig"],[3,"TargetConfiguration"],[3,"ViewBuilder"],[3,"CommandBuffer"],[3,"Vec2"],[3,"Vec2Padded"],[3,"Vec3"],[3,"Vec3Unpadded"],[3,"Vec4"],[3,"Mat4"],[3,"Mat4x3"],[3,"Vec3A"],[3,"Vec4"],[3,"WgpuResourcePoolStatistics"],[3,"BindGroupLayoutDesc"],[3,"GpuBindGroupLayoutPool"],[3,"BindGroupLayout"],[3,"GpuBindGroupPool"],[3,"BindGroupDesc"],[3,"GpuBufferPool"],[3,"GpuSamplerPool"],[3,"GpuBindGroupHandle"],[4,"BindGroupEntry"],[3,"BindGroup"],[3,"BufferDesc"],[3,"GpuBufferHandle"],[3,"Buffer"],[3,"DynamicResourcePool"],[8,"FnOnce"],[3,"GpuPipelineLayoutHandle"],[3,"PipelineLayoutDesc"],[3,"GpuPipelineLayoutPool"],[3,"GpuPipelineLayout"],[3,"SmallVec"],[3,"GpuRenderPipelineHandle"],[3,"RenderPipelineDesc"],[3,"GpuShaderModulePool"],[3,"RenderPipeline"],[3,"GpuRenderPipelinePool"],[3,"VertexBufferLayout"],[3,"GpuSamplerHandle"],[3,"SamplerDesc"],[3,"Sampler"],[3,"GpuShaderModuleHandle"],[3,"ShaderModuleDesc"],[3,"ShaderModule"],[3,"ResourceStatistics"],[3,"StaticResourcePool"],[3,"TextureDesc"],[3,"GpuTextureHandle"],[3,"GpuTexture"],[8,"DedupableError"],[4,"DrawOrder"],[8,"DrawData"],[8,"Renderer"],[3,"PointCloudVertex"],[13,"Frame"],[13,"ExpiredResource"],[3,"ViewTargetSetup"],[3,"QueuedDraw"],[13,"Orthographic"],[13,"Perspective"],[13,"Buffer"],[8,"SizedResourceDesc"],[3,"StoredResource"]]},\
"re_sdk_comms":{"doc":"Communications between server and viewer.","t":[3,17,17,17,6,3,0,5,5,12,12,12,5,12,12,12,12,12,12,12,5,0,0,3,13,13,13,3,4,13,4,13,4,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,5,11,11,11,11,11,11,11,11,12,5,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11],"n":["Client","DEFAULT_SERVER_PORT","PREFIX","PROTOCOL_VERSION","Result","ServerOptions","buffered_client","decode_log_msg","default_server_addr","drop_join","drop_quit_tx","encode_join","encode_log_msg","encode_quit_tx","flushed_rx","max_latency_sec","msg_tx","quiet","send_join","send_quit_tx","serve","server","tcp_client","Client","DropIfDisconnected","Flush","Flush","FlushedMsg","InterruptMsg","LogMsg","MsgMsg","Packet","PacketMsg","Quit","QuitMsg","SetAddr","SetAddr","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop_if_disconnected","drop_join","drop_quit_tx","encode_join","encode_quit_tx","eq","eq","eq","equivalent","equivalent","equivalent","flush","flushed_rx","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","msg_drop","msg_encode","msg_tx","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","send","send_join","send_msg_msg","send_quit_tx","send_until_success","set_addr","tcp_sender","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CongestionManager","ServerOptions","Throttling","TimelineThrottling","__clone_box","accept_rate","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","chance_of_sending","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","fmt","from","from","from","from","init","init","init","init","into","into","into","into","last_log_time","last_time","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","max_latency_sec","max_latency_sec","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","quiet","register_latency","register_latency","rng","run_client","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","send_time","serve","should_send","should_send_time","should_send_time_point","spawn_client","throttling","timeline_histories","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","TcpClient","addrs","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","connect","default","deref","deref_mut","drop","flush","from","init","into","is_connected","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","send","set_addr","stream","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from"],"q":["re_sdk_comms","","","","","","","","","","","","","","","","","","","","","","","re_sdk_comms::buffered_clientre_sdk_comms::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_sdk_comms::tcp_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Send <code>LogMsg</code>es to a server.","","","","","","","","","","","","","","","If the latency in the <code>LogMsg</code> channel is greater than this, …","","Turns <code>info</code>-level logs into <code>debug</code>-level logs.","","","Listen to multiple SDK:s connecting to us over TCP.","TODO(emilk): use tokio instead","","Send <code>LogMsg</code>es to a server.","Switch to a mode where we drop messages if disconnected.","","","","Sent to prematurely quit (before flushing).","","","","","Quite immediately, dropping any unsent message.","Sent to prematurely quit (before flushing).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait until everything has been sent.","","","","","Switch to a mode where we drop messages if disconnected.","","","","","","","","","","","Stall untill all messages so far has been sent.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decides how many messages to drop so that we achieve a …","","Figures out how large fraction of messages to send based on","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","If the latency in the <code>LogMsg</code> channel is greater than this, …","","","","","","","","","","","Turns <code>info</code>-level logs into <code>debug</code>-level logs.","","","","","","","","","","","","","","Listen to multiple SDK:s connecting to us over TCP.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Connect to a rerun server and send log messages.","","","","","","","","return <code>false</code> on failure. Does nothing if already connected.","","","","","Wait until all logged data have been sent.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","blocks until it is sent","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,11,11,11,0,11,11,7,11,7,11,11,0,0,0,0,16,21,35,0,0,21,0,35,0,16,0,21,35,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,11,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,11,13,15,16,11,11,11,11,11,13,15,16,13,15,16,11,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,0,0,11,11,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,11,11,11,11,0,11,0,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,21,35,11,13,15,16,0,0,0,0,7,29,28,29,7,26,28,29,7,26,28,29,7,26,28,29,7,26,26,28,29,7,26,28,29,7,26,7,7,7,26,28,29,7,26,28,29,7,26,28,29,7,26,7,7,28,29,7,26,28,29,7,26,28,29,7,26,29,29,28,29,7,26,28,29,7,26,29,7,28,29,28,29,7,26,28,29,7,26,7,28,29,28,0,28,29,7,26,28,29,7,26,26,0,28,28,28,0,28,28,7,28,29,7,26,28,29,7,26,28,29,7,26,28,29,7,26,28,29,7,26,28,29,7,26,28,29,7,26,28,29,7,26,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22],"f":[0,0,0,0,0,0,0,[[],[[2,[1]]]],[[],3],0,0,0,[1,[[5,[4]]]],0,0,0,0,0,0,0,[[6,7],[[9,[[8,[1]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[11],[12],[12],[12],[12],[11],0,0,0,0,[[13,13],14],[[15,15],14],[[16,16],14],[[],14],[[],14],[[],14],[11],0,[[13,17],18],[[15,17],18],[[16,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[19,19]],[[19,20,19,20]],0,[3,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,1]],0,[[11,21]],0,[[22,14,19],[[10,[16]]]],[[11,3]],[[3,19,19,20]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[7,7],[[]],[[],7],[[],26],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[7,7],14],[[7,17],18],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],0,0,[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],0,0,[27,28],[27,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[28,27]],[[29,27]],0,[[30,31,7],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[6,7],[[9,[[8,[1]]]]]],[[28,1],14],[[28,32,33],14],[[28,34],14],[[30,[31,[1]],7]],0,0,[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],10],[[],10],[22,9],[[],22],[12],[12],[12],[22],[[]],[[],12],[[]],[22,14],[[],10],[[]],[3,22],[[]],[[]],[[]],[[]],[22,9],[[22,3]],0,[[],23],[[],23],[[],24],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"LogMsg"],[6,"Result"],[4,"SocketAddr"],[15,"u8"],[3,"Vec"],[15,"u16"],[3,"ServerOptions"],[3,"Receiver"],[6,"Result"],[4,"Option"],[3,"Client"],[15,"usize"],[3,"FlushedMsg"],[15,"bool"],[3,"QuitMsg"],[4,"InterruptMsg"],[3,"Formatter"],[6,"Result"],[3,"Receiver"],[3,"Sender"],[4,"MsgMsg"],[3,"TcpClient"],[4,"Result"],[3,"TypeId"],[3,"Private"],[3,"TimelineThrottling"],[15,"f32"],[3,"CongestionManager"],[3,"Throttling"],[3,"TcpStream"],[3,"Sender"],[3,"TimelineName"],[15,"i64"],[3,"TimePoint"],[4,"PacketMsg"]]},\
"re_smart_channel":{"doc":"A channel that keeps track of latency and queue length.","t":[13,3,13,3,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,5,5,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12],"n":["File","Receiver","Sdk","Sender","SharedStats","Source","TcpServer","WsClient","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chained_channel","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","fmt","from","from","from","from","hash","init","init","init","init","into","into","into","into","is_empty","is_empty","is_network","latency_ns","latency_ns","latency_ns","latency_sec","latency_sec","len","len","recv","recv_with_send_time","rx","send","send_at","smart_channel","smart_channel_with_stats","source","source","stats","stats","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_recv","tx","type_id","type_id","type_id","type_id","path","port","ws_server_url"],"q":["re_smart_channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_smart_channel::Source","",""],"d":["The source if a file on disk","","The source is the logging sdk directly, same process.","","Stats for a channel, possibly shared between chained …","Where is the messages coming from?","We are a TCP server listening on this port","We are a WebSocket client connected to a rerun server.","","","","","","","","","Create a new channel that use the same stats as this one.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the channel currently empty of messages?","Is the channel currently empty of messages?","","Latest known latency from sending a message to receiving …","Latest known latency from sending a message to receiving …","Latest known latency from sending a message to receiving …","Latest known latency from sending a message to receiving …","Latest known latency from sending a message to receiving …","Number of messages in the channel right now.","Number of messages in the channel right now.","","Receives without registering the latency.","","","back-date a message","","Create a new channel using the same stats as some other.","Where is the data coming from?","","","","","","","","","","","","","","","","","","","","","","The server we are connected to (or are trying to connect …"],"i":[3,0,3,0,0,0,3,3,2,3,6,5,2,3,6,5,2,3,5,3,5,6,2,3,6,5,2,3,6,5,2,3,6,5,3,3,2,3,6,5,3,2,3,6,5,2,3,6,5,2,5,3,2,5,6,2,5,2,5,2,2,2,5,5,0,0,2,2,2,5,3,5,2,3,6,5,2,3,6,5,2,5,2,3,6,5,20,21,22],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]]],[3,3],[[[5,[[0,[4,1]]]]],[[5,[[0,[4,1]]]]]],[[]],[[]],[[],6],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[3,3],8],[[3,9],10],[[]],[[]],[[]],[[]],[3],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[[2,[1]]],8],[[[5,[1]]],8],[3,8],[[[2,[1]]],11],[[[5,[1]]],11],0,[[[2,[1]]],12],[[[5,[1]]],12],[[[2,[1]]],7],[[[5,[1]]],7],[[[2,[1]]],[[14,[1,13]]]],[[[2,[1]]],[[14,[13]]]],0,[[[5,[1]],1],[[14,[[15,[1]]]]]],[[[5,[1]],16,1],[[14,[[15,[1]]]]]],[3],[[3,[17,[6]]]],[[[2,[1]]],3],0,0,0,[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[2,[1]]],[[14,[1,18]]]],0,[[],19],[[],19],[[],19],[[],19],0,0,0],"p":[[8,"Send"],[3,"Receiver"],[4,"Source"],[8,"Clone"],[3,"Sender"],[3,"SharedStats"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u64"],[15,"f32"],[3,"RecvError"],[4,"Result"],[3,"SendError"],[6,"Instant"],[3,"Arc"],[4,"TryRecvError"],[3,"TypeId"],[13,"File"],[13,"TcpServer"],[13,"WsClient"]]},\
"re_string_interner":{"doc":"Yet another string interning library.","t":[7,3,3,11,11,11,11,11,11,11,5,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,12,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11],"n":["GLOBAL_INTERNER","InternedString","StringInterner","as_ref","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","bytes_used","bytes_used","clone","clone_into","cmp","declare_new_type","default","deref","deserialize","eq","equivalent","fmt","fmt","from","from","from","from","get_hash","global_intern","hash","hash","hash","hash","intern","into","into","len","map","new","partial_cmp","serialize","string","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["re_string_interner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","Declare a newtype wrapper around <code>InternedString</code> with all …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","global interning function.","Fast but high quality string hash","","Precomputed hash of the string.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,1,1,4,1,4,0,4,1,1,1,0,4,1,1,1,1,1,1,1,1,1,4,1,0,0,1,1,1,4,1,4,4,4,1,1,1,1,1,1,1,4,1,4,1,4],"f":[0,0,0,[1,2],[1,2],[1,2],[[]],[[]],[[]],[[]],[[],3],[4,3],[1,1],[[]],[[1,1],5],0,[[],4],[1,2],[6,[[7,[1]]]],[[1,1],8],[[],8],[[1,9],10],[[1,9],10],[2,1],[11,1],[[]],[[]],[[],12],[2,1],[13,12],[1],[1,12],0,[[4,2],1],[[]],[[]],[4,3],0,[2,1],[[1,1],[[14,[5]]]],[[1,15],7],0,[[]],[[],11],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16]],"p":[[3,"InternedString"],[15,"str"],[15,"usize"],[3,"StringInterner"],[4,"Ordering"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"String"],[15,"u64"],[8,"Hash"],[4,"Option"],[8,"Serializer"],[3,"TypeId"]]},\
"re_tensor_ops":{"doc":"Helper used to access <code>re_log_types::Tensor</code> as an ndarray","t":[13,13,4,13,13,13,5,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,11,11,11,11,12,11,11,12,12,5,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11],"n":["BadNamesLength","BadTensorShape","TensorCastError","TypeMismatch","UnsupportedDataType","UnsupportedTensorStorage","as_ndarray","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","dimension_mapping","eq","fmt","fmt","from","from","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","provide","saturating_as","saturating_cast_from","source","to_rerun_tensor","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from","source","DimensionMapping","DimensionSelector","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","create","deserialize","deserialize","dim_idx","eq","eq","equivalent","equivalent","find_width_height_dim_indices","fmt","fmt","from","from","height","into","into","invert_height","invert_width","is_name_like_height","is_name_like_width","is_valid","longest_and_second_longest_dim_indices","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","selectors","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","visible","vzip","vzip","width","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":["re_tensor_ops","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_tensor_ops::TensorCastError","re_tensor_ops::dimension_mapping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Flip the height","Flip the width","","","Protect against old serialized data that is not up-to-date …","Returns the longest and second longest dimensions","","","","","","","","","","","","","","Which dimensions have selectors, and are they visible?","","","","","","","","","","","","","","","","","","","","","",""],"i":[5,5,0,5,5,5,0,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,24,0,0,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,21,20,21,20,20,21,20,21,0,20,21,20,21,21,20,21,21,21,0,0,21,0,20,21,20,21,20,20,21,20,21,20,21,20,21,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,20,21,21,20,21,20,21],"f":[0,0,0,0,0,0,[1,[[6,[[4,[[0,[2,3]]]],5]]]],[[]],[[]],[[]],[[]],[[],7],[[],7],0,[[5,5],8],[[5,9],10],[[5,9],10],[[]],[11,5],[[]],[[],7],[[]],[[]],[[]],[12],[[]],[[]],[5,[[7,[13]]]],[[14,[7,[[16,[15]]]],17],[[6,[1,5]]]],[[],15],[[],6],[[],6],[[],18],[[]],[[]],[[]],[[]],[[]],0,0,0,[19],[19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[20,20],[21,21],[[]],[[]],[[],21],[[],[[6,[20]]]],[[],[[6,[21]]]],0,[[20,20],8],[[21,21],8],[[],8],[[],8],[[]],[[20,9],10],[[21,9],10],[[]],[[]],0,[[]],[[]],0,0,[22,8],[22,8],[[21,23],8],[[]],[[],7],[[],7],[[]],[[]],[23,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[20,6],[21,6],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],18],[[],18],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[[]],[[]],[[]],[[]]],"p":[[3,"ClassicTensor"],[8,"Pod"],[8,"TensorDataTypeTrait"],[6,"ArrayViewD"],[4,"TensorCastError"],[4,"Result"],[4,"Option"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"ShapeError"],[3,"Demand"],[8,"Error"],[3,"ArrayBase"],[3,"String"],[3,"Vec"],[4,"TensorDataMeaning"],[3,"TypeId"],[3,"Private"],[3,"DimensionSelector"],[3,"DimensionMapping"],[15,"str"],[15,"usize"],[13,"BadTensorShape"]]},\
"re_tuid":{"doc":"TUID: Time-based Unique Identifiers.","t":[18,3,3,3,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["MAX","MutableTuidArray","Tuid","TuidArray","TuidArrayIterator","ZERO","__clone_box","arrow_deserialize","arrow_serialize","as_any","as_arc","as_box","as_mut_any","as_u128","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","consume_next","data_type","data_type","data_type","default","deserialize","eq","field_inc","field_inc","field_time_ns","field_time_ns","fmt","fmt","from","from","from","from","has_validity","hash","inc","init_validity","into","into","into","into","into_iter","into_iter","len","monotonic_nanos_since_epoch","new","new_array","next","partial_cmp","push_null","random","random_u64","reserve","return_next","serialize","shrink_to_fit","time_ns","to_owned","try_extend","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_push","type_id","type_id","type_id","type_id","validity","validity","validity_iter"],"q":["re_tuid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["All ones.","","","","","All zeroes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Initialized to something random on each thread, then …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns a high-precision, monotonically increasing count …","","","","","","","","","","","","Approximate nanoseconds since epoch.","","","","","","","","","","","","","","","","","",""],"i":[2,0,0,0,0,2,2,2,2,5,5,5,5,2,5,18,12,2,5,18,12,2,2,2,2,12,5,2,5,5,2,2,5,12,5,12,5,2,5,18,12,2,12,2,2,5,5,18,12,2,18,12,5,0,5,2,12,2,5,2,0,5,12,2,5,2,2,5,5,18,12,2,5,18,12,2,5,5,18,12,2,5,5,12],"f":[0,0,0,0,0,0,[1],[[[3,[2]]],[[3,[2]]]],[2,4],[5,6],[5,[[8,[7]]]],[5,[[9,[7]]]],[5,6],[2,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[[]],[[2,2],11],[12],[5,13],[[],13],0,[[],5],[[],[[14,[2]]]],[[2,2],15],0,0,0,0,[[5,16],17],[[2,16],17],[[]],[[]],[[]],[[]],0,[2],0,[5],[[]],[[]],[[]],[[]],[18],[[]],[5,19],[[],20],[[],5],[[]],[12,3],[[2,2],[[3,[11]]]],[5],[[],2],[[],20],[[5,19]],[12,[[3,[2]]]],[2,14],[5],0,[[]],[[5,21],4],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[5,[3,[[22,[2]]]]],4],[[],23],[[],23],[[],23],[[],23],[5,[[3,[24]]]],0,0],"p":[[3,"Private"],[3,"Tuid"],[4,"Option"],[6,"Result"],[3,"MutableTuidArray"],[8,"Any"],[8,"Array"],[3,"Arc"],[3,"Box"],[15,"u128"],[4,"Ordering"],[3,"TuidArrayIterator"],[4,"DataType"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"TuidArray"],[15,"usize"],[15,"u64"],[8,"IntoIterator"],[8,"Borrow"],[3,"TypeId"],[3,"MutableBitmap"]]},\
"re_ui":{"doc":"Rerun GUI theme and helpers, built around <code>egui</code>.","t":[17,4,3,3,17,2,17,13,13,13,13,13,13,3,13,13,13,13,13,3,13,13,13,13,13,13,3,11,11,11,11,12,12,12,11,11,11,11,0,0,11,11,11,11,0,12,11,11,11,11,11,12,5,11,11,11,11,12,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,11,12,11,11,11,12,11,11,11,0,12,11,11,11,11,0,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,5,11,11,12,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,3,3,5,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,12,11,11,5,5,5,5,5,11,11,11,11,11,5,5,12,11,12,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,5,5],"n":["CUSTOM_WINDOW_DECORATIONS","Command","CommandPalette","DesignTokens","FULLSIZE_CONTENT","Icon","NATIVE_WINDOW_BAR","Open","OpenProfiler","PlaybackStepBack","PlaybackStepForward","PlaybackTogglePlayPause","Quit","ReUi","ResetViewer","Save","SaveSelection","SelectionNext","SelectionPrevious","StaticImageCache","ToggleBlueprintPanel","ToggleCommandPalette","ToggleFullscreen","ToggleMemoryPanel","ToggleSelectionPanel","ToggleTimePanel","TopBarStyle","borrow","borrow","borrow_mut","borrow_mut","bottom_bar_color","bottom_bar_rounding","bottom_bar_stroke","bottom_panel_frame","bottom_panel_margin","clone","clone_into","command","command_palette","deref","deref","deref_mut","deref_mut","design_tokens","design_tokens","downcast","downcast","draw_shadow_line","drop","drop","egui_ctx","egui_dock_style","error_text","from","from","grid_left_hand_label","height","icon_image","icons","images","indent","init","init","into","into","large_button","large_button_impl","large_button_selected","large_collapsing_header","load_and_apply","loop_selection_color","medium_icon_toggle_button","native_window_buttons_ui","native_window_rounding","normal_rounding","paint_watermark","query","rerun_logo","selectable_label_with_icon","selected_alternative","selection_grid","setup_table_body","setup_table_header","shadow_gradient_dark_start","small_icon_button","small_icon_size","small_rounding","static_image_cache","static_image_cache","table_header_height","table_line_height","title_bar_height","to_owned","toggle_switch","toggle_switch","top_bar_color","top_bar_height","top_bar_margin","top_bar_style","top_panel_frame","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","view_padding","visibility_toggle_button","visible","warning_text","window_rounding","Command","CommandIter","Open","OpenProfiler","PlaybackStepBack","PlaybackStepForward","PlaybackTogglePlayPause","Quit","ResetViewer","Save","SaveSelection","SelectionNext","SelectionPrevious","ToggleBlueprintPanel","ToggleCommandPalette","ToggleFullscreen","ToggleMemoryPanel","ToggleSelectionPanel","ToggleTimePanel","back_idx","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","eq","equivalent","fmt","format_shortcut_tooltip_suffix","from","from","get","get_hash","hash","idx","init","init","into","into","into_iter","iter","kb_shortcut","len","listen_for_kb_shortcut","marker","menu_button","menu_button_ui","next","next_back","nth","size_hint","text","text_and_tooltip","to_owned","to_owned","tooltip","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","CommandPalette","FuzzyMatch","alternatives_ui","borrow","borrow","borrow_mut","borrow_mut","command","commands_that_match","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","format_match","from","from","fuzzy_match","init","init","into","into","query","score","selected_alternative","show","toggle","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","visible","window_content_ui","DesignTokens","Typography","apply_design_tokens","borrow","borrow","borrow_mut","borrow_mut","bottom_bar_color","bottom_bar_rounding","bottom_bar_stroke","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","fmt","follow_path","follow_path_or_die","fontFamily","fontSize","fontWeight","from","from","get_alias","get_alias_str","get_aliased_color","get_global_color","global_path_value","init","init","into","into","load_and_apply","parse_color","parse_px","shadow_gradient_dark_start","to_owned","top_bar_color","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","ADD","ARROW_LEFT","ARROW_RIGHT","BOTTOM_PANEL_TOGGLE","CLOSE","CONTAINER","FOLLOW","INVISIBLE","Icon","LEFT_PANEL_TOGGLE","LOOP","MAXIMIZE","MINIMIZE","PAUSE","PLAY","REMOVE","RERUN_MENU","RESET","RIGHT_PANEL_TOGGLE","SPACE_VIEW_3D","SPACE_VIEW_CHART","SPACE_VIEW_HISTOGRAM","SPACE_VIEW_RAW","SPACE_VIEW_SCATTERPLOT","SPACE_VIEW_TENSOR","SPACE_VIEW_TEXT","VISIBLE","borrow","borrow_mut","clone","clone_into","deref","deref_mut","downcast","drop","fmt","from","id","init","into","new","png_bytes","to_owned","try_from","try_into","type_id","upcast","StaticImageCache","borrow","borrow_mut","default","deref","deref_mut","downcast","drop","from","get","images","init","into","load_image_bytes","try_from","try_into","type_id","upcast","toggle_switch","toggle_switch_ui"],"q":["re_ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_ui::command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_ui::command_palette","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_ui::design_tokens","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_ui::icons","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_ui::static_image_cache","","","","","","","","","","","","","","","","","","re_ui::toggle_switch",""],"d":["If true, we hide the native window decoration (the top bar …","All the commands we support.","","The look and feel of the UI.","If true, we fill the entire window, except for the …","","If true, we show the native window decorations/chrome with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","For the streams view (time panel)","","","","","","","","","","","Colors, styles etc loaded from a design_tokens.json","","","Draws a shadow into the given rect with the shadow …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Workaround for putting a label into a grid at the top left …","Height of the top bar","","","","Extra horizontal space in the top left corner to make room …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create <code>ReUi</code> and apply style to the given egui context.","","","Show some close/maximize/minimize buttons for the native …","","","Paint a watermark","","","","","Grid to be used in selection view.","","","","","","","","","","","Height of the title row in the blueprint view and …","","Adapted from <code>egui_demo_lib/src/demo/toggle_switch.rs</code>","iOS-style toggle switch.","","Height of the top-most bar.","","","","","","","","","","","","Margin on all sides of views.","","","","","All the commands we support.","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add e.g. “ (Ctrl+F11)“ as a suffix","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Show this command as a menu-button.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Show the command palette, if it is visible.","","","","","","","","","","","","The look and feel of the UI.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create <code>DesignTokens</code> and apply style to the given egui …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Human readable unique id","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","iOS-style toggle switch.",""],"i":[0,0,0,0,0,0,0,34,34,34,34,34,34,0,34,34,34,34,34,0,34,34,34,34,34,34,0,31,1,31,1,45,45,45,1,1,1,1,0,0,31,1,31,1,0,1,31,1,1,31,1,1,0,1,31,1,1,31,1,0,49,31,31,1,31,1,1,1,1,1,1,1,1,0,1,1,1,42,1,1,42,1,1,1,45,1,1,1,0,1,1,1,1,1,0,0,45,1,1,1,1,31,1,31,1,31,1,31,1,1,1,42,1,1,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,34,34,34,34,35,35,34,34,35,34,35,34,35,35,34,34,35,34,35,34,34,35,35,35,35,34,34,34,35,34,34,35,34,35,34,35,34,35,0,0,42,43,42,43,42,43,0,42,43,42,43,42,43,42,43,42,0,43,42,43,43,42,43,42,42,43,42,42,42,43,42,43,42,43,42,43,42,42,42,0,0,0,45,46,45,46,45,45,45,45,45,45,46,45,46,46,45,46,45,46,45,0,0,46,46,46,45,46,0,0,0,0,0,45,46,45,46,45,0,0,45,45,45,45,46,45,46,45,46,45,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,49,49,49,49,49,49,49,49,49,49,49,49,0,49,49,49,49,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,[1,2],[1,3],[1,1],[[]],0,0,[4],[4],[4],[4],0,0,[[]],[[]],[[1,5,6,7]],[4],[4],0,[8,9],[[1,[11,[10]]],12],[[]],[[]],[[1,5,13],14],0,[[1,15],[[17,[16]]]],0,0,0,[[],4],[[],4],[[]],[[]],[[1,5,15],14],[[1,5,15,[19,[18]],[19,[18]]],14],[[1,5,15,20],14],[[1,5,13,20,21]],[22,1],[[],18],[[1,5,15,20],14],[[23,5]],[[],24],[[],24],[1],0,[1,[[17,[16]]]],[[1,5,15,[11,[25]],20],14],0,[[1,5,13],26],[27],[28],0,[[1,5,15],14],[[],3],[[],24],0,0,[[],24],[[],24],[[],24],[[]],0,[20,29],0,[[],24],[[],30],[[1,[19,[24]],20],31],[1,2],[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],19],[[],19],[[],24],[[1,5,20],14],0,[[1,[11,[10]]],12],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[34,34],[35,35],[[]],[[]],[4],[4],[4],[4],[[]],[[]],[4],[4],[[34,34],20],[[],20],[[34,36],37],[[34,22],10],[[]],[[]],[[35,4],[[19,[34]]]],[[],38],[34],0,[[],4],[[],4],[[]],[[]],[[]],[[],35],[34,[[19,[39]]]],[35,4],[22,[[19,[34]]]],0,[[34,22],40],[[34,5,41],14],[35,19],[35,19],[[35,4],19],[35],[34,13],[34],[[]],[[]],[34,13],[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],19],[[],19],0,0,[[42,5,20,20],[[19,[34]]]],[[]],[[]],[[]],[[]],0,[13,[[41,[43]]]],[[],42],[4],[4],[4],[4],[[]],[[]],[4],[4],[[43,5,44,18],25],[[]],[[]],0,[[],4],[[],4],[[]],[[]],0,0,0,[[42,22],[[19,[34]]]],[42],[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],19],[[],19],0,[[42,5],[[19,[34]]]],0,0,[22,45],[[]],[[]],[[]],[[]],0,0,0,[45,45],[[]],[4],[4],[4],[4],[[],[[32,[46]]]],[[]],[[]],[4],[4],[[45,36],37],[[47,13],[[19,[47]]]],[[47,13],47],0,0,0,[[]],[[]],[[47,13],48],[[47,13],13],[[47,13],18],[[47,13],18],[[47,13],47],[[],4],[[],4],[[]],[[]],[22,45],[13,18],[13,24],0,[[]],0,[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],19],[[],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[15,15],[[]],[4],[4],[[]],[4],[[15,36],37],[[]],0,[[],4],[[]],[13,15],0,[[]],[[],32],[[],32],[[],33],[[],19],0,[[]],[[]],[[],49],[4],[4],[[]],[4],[[]],[[49,13],[[17,[16]]]],0,[[],4],[[]],[[],[[32,[50,10]]]],[[],32],[[],32],[[],33],[[],19],[20,29],[[5,20],14]],"p":[[3,"ReUi"],[3,"Frame"],[3,"Vec2"],[15,"usize"],[3,"Ui"],[3,"Rect"],[4,"Direction"],[3,"Style"],[3,"Style"],[3,"String"],[8,"Into"],[3,"RichText"],[15,"str"],[3,"Response"],[3,"Icon"],[3,"RetainedImage"],[3,"Arc"],[3,"Color32"],[4,"Option"],[15,"bool"],[8,"FnOnce"],[3,"Context"],[3,"Frame"],[15,"f32"],[4,"WidgetText"],[3,"Grid"],[3,"TableBody"],[3,"TableRow"],[8,"Widget"],[3,"Margin"],[3,"TopBarStyle"],[4,"Result"],[3,"TypeId"],[4,"Command"],[3,"CommandIter"],[3,"Formatter"],[6,"Result"],[15,"u64"],[3,"KeyboardShortcut"],[3,"Button"],[3,"Vec"],[3,"CommandPalette"],[3,"FuzzyMatch"],[3,"FontId"],[3,"DesignTokens"],[3,"Typography"],[4,"Value"],[8,"DeserializeOwned"],[3,"StaticImageCache"],[3,"ColorImage"]]},\
"re_viewer":{"doc":"Rerun Viewer GUI.","tn":["App","Profiler","RemoteViewerApp","StartupOptions","analytics","app","app","cmd_palette","component_ui_registry","ctrl_c","customize_eframe","env_vars","frame_time_history","hardware_tier","latest_memory_purge","latest_queue_interest","log_dbs","math","memory_limit","memory_panel","memory_panel_open","misc","native","pending_commands","pending_promises","re_ui","re_ui","remote_viewer_app","run_native_app","run_native_viewer_with_messages","rx","server","startup_options","startup_options","state","toasts","ui","url","wgpu_options","App","AppState","EventLog","FILE_SAVER_NOTIF_DURATION","FILE_SAVER_PROMISE","PanelSelection","StartupOptions","StepBack","StepForward","TimeControlCommand","TogglePlayPause","Viewport","WATERMARK","__clone_box","__clone_box","__clone_box","analytics","app_options","az","az","az","az","az","blueprint_mut","blueprints","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","cast_from","cast_from","cast_from","cast_from","cast_from","check_keyboard_shortcuts","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","cleanup","clear_color","clone","clone","clone","clone_into","clone_into","clone_into","cmd_palette","component_ui_registry","ctrl_c","debug_menu","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","event_log_view","file_saver_progress_ui","fmt","frame_time_history","frame_time_label_ui","from","from","from","from","from","from_receiver","get_hash","handle_dropping_files","hash","init","init","init","init","init","input_latency_label_ui","into","into","into","into","into","latest_memory_purge","latest_queue_interest","load_file_contents","load_file_path","load_rrd_to_log_db","log_db","log_dbs","loop_selection","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","main_view_selector_ui","memory_limit","memory_panel","memory_panel_open","memory_panel_ui","memory_use_label_ui","new","open","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","paint_background_fill","paint_native_window_frame","panel_selection","pending_commands","pending_promises","poll_promise","preview_files_being_dropped","profiler","promise_exists","purge_memory_if_needed","re_ui","receive_messages","recording_configs","recordings_menu","rerun_menu_button_ui","reset","run_command","run_pending_commands","run_time_control_command","rx","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","save","save","save_buttons_ui","save_database_to_file","selected_app_id","selected_rec_id","selection_panel","serialize","serialize","set_profiler","show","show_log_db","spawn_threaded_promise","startup_options","state","time_panel","to_owned","to_owned","to_owned","toasts","top_bar_ui","top_panel","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","update","vzip","vzip","vzip","vzip","vzip","wait_screen_ui","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","RERUN_TRACK_ALLOCATIONS","BoundingBox","EVERYTHING","NAN","NOTHING","Rect","ZERO","__clone_box","__clone_box","any_nan","area","aspect_ratio","az","az","borrow","borrow","borrow_mut","borrow_mut","bottom","bottom_mut","bottom_up_range","bounding_sphere_radius","cast_from","cast_from","center","center","center_bottom","center_top","centered_bounding_sphere_radius","checked_as","checked_as","checked_cast_from","checked_cast_from","clamp","clone","clone","clone_into","clone_into","contains","contains","contains_rect","corners","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","distance_sq_to_pos","distance_to_pos","downcast","downcast","drop","drop","ease_out","edges","eq","eq","equivalent","equivalent","everything","everything_above","everything_below","everything_left_of","everything_right_of","expand","expand2","expanded","extend","extend_with","extend_with_x","extend_with_y","fmt","fmt","from","from","from","from_center_size","from_center_size","from_min_max","from_min_max","from_min_size","from_min_size","from_points","from_points","from_two_pos","from_x_y_ranges","half_size","height","init","init","intersect","intersection","intersects","into","into","is_finite","is_finite","is_nan","is_negative","is_nothing","is_point","is_positive","is_something","is_valid_bit_pattern","left","left_bottom","left_center","left_mut","left_top","lerp","line_segment_distance_sq_to_point_2d","line_segment_distance_sq_to_point_3d","line_segment_distance_to_point_3d","lossless_try_into","lossless_try_into","lossy_into","lossy_into","max","max","max","min","min","min","nothing","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","ray_bbox_intersect","ray_closest_t_line_segment","remap","remap_clamp","right","right_bottom","right_center","right_mut","right_top","rotate_bb","rotated_around_origin","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","set_bottom","set_center","set_height","set_left","set_right","set_top","set_width","shrink","shrink2","signed_distance_to_pos","size","size","square_proportions","to_owned","to_owned","top","top_mut","transform_affine3","transform_conformal3","transform_iso","translate","translated","try_from","try_from","try_into","try_into","type_id","type_id","union","union","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","volume","vzip","vzip","width","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","x_range","y_range","Caches","HoverHighlight","HoveredSpace","InteractionHighlight","Item","ItemCollection","OptionalSpaceViewEntityHighlight","SelectionHighlight","SelectionState","SpaceViewHighlights","TransformCache","UnreachableTransform","app_options","caches","clipboard","color_map","help_hover_button","item","mesh_loader","profiler","selection_state","space_info","time_axis","time_control","time_control_ui","transform_cache","viewer_context","AppOptions","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","deserialize","downcast","drop","eq","fmt","from","init","into","lossless_try_into","lossy_into","low_latency","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","show_camera_axes_in_3d","show_metrics","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","warn_latency","wrapping_as","wrapping_cast_from","AsDynamicImage","Caches","TensorImageView","TensorStats","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","image","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","mesh","mesh_cache","new","new_frame","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","purge_memory","range","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","tensor_image_cache","tensor_stats","tensor_stats","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","MeshCache","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","AsDynamicImage","CachedImage","ImageCache","ImageCacheKey","TensorImageView","__clone_box","annotation_msg_id","annotations","as_dynamic_image","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","cmp","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","dynamic_image_to_egui_color_image","dynamic_img","dynamic_img","eq","equivalent","equivalent","fmt","from","from","from","from","from_dynamic_image","from_tensor","generation","get_hash","get_view","get_view_with_annotations","hash","images","init","init","init","init","into","into","into","into","last_use_generation","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","memory_used","memory_used","new_frame","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","purge_memory","retained_img","retained_img","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","tensor","tensor_id","texture_handle","texture_handle","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Clipboard","arboard","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","init_arboard","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","set_image","set_text","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","with","wrapping_as","wrapping_cast_from","VIRIDIS_SRGB_BYTES","turbo_color_map","viridis_color_map","ComponentPath","DataBlueprintGroup","InstancePath","Item","ItemCollection","MsgId","SpaceView","__clone_box","__clone_box","are_all_same_kind","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","contains","data_ui","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","first","fmt","fmt","from","from","get_hash","hash","init","init","into","into","into_iter","is_empty","is_valid","iter","kind","len","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","purge_invalid","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","selection","serialize","serialize","to_owned","to_owned","to_vec","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","LoadedMesh","az","bbox","bbox","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","load_encoded_mesh","load_raw","load_raw_mesh","lossless_try_into","lossy_into","mesh_instances","name","name","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","PORT","Profiler","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","downcast","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","server","start","start_puffin_viewer","start_server","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","HoverHighlight","Hovered","HoveredSpace","InteractionHighlight","None","None","None","OptionalSpaceViewEntityHighlight","Selection","SelectionHighlight","SelectionState","SiblingSelection","SpaceViewEntityHighlight","SpaceViewHighlights","ThreeD","TwoD","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","any_selection_highlight","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clear_current","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","current","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","entity_highlight","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from","highlight_for_ui_element","highlighted_entity_paths","highlights_for_space_view","history","hover","hovered","hovered_previous_frame","hovered_space","hovered_space_previous_frame","hovered_space_this_frame","hovered_this_frame","index_highlight","init","init","init","init","init","init","init","init","instances","into","into","into","into","into","into","into","into","is_some","is_some","is_some","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","max","on_frame_start","overall","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","select_next","select_previous","selection","selection","selection_ui","serialize","set_hovered","set_hovered_space","set_multi_selection","set_single_selection","to_owned","to_owned","to_owned","to_owned","to_owned","toggle_selection","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","pos","space_2d","space_3d","target_spaces","SpaceInfo","SpaceInfoCollection","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","child_spaces","default","deref","deref","deref_mut","deref_mut","descendants_without_transform","downcast","downcast","drop","drop","from","from","get_first_parent_with_info","init","init","into","into","is_reachable_by_transform","iter","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","parent","path","query_view_coordinates","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","spaces","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","visit_descendants_with_reachable_transform","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","TimelineAxis","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","deref","deref_mut","downcast","drop","fmt","from","init","into","lossless_try_into","lossy_into","min","new","overflowing_as","overflowing_cast_from","ranges","saturating_as","saturating_cast_from","sum_time_lengths","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","All","Following","Looping","Off","Paused","PlayState","Playing","Selection","TimeControl","TimeState","TimeView","__clone_box","__clone_box","__clone_box","__clone_box","active_loop_selection","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","current_query","default","default_time_line","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","follow_button_ui","following","fps","fps","fps_ui","from","from","from","from","from","full_range","get_hash","get_hash","hash","hash","init","init","init","init","init","into","into","into","into","into","is_time_selected","loop_button_ui","loop_selection","loop_selection","looping","looping","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","max","min","min","move_time","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pause","pause_button_ui","play_button_ui","play_pause_ui","play_state","playback_speed_ui","playing","range","reset_time_view","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","select_a_valid_timeline","serialize","serialize","serialize","serialize","serialize","set_fps","set_loop_selection","set_looping","set_play_state","set_speed","set_time","set_time_view","set_timeline","set_timeline_and_time","speed","speed","states","step_back_time","step_back_time_looped","step_fwd_time","step_fwd_time_looped","step_time_back","step_time_button_ui","step_time_fwd","time","time","time_control_ui","time_i64","time_int","time_spanned","time_type","time_view","timeline","timeline","timeline_selector_ui","to_owned","to_owned","to_owned","to_owned","toggle_play_pause","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","view","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","toggle_playback_text","InversePinholeCameraWithoutResolution","NestedPinholeCameras","TransformCache","UnknownSpaceInfo","UnknownTransform","UnreachableTransform","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","determine_transforms","downcast","downcast","drop","drop","first_unreachable_parent","fmt","from","from","gather_descendants_transforms","init","init","into","into","inverse_transform_at","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","reference_from_entity","reference_from_entity_per_entity","reference_path","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_string","transform_at","try_from","try_from","try_into","try_into","type_id","type_id","unreachable_descendants","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","RecordingConfig","ViewerContext","app_options","az","az","borrow","borrow","borrow_mut","borrow_mut","cache","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","component_path_button_to","component_ui_registry","current_query","cursor_interact_with_selectable","data_blueprint_button_to","data_blueprint_group_button_to","default","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","entity_path_button","entity_path_button_to","from","from","hovered","init","init","instance_path_button","instance_path_button_to","into","into","log_db","lossless_try_into","lossless_try_into","lossy_into","lossy_into","msg_id_button","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","re_ui","rec_cfg","render_ctx","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","select_hovered_on_click","selection","selection_state","selection_state","selection_state_mut","serialize","set_hovered","set_multi_selection","set_single_selection","space_view_button","space_view_button_to","time_button","time_ctrl","timeline_button","timeline_button_to","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","AppCreator","run_native_app","run_native_viewer_with_messages","RemoteViewerApp","app","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clear_color","connect","deref","deref_mut","downcast","drop","from","init","into","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","re_ui","saturating_as","saturating_cast_from","save","set_profiler","startup_options","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","update","url","vzip","wrapping_as","wrapping_cast_from","Annotations","DataBlueprintGroupHandle","DefaultColor","HistoricalSelection","MISSING_ANNOTATIONS","MISSING_ANNOTATIONS","MISSING_ANNOTATIONS","MISSING_ANNOTATIONS","SelectionHistory","ViewCategory","Viewport","annotations","auto_layout","blueprint","data_blueprint","data_ui","event_log_view","memory_panel","scene","selection_history","selection_history_ui","selection_panel","space_view","space_view_entity_picker","space_view_heuristics","time_panel","view_bar_chart","view_category","view_spatial","view_tensor","view_text","view_time_series","viewport","AnnotationMap","Annotations","DefaultColor","EntityPath","MISSING_ANNOTATIONS","MISSING_MSG_ID","OpaqueWhite","ResolvedAnnotationInfo","ResolvedClassDescription","TransparentBlack","__clone_box","__clone_box","__clone_box","__clone_box","__private_field","annotation_info","annotation_info_with_keypoint","auto_color","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","class_description","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","color","context","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","find","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","label","load","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","msg_id","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","LayoutSplit","Leaf","LeftRight","LeftRight","SpaceMakeInfo","SplitDirection","TopBottom","TopBottom","__clone_box","aspect_ratio","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","category","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","desired_aspect_ratio","downcast","downcast","downcast","drop","drop","drop","find_group_split_point","fmt","from","from","from","group_by_category","group_by_path_prefix","id","init","init","init","into","into","into","layout_by_category","layout_by_path_prefix","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","path","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","split_groups","split_spaces_at","suggest_split_direction","to_owned","tree_from_space_views","tree_from_split","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","bottom","left","right","t","t","top","Blueprint","az","blueprint_panel","blueprint_panel_and_viewport","blueprint_panel_expanded","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","deserialize","downcast","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","reset_button_ui","saturating_as","saturating_cast_from","selection_panel_expanded","serialize","time_panel_expanded","title_bar_ui","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","viewport","vzip","wrapping_as","wrapping_cast_from","DataBlueprintGroup","DataBlueprintGroupHandle","DataBlueprintTree","DataBlueprints","__clone_box","__clone_box","__clone_box","__clone_box","add_entity_to_group","add_group_to_hierarchy_recursively","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","children","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","contains_entity","data","data_blueprints","data_blueprints_individual","data_blueprints_projected","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","display_name","downcast","downcast","downcast","downcast","drop","drop","drop","drop","entities","entity_paths","entity_paths","eq","equivalent","equivalent","fmt","from","from","from","from","from","get_hash","group","group_mut","groups","hash","individual","init","init","init","init","insert_entities_according_to_hierarchy","into","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","on_frame_start","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent","partial_cmp","path_to_group","path_to_group_name","projected","properties_individual","properties_projected","remove_entity","remove_group","remove_group_if_empty","root_group","root_group_handle","root_handle","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","visit_group_entities_recursively","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","All","DataUi","MaxHeight","Reduced","Small","UiVerbosity","__clone_box","annotation_context","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","component","component_path","component_ui_registry","data","data_ui","deref","deref_mut","downcast","drop","entity_path","fmt","format_component_bundle","from","image","init","instance_path","into","log_msg","lossless_try_into","lossy_into","msg_id","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","TABLE_SCROLL_AREA_HEIGHT","annotation_info_table_ui","EntityComponentWithInstances","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","component_data","component_name","data_ui","deref","deref_mut","downcast","drop","entity_path","from","init","into","lossless_try_into","lossy_into","num_instances","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","ComponentUiCallback","ComponentUiRegistry","add","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","components","default","deref","deref_mut","downcast","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","ui","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","DEFAULT_NUMBER_WIDTH","ZOOMED_IMAGE_TEXEL_RADIUS","format_tensor_shape_single_line","get_pixel","histogram_ui","image_options","show_zoomed_image_region","show_zoomed_image_region_area_outline","show_zoomed_image_region_tooltip","tensor_dtype_and_shape_ui","tensor_dtype_and_shape_ui_grid_contents","write_binary","HIDDEN_COMPONENTS_FOR_ALL_VERBOSITY","HIDDEN_COMPONENTS_FOR_LOW_VERBOSITY","EventLogView","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","deserialize","downcast","drop","from","init","into","lossless_try_into","lossy_into","message_table","overflowing_as","overflowing_cast_from","row_height","saturating_as","saturating_cast_from","serialize","table_row","try_from","try_into","type_id","ui","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","MemoryPanel","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","cpu_stats","default","deref","deref_mut","downcast","drop","from","gpu_stats","history","init","into","left_side","lossless_try_into","lossy_into","memory_purge_times","note_memory_purge","overflowing_as","overflowing_cast_from","plot","saturating_as","saturating_cast_from","store_stats","summarize_callstack","tracking_stats","try_from","try_into","type_id","ui","unwrapped_as","unwrapped_cast_from","upcast","update","vzip","wrapping_as","wrapping_cast_from","SceneQuery","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","entity_paths","entity_props_map","from","init","into","iter_entities","latest_at","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","timeline","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","HistoricalSelection","MAX_SELECTION_HISTORY_LENGTH","SelectionHistory","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","control_bar_ui","current","current","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from","history_item_ui","index","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","next","next_button_ui","on_frame_start","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","prev_button_ui","previous","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","select_next","select_previous","selection","selection_ui","stack","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","update_selection","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","item_collection_to_string","item_kind_ui","item_to_string","SelectionPanel","az","blueprint_ui","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","contents","default","deref","deref_mut","deserialize","downcast","drop","entity_props_ui","from","has_data_section","init","into","list_existing_data_blueprints","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","show_panel","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","what_is_selected_ui","wrapping_as","wrapping_cast_from","SpaceView","SpaceViewId","ViewState","__clone_box","__clone_box","__clone_box","add_entity_subtree","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","category","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","data_blueprint","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","display_name","downcast","downcast","downcast","drop","drop","drop","entities_determined_by_user","eq","equivalent","equivalent","fmt","from","from","from","get_hash","hash","id","init","init","init","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","new","on_frame_start","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","random","remove_entity_subtree","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","scene_ui","selected_tensor","selection_ui","serialize","serialize","serialize","space_path","state_bar_chart","state_spatial","state_tensors","state_text","state_time_series","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ui_bar_chart","ui_spatial","ui_tensor","ui_text","ui_time_series","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","view_state","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","CanAddToSpaceView","Compatible","EntityAddInfo","No","SpaceViewEntityPicker","__clone_box","add_entities_line_ui","add_entities_tree_ui","add_entities_ui","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_add","can_add_self_or_descendant","cast_from","cast_from","cast_from","categories","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","create_entity_add_info","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","eq","equivalent","equivalent","from","from","from","init","init","init","into","into","into","is_compatible","is_compatible_and_missing","join","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","space_view_id","title_bar","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ui","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","already_added","reason","all_possible_space_views","contains_any_image","default_created_space_views","default_created_space_views_from_candidates","default_queried_entities","default_queried_entities_by_category","has_any_component_except","is_default_added_to_space_view","is_interesting_space_view_at_root","is_interesting_space_view_not_at_root","BallScatterer","GAP_EXPANSION_FRACTION","MAX_GAP","MEMORY_SIZE","Segment","TimePanel","TimeRangesUi","add","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clamp_time","closest_dist_sq","collapsed_ui","current_time_ui","cursor","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","downcast","drop","drop","drop","drop","expanded_ui","format_duration","from","from","from","from","gap_width","help_button","init","init","init","init","initial_time_selection","initialize_time_ranges_ui","interact_with_streams_rect","into","into","into","into","loop_selection_ui","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","new","next_col_right","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","paint_range_text","paint_ticks","paint_time_cursor","paint_time_range_ticks","paint_time_ranges_and_ticks","paint_time_ranges_gaps","pan","points_per_time","points_per_time","prev_col_width","recent","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","segments","serialize","show_children","show_data_over_time","show_msg_ids_tooltip","show_panel","show_tree","snap_time_control","snap_time_to_segments","tight_time","time","time_from_x","time_marker_ui","time_ranges_ui","time_view","top_row_ui","tree_ui","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","view_everything","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x_from_time","x_range","zoom_at","scene","ui","SceneBarChart","az","borrow","borrow_mut","cast_from","charts","checked_as","checked_cast_from","default","deref","deref_mut","downcast","drop","from","init","into","load","load_tensors","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","BarChartState","HELP_TEXT","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","default","deref","deref_mut","deserialize","downcast","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","view_bar_chart","vzip","wrapping_as","wrapping_cast_from","BarChart","Spatial","Tensor","Text","TimeSeries","ViewCategory","ViewCategorySet","__clone_box","az","bitand","bitor","bitxor","borrow","borrow_mut","cast_from","categorize_entity_path","checked_as","checked_cast_from","clone","clone_into","cmp","default","deref","deref_mut","deserialize","downcast","drop","enum_from_u32","enum_into_u32","eq","eq","equivalent","equivalent","fmt","fmt","from","icon","init","into","lossless_try_into","lossy_into","not","overflowing_as","overflowing_cast_from","partial_cmp","saturating_as","saturating_cast_from","serialize","sub","to_owned","to_string","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Image","Label2D","Label2DTarget","Label3D","MeshSource","MeshSourceData","SceneSpatial","SpaceCamera3D","SpaceSpecs","SpatialNavigationMode","ViewSpatialState","eye","scene","space_camera_3d","ui","ui_2d","ui_3d","ui_renderer_bridge","view_2d","view_3d","DEFAULT_FOV_Y","Eye","MAX_PITCH","OrbitEye","__clone_box","__clone_box","approx_pixel_world_size_at","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","copy_from_eye","deref","deref","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","drop","drop","eq","far","fmt","fmt","forward_in_world","fov_y","fov_y","from","from","from_camera","fwd","init","init","interact","into","into","is_perspective","keyboard_navigation","lerp","lerp","lossless_try_into","lossless_try_into","lossy_into","lossy_into","near","orbit_center","orbit_radius","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","picking_ray","pitch","pos_in_world","position","project_onto","roll","rotate","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","serialize","set_fwd","set_up","to_eye","to_owned","to_owned","translate","try_from","try_from","try_into","try_into","type_id","type_id","ui_from_world","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","up","upcast","upcast","velocity","vzip","vzip","world_from_view","world_from_view_rot","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","AdditionalPickingInfo","CAMERA_COLOR","HOVER_COLOR","Image","Keypoints","Label2D","Label2DTarget","Label3D","Mesh3D","MeshSource","MeshSourceData","PickingRayHit","PickingResult","Point","Rect","SELECTION_COLOR","SIBLING_SELECTION_COLOR","SceneSpatial","SceneSpatialPrimitives","SceneSpatialUiData","StaticGlb","additive_tint","annotation_map","annotations","apply_hover_and_selection_effect","apply_hover_and_selection_effect_color","apply_hover_and_selection_effect_size","az","az","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","color","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","images","init","init","init","init","init","init","init","init","instance_path_hash","instance_path_hash","instance_path_hash_if_interactive","into","into","into","into","into","into","into","into","labels_2d","labels_3d","labled_instance","load","load_keypoint_connections","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","mesh","mesh_id","meter","num_logged_2d_objects","num_logged_3d_objects","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pickable_ui_rects","picking","picking","preferred_navigation_mode","primitives","primitives","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scene_part","size_boost","space_cameras","target","tensor","text","text","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","world_from_mesh","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","AdditionalPickingInfo","GuiOverlay","None","PickingContext","PickingRayHit","PickingResult","PickingState","RAY_T_EPSILON","TexturedRect","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","check_hit","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","closest_opaque_pick","closest_opaque_side_ui_dist_sq","depth_offset","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","from","from","from","from","from","from_instance_and_t","info","init","init","init","init","init","instance_path_hash","into","into","into","into","into","iter_hits","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","max_side_ui_dist_sq","opaque_hit","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","picking","picking_lines","picking_meshes","picking_points","picking_ray","picking_textured_rects","picking_ui_rects","pointer_in_ui","ray_in_world","ray_t","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sort_and_remove_hidden_transparent","space_position","transparent_hits","transparent_hits","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ui_from_world","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","AXIS_COLOR_X","AXIS_COLOR_Y","AXIS_COLOR_Z","SceneSpatialPrimitives","add_axis_lines","az","borrow","borrow_mut","bounding_box","bounding_box","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","downcast","drop","from","init","into","line_strips","lossless_try_into","lossy_into","mesh_instances","meshes","num_primitives","overflowing_as","overflowing_cast_from","points","recalculate_bounding_box","saturating_as","saturating_cast_from","textured_rectangles","textured_rectangles_ids","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","ScenePart","arrows3d","boxes2d","boxes3d","cameras","images","instance_path_hash_for_picking","lines2d","lines3d","load","meshes","points2d","points3d","Arrows3DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Boxes2DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","visit_instance","vzip","wrapping_as","wrapping_cast_from","Boxes3DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","CamerasPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","determine_view_coordinates","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","visit_instance","vzip","wrapping_as","wrapping_cast_from","ImagesPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","handle_image_layering","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","push_tensor_texture","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Lines2DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Lines3DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","MeshPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Points2DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","process_entity_view","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","Points3DPart","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","downcast","drop","from","init","into","load","lossless_try_into","lossy_into","max_labels","overflowing_as","overflowing_cast_from","process_annotations","process_colors","process_entity_view","process_labels","process_radii","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","SpaceCamera3D","__clone_box","az","borrow","borrow_mut","cam_from_world","cast_from","checked_as","checked_cast_from","clone","clone_into","deref","deref_mut","downcast","drop","entity_path","from","from_rub_quat","image_from_world","init","instance_path_hash","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","picture_plane_distance","pinhole","position","project_onto_2d","saturating_as","saturating_cast_from","to_owned","try_from","try_into","type_id","unproject_as_ray","unwrapped_as","unwrapped_cast_from","upcast","view_coordinates","vzip","world_from_cam","world_from_camera","world_from_image","world_from_rub_view","wrapping_as","wrapping_cast_from","Auto","AutoSizeUnit","SpatialNavigationMode","ThreeD","TwoD","UiPoints","ViewSpatialState","World","__clone_box","__clone_box","__clone_box","auto_size_config","auto_size_config","auto_size_world_heuristic","axis_name","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default_line_radius","default_point_radius","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","downcast","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","from","from","from","help_text","init","init","init","into","into","into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","nav_mode","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","scene_bbox","scene_bbox_accum","scene_num_primitives","selection_ui","serialize","serialize","size_ui","state_2d","state_3d","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","view_spatial","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Auto","HELP_TEXT_2D","Scaled","View2DState","ZoomState2D","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","capture_scroll","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","create_labels","default","default","deref","deref","deref_mut","deref_mut","deserialize","desired_size_and_offset","downcast","downcast","drop","drop","from","from","init","init","into","into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","project_onto_other_spaces","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","setup_target_config","show_projections_from_3d_space","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","update","view_2d","view_2d_scrollable","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","zoom","accepting_scroll","center","scale","EyeInterpolation","HELP_TEXT_3D","SpaceSpecs","View3DState","__clone_box","__clone_box","__clone_box","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","camera_before_tracked_camera","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default_eye","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","downcast","downcast","downcast","drop","drop","drop","elapsed_time","eye_interpolation","find_camera","from","from","from","from_view_coordinates","hovered_point","init","init","init","interpolate_to_eye","interpolate_to_orbit_eye","into","into","into","last_eye_interact_time","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","orbit_eye","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","paint_view","project_onto_other_spaces","reset_camera","right","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","serialize","show_axes","show_projections_from_2d_space","space_camera","space_specs","spin","start","target_eye","target_orbit","target_time","target_time","to_owned","to_owned","to_owned","tracked_camera","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","up","upcast","upcast","upcast","update_eye","view_3d","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ClearColor","GenericSkybox","ScreenBackground","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","create_and_fill_view_builder","create_scene_paint_callback","deref","deref_mut","downcast","drop","from","get_viewport","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","renderer_paint_callback","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","dimension_mapping_ui","scene","tensor_dimension_mapper","ui","SceneTensor","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","default","deref","deref_mut","downcast","drop","from","init","into","load","load_tensor_entity","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","tensors","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","DragDropAddress","Height","NewSelector","None","Selector","Width","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","deref","deref_mut","dimension_mapping_ui","downcast","drag_source_ui","drag_source_ui_id","drop","drop_target_ui","eq","equivalent","equivalent","from","init","into","is_some","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","read_from_address","saturating_as","saturating_cast_from","tensor_dimension_ui","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","vzip","wrapping_as","wrapping_cast_from","write_to_address","ColorMap","ColorMapping","Fill","Greyscale","Original","TextureScaling","TextureSettings","Turbo","ViewTensorState","Virdis","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","color_from_normalized","color_mapping","create","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","dimension_mapping","dimension_name","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","gamma","image_ui","init","init","init","init","init","into","into","into","into","into","into_image","keep_aspect_ratio","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","map","options","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","paint_axis_names","paint_image","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scaling","selected_tensor_slice","selector_values","selectors_ui","serialize","serialize","serialize","serialize","serialize","slice_ui","tensor","tensor_ui","texture_settings","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ui","ui","ui","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","view_tensor","vzip","vzip","vzip","vzip","vzip","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","scene","ui","SceneText","TextEntry","__clone_box","az","az","body","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone_into","color","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","entity_path","fmt","from","from","init","init","into","into","level","load","lossless_try_into","lossless_try_into","lossy_into","lossy_into","msg_id","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","text_entries","time","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","ViewTextFilters","ViewTextState","__clone_box","__clone_box","az","az","borrow","borrow","borrow_mut","borrow_mut","calc_row_height","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","col_entity_path","col_log_level","col_timelines","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","downcast","downcast","drop","drop","filters","fmt","from","from","get_time_point","init","init","into","into","is_entity_path_visible","is_log_level_visible","latest_time","level_to_rich_text","lossless_try_into","lossless_try_into","lossy_into","lossy_into","monospace","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","row_entity_paths","row_log_levels","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","selection_ui","serialize","serialize","table_ui","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","update","view_text","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","scene","ui","Continuous","PlotPoint","PlotPointAttrs","PlotSeries","PlotSeriesKind","Scatter","SceneTimeSeries","__clone_box","__clone_box","__clone_box","__clone_box","add_line_segments","annotation_map","attrs","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","color","color","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","kind","label","label","lines","load","load_scalars","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","points","radius","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scattered","time","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","upcast","value","vzip","vzip","vzip","vzip","vzip","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","HELP_TEXT","ViewTimeSeriesState","__clone_box","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clone","clone_into","default","deref","deref_mut","deserialize","downcast","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","serialize","to_owned","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","upcast","view_time_series","vzip","wrapping_as","wrapping_cast_from","MAX_ELEM_FOR_DEFAULT_OPEN","TabViewer","Viewport","VisibilitySet","add_new_spaceview_button_ui","add_space_view","az","az","blueprint_row_with_buttons","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","ctx","data_blueprint_tree_ui","default","deref","deref","deref_mut","deref_mut","deserialize","downcast","downcast","drop","drop","focus_tab","from","from","has_been_user_edited","help_text_ui","init","init","into","into","is_tree_valid","lossless_try_into","lossless_try_into","lossy_into","lossy_into","mark_user_interaction","maximized","new","on_frame_start","on_tab_button","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","remove","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","serialize","should_auto_add_space_view","show_add_remove_entities_window","space_view","space_view_entity_window","space_view_entry_ui","space_view_mut","space_view_options_ui","space_view_ui","space_views","space_views","space_views_containing_entity_path","title","tree_ui","trees","try_from","try_from","try_into","try_into","type_id","type_id","ui","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","viewport_ui","visibility_button_ui","visible","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from"],"q":["re_viewer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::appre_viewer::env_vars","re_viewer::math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::app_options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::caches","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::caches::mesh_cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::caches::tensor_image_cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::clipboard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::color_map","","","re_viewer::misc::item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::mesh_loader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::profiler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::selection_statere_viewer::misc::selection_state::HoveredSpace","","","","re_viewer::misc::space_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::time_axis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::time_control","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::time_control_ui","re_viewer::misc::transform_cache","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::misc::viewer_context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::native","","","re_viewer::remote_viewer_app","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::annotations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::auto_layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::auto_layout::SplitDirection","","","","","","re_viewer::ui::blueprint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::data_blueprintre_viewer::ui::data_ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::data_ui::annotation_context","","re_viewer::ui::data_ui::component","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::data_ui::component_ui_registry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::data_ui::data","re_viewer::ui::data_ui::image","","","","","","","","","","","re_viewer::ui::data_ui::instance_path","","re_viewer::ui::event_log_view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::memory_panel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::selection_history","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::selection_history_ui","","","re_viewer::ui::selection_panel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::space_view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::space_view_entity_picker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::space_view_entity_picker::CanAddToSpaceView","","re_viewer::ui::space_view_heuristics","","","","","","","","","","re_viewer::ui::time_panelre_viewer::ui::view_bar_chart","","re_viewer::ui::view_bar_chart::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_bar_chart::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_category","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::eye","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scenere_viewer::ui::view_spatial::scene::pickingre_viewer::ui::view_spatial::scene::primitives","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::arrows3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::boxes2d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::boxes3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::cameras","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::images","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::lines2d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::lines3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::meshes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::points2d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::scene::scene_part::points3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::space_camera_3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::ui_2d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::ui_2d::ZoomState2D","","","re_viewer::ui::view_spatial::ui_3d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_spatial::ui_renderer_bridge","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_tensor","","","","re_viewer::ui::view_tensor::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_tensor::tensor_dimension_mapper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_tensor::uire_viewer::ui::view_text","","re_viewer::ui::view_text::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_text::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::view_time_series","","re_viewer::ui::view_time_series::scenere_viewer::ui::view_time_series::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_viewer::ui::viewport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The Rerun viewer as an <code>eframe</code> application.","Wraps a connection to a <code>puffin</code> viewer.","Connects to a server over <code>WebSockets</code>.","Settings set once at startup (e.g. via command-line …","","","","","","Set to <code>true</code> on Ctrl-C.","","","Measures how long a frame takes to paint","","","","Where the logs are stored.","","","","","","","Commands to run at the end of the frame.","Pending background tasks, using <code>poll_promise</code>.","","","","","","","","","","What is serialized","Toast notifications, using <code>egui-notify</code>.","","The url of the remote server.","","The Rerun viewer as an <code>eframe</code> application.","","","","","","Settings set once at startup (e.g. via command-line …","","","","","","","","","","","Global options for the whole viewer.","","","","","","","","","","","","","","","","","","Things that need caching.","","","","","","","","","","","","","","","","","","","","","","","","","","","Set to <code>true</code> on Ctrl-C.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Measures how long a frame takes to paint","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a viewer that receives new log messages over time","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Where the logs are stored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Which view panel is currently being shown","Commands to run at the end of the frame.","Pending background tasks, using <code>poll_promise</code>.","Polls the promise with the given name.","","","Returns whether a promise with the given name is currently …","","","","Configuration for the current recording (found in <code>LogDb</code>).","","","Reset the viewer to how it looked the first time you ran …","","","","","","","","","","","","","","","","","","Returns a closure that, when run, will save the contents …","","","","","","","","","Creates a promise with the specified name that will run <code>f</code> …","","What is serialized","","","","","Toast notifications, using <code>egui-notify</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable allocation tracking (very slow - use it to find …","A 3-dimensional axis-aligned bounding box","Infinite rectangle that contains every point.","An invalid <code>Rect</code> filled with <code>f32::NAN</code>;","The inverse of <code>Self::EVERYTHING</code>: stretches from positive …","A rectangular region of space.","A <code>BoundingBox</code> that only contains <code>Vec3::ZERO</code>.","","","True if any member is NaN.","","Width / height","","","","","","","<code>max.y</code>","<code>max.y</code>","","The minimum radius of a sphere, centered at the origin, …","","","Returns the center point of the bounding box.","","","","The minimum radius of a sphere, centered at the bounding …","","","","","Return the given points clamped to be inside the rectangle …","","","","","Returns <code>true</code> if the point is within (or on the edge of) …","","","The eight corners of this bounding box.","","","","","","","","The distance from the rect to the position, squared.","The distance from the rect to the position.","","","","","","The twelve edges of this bounding box.","","","","","A <code>BoundingBox</code> that contains every point.","A <code>Rect</code> that contains every point above a certain y …","A <code>Rect</code> that contains every point below a certain y …","A <code>Rect</code> that contains every point to the left of the given …","A <code>Rect</code> that contains every point to the right of the given …","Expand by this much in each direction, keeping the center","Expand by this much in each direction, keeping the center","Expand with this much padding on each side.","Enlarge the box to include this point.","","Expand to include the given x coordinate","Expand to include the given y coordinate","","","Returns the argument unchanged.","","Returns the argument unchanged.","Create a bounding box from a center position and a size.","","Create a bounding box from a minimum and maximum position.","","","left-top corner plus a size (stretching right-down).","Create a bounding box from an iterator of points that the …","Bounding-box around the points.","Returns the bounding rectangle of the two points.","","Returns half the size (similar to a radius).","","","","The intersection of two <code>Rect</code>, i.e. the area covered by …","Returns the smallest volume that is covered by both <code>self</code> …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if, and only if, all elements are finite.","True if all members are also finite.","Returns <code>true</code> if any elements are <code>NaN</code>.","<code>width &lt; 0 || height &lt; 0</code>","True if and only if there is no point for which …","True if this box contains exactly one point.","<code>width &gt; 0 &amp;&amp; height &gt; 0</code>","True if and only if there is at least one point for which …","","<code>min.x</code>","","","<code>min.x</code>","","Linearly interpolate so that <code>[0, 0]</code> is <code>Self::min</code> and <code>[1, 1]</code>…","","","","","","","","","Bounding box maximum (inclusive).","The other corner, opposing <code>Self::min</code>. Usually the right …","","Bounding box minimum (inclusive).","One of the corners of the rectangle, usually the left top …","A <code>BoundingBox</code> that contains no points.","","","","","Returns the distance the ray traveled of the first …","Compute the distance between a ray and a line segment.","Linearly remap a value from one range to another, so that …","Like <code>remap</code>, but also clamps the value so that the returned …","<code>max.x</code>","","","<code>max.x</code>","","Rotate the bounds (will expand the <code>Rect</code>)","Return a bounding box that contains this box after it has …","","","","","","","<code>max.y</code>","Keep size","keep min","<code>min.x</code>","<code>max.x</code>","<code>min.y</code>","keep min","Shrink by this much in each direction, keeping the center","Shrink by this much in each direction, keeping the center","Signed distance to the edge of the box.","Returns the 3D axis size of the bounding box.","","<code>[2, 1]</code> for wide screen, and <code>[1, 2]</code> for portrait, etc. At …","","","<code>min.y</code>","<code>min.y</code>","Return a bounding box that contains this box after it has …","Return a bounding box that contains this box after it has …","Return a bounding box that contains this box after it has …","","Translate (move) the box by this much.","","","","","","","","The union of two bounding rectangle, i.e. the minimum <code>Rect</code> …","","","","","","","Only correct for positively sized boxes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Global options for the viewer.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Show milliseconds, RAM usage, etc.","","","","","","","","","","","","Does memoization of different things for the immediate …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","For displaying images efficiently in immediate mode.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","For displaying meshes efficiently in immediate mode.","","","Call once per frame to potentially flush the cache(s).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The <code>TensorImageView</code> is a wrapper on top of …","","","Annotations used to create the view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DynamicImage helper for things like zoom","For easily zooming into it in the UI <code>None</code> if the tensor …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","When <code>ImageCache::generation</code> was we last used?","","","","","","","","","Total memory used by this image.","","Call once per frame to (potentially) flush the cache.","","","","","","","","","","Attempt to free up memory.","For egui","For egui. <code>None</code> if the tensor was not a valid image. …","","","","","","","","","Borrowed tensor from the data store","","For rendering with re_renderer","For rendering with re_renderer. <code>None</code> if the tensor was not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handles interfacing with the OS clipboard.","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Get access to the thread-local <code>Clipboard</code>.","","","LUT as defined here","Converts float from 0.0..=1.0 into a color using Turbo.","Given a value in [0, 1], output <code>sRGB</code> in Viridis color map.","","","","One “thing” in the UI.","An ordered collection of <code>Item</code>.","","","","","","","","","","","","","","","","","","","","","","Returns true if the exact selection is part of the current …","","","","","","","","","","","","","","","","","","","The first selected object if any.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","If <code>false</code>, the selection is referring to data that is no …","","","Number of elements in this multiselection","","","","","","","","","","Remove all invalid selections.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Wraps a connection to a <code>puffin</code> viewer.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Hover highlight, sorted from weakest to strongest.","Apply hover highlight, does <em>not</em> exclude a selection …","","Combination of selection &amp; hover highlight which can occur …","","No selection highlight at all.","No hover highlight.","","Should apply selection highlight (i.e. the exact selection …","Selection highlight, sorted from weakest to strongest.","Selection and hover state","A closely related object is selected, should apply similar …","Highlights of a specific entity path in a specific space …","Highlights in a specific space view.","Hovering in a 3D space.","Hovering in a 2D space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears the current selection out.","","","","","","","","","","","","","Returns the current selection.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","History of selections (what was selected previously).","","Returns the currently hovered objects.","What objects are hovered? Read from this.","","What space is the pointer hovering over? Read from this.","What space is the pointer hovering over? Write to this.","What objects are hovered? Write to this.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Any active highlight at all.","","","","","","","","","","","","","","","","","Picks the stronger selection &amp; hover highlight from two …","Called at the start of each frame","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Selections the next element in the history if any.","Selects the previous element in the history if any.","","Currently selected things; shown in the …","","","Set the hovered objects. Will be in <code>Self::hovered</code> on the …","","Sets several objects to be selected, updating history as …","Sets a single selection, updating history as needed.","","","","","","Select currently hovered objects unless already selected …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Where in this 2D space (+ depth)?","","The 3D space with the camera(s)","2D spaces and pixel coordinates (with Z=depth)","Information about one “space”.","Information about all spaces.","","","","","","","","","","","","","Nearest descendants to whom we are not connected with an …","","","","","","All paths in this space (including self and children …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Answers if an entity path (<code>from</code>) is reachable via a …","","","","","","","Do a graph analysis of the transform hierarchy, and create …","","","","","Nearest ancestor to whom we are not connected via an …","","","","","","","","","","","","","","","","","","","","Invokes visitor for <code>self</code> and all descendants that are …","","","","","","","A piece-wise linear view of a single timeline.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","We are looping the entire recording.","Follow the latest available data","","Looping is off.","Time doesn’t move","","Time move steadily","We are looping within the current loop selection.","Controls the global view and progress of the time.","State per timeline.","The time range we are currently zoomed in on.","","","","","The current loop range, iff selection looping is turned on.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Query for latest value at the currently selected time on …","","Pick the timeline that should be the default, prioritizing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If true, we are in “follow” mode (see …","playback fps","Frames Per Second, when playing sequences (they are often …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The full range of times for the current timeline","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the current time in the selection range (if any), or at …","","The selected slice of time that is called the “loop …","Selected time range, if any.","","","","","","","","","","","","","","","Where start of the the range.","Update the current time","","","","","","","","","","","","","","","","","","If true, we are either in <code>PlayState::Playing</code> or …","","The range of time we are currently zoomed in on.","","","","","","","","","","","Make sure the selected timeline is a valid one","","","","","","playback fps","Set the current loop selection without enabling looping.","","","playback speed","","The range of time we are currently zoomed in on.","","","playback speed","","","","","","","","","","The current time.","The current time (play marker).","","The current time.","The current time.","How much time the full view covers.","The time type of the currently selected timeline","The range of time we are currently zoomed in on.","The currently selected timeline","Name of the timeline (e.g. “log_time”).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The time range we are currently zoomed in on.","","","","","","","","","","","","","","","","","Exiting out of a space with a pinhole camera that doesn’…","More than one pinhole camera between this and the …","Provides transforms from an entity to a chosen reference …","<code>super::space_info::SpaceInfoCollection</code> is outdated and can…","Unknown transform between this and the reference space.","","","","","","","","","","","","","","","","","","","","","","","","Determines transforms for all entities relative to a root …","","","","","The first parent of reference_path that is no longer …","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Retrieves the transform of on entity from its local system …","All reachable entities.","All transforms provided are relative to this reference …","","","","","","","","","","","","","","","All unreachable descendant paths of <code>reference_path</code>.","","","","","","","","","","","","","UI config for the current recording (found in <code>LogDb</code>).","Common things needed by many parts of the viewer.","Global options for the whole viewer.","","","","","","","Things that need caching.","","","","","","","Show a component path and make it selectable.","How to display components","The current time query, based on the current time control.","","","","","","","","","","","","","","Show an entity path and make it selectable.","Show an entity path and make it selectable.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the currently hovered objects.","","","Show an instance id and make it selectable.","Show an instance id and make it selectable.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The current recording","","","","","Show an <code>MsgId</code> and make it selectable","","","","","The look and feel of the UI","UI config for the current recording (found in <code>LogDb</code>).","","","","","","Selects (or toggles selection if modifier is clicked) …","Returns the current selection.","","Selection &amp; hovering state.","","","Set the hovered objects. Will be in <code>Self::hovered</code> on the …","Sets several objects to be selected, updating history as …","Sets a single selection, updating history as needed.","","","","The current time of the time panel, how fast it is moving, …","","","","","","","","","","","","","","","","","","","","","","","","Connects to a server over <code>WebSockets</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","url to rerun server","","","","","","","","","","","","","","","","The url of the remote server.","","","","","","","","","","","","","","","","Code for automatic layout of space views.","","","The <code>DataUi</code> trait and implementations provide methods for …","","","","","","","","","","","","","","","","","The viewport panel.","","","","","","","","","","","","","","","","","Merges class annotation info with keypoint annotation info …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","For each <code>EntityPath</code> in the <code>SceneQuery</code>, walk up the tree …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Desired aspect ratio, if any.","","","","","","","","","","","","","","","","","","","","","","","","","","","","If we need to pick only one aspect ratio for all these …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Group categories together, i.e. so that 2D stuff is next …","Put spaces with common path prefix close together.","","","","","","","","","","","","","Some path we use to group the views by","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines the layout of the whole Viewer (or will, …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","A grouping of several data-blueprints.","","Tree of all data blueprint groups for a single space view.","Data blueprints for all entity paths in a space view.","","","","","Adds an entity path to a group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns mutable individual entity properties, the …","Returns entity properties with the hierarchy applied.","","","","","","","","","","","","","","","","","","","","","","","","","","Direct child entities of this blueprint group.","List of all entities that we query via this data blueprint …","List of all entities that we query via this data blueprint …","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Resolves a data blueprint group handle.","Resolves a data blueprint group handle.","All data blueprint groups.","","Individual settings. Mutate this.","","","","","Adds a list of entity paths to the tree, using grouping as …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Should be called on frame start.","","","","","","","","","Parent of this blueprint group. Every data blueprint …","","Mapping from entity paths to blueprints.","","Properties, as inherited from parent. Read from this.","Individual settings. Mutate &amp; display this.","Properties, as inherited from parent. Read from this.","Removes an entity from the data blueprint collection.","Removes a group and all its entities and subgroups from …","","Returns the root data blueprint.","Root group, always exists as a placeholder","Returns a handle to the root data blueprint.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls the visitor function on every entity path in the …","","","","","","","","","","","","","Display everything, as large as you want. Used for …","Types implementing <code>DataUi</code> can draw themselves with a …","At most this height","Display a reduced set, used for hovering.","Keep it small enough to fit on one row.","Controls how mich space we use to show the data in <code>DataUi</code>.","","","","","","","","","","","","","","","If you need to lookup something in the data store, use the …","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","All the values of a specific <code>re_log_types::ComponentPath</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","How to display components in a Ui","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Show a ui for this instance of this component.","","","","","","","Default number of ui points to show a number.","","","","","","<code>meter</code>: iff this is a depth map, how long is one meter?","","","","","","","","An event log, a table of all log messages.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Note that we purged memory at this time, to show in stats.","","","","","","","","","","","","","","","","Call once per frame","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Iter over all of the currently visible <code>EntityPath</code>s in the …","","","","","","","","","","","","","","","","","","A <code>Selection</code> and its index into the historical stack.","","A stack of <code>Selection</code>s, used to implement “undo/redo”…","","","","","","","","","","","","","","","","","","","","","Index into <code>Self::stack</code>.","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Oldest first.","","","","","","","","","","","","","","","","","","","","","","","","","The “Selection View” side-bar.","","What is the blueprint stuff for this item?","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","What is selected? Not the contents, just the short id of …","","","A view of a space.","A unique id for each space view.","Camera position and similar.","","","","Adds a subtree of entities to the blueprint tree and …","","","","","","","","","","","","","We only show data that match this category.","","","","","","","","","","","","","","The data blueprint tree, has blueprint settings for all …","","","","","","","","","","","","","","","","","","True if the user is expected to add entities themselves. …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Removes a subtree of entities from the blueprint tree.","","","","","","","","Selects in <code>Self::state_tensors</code>.","","","","","The “anchor point” of this space view. The transform …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes if an entity path can be added to a space view.","","","","Window for adding/removing entities from a space view.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Can be generally added but space view might already have …","Can be added and spaceview doesn’t have it already.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List out all space views we allow the user to create.","","List out all space views we generate by default for the …","","List of entities a space view queries by default for a …","List of entities a space view queries by default for all …","","Whether an entity should be added to a space view at a …","","","Positions circles on a horizontal line with some vertical …","How much of the gap use up to expand segments visually to …","The ideal gap between time segments.","","","A panel that shows entity names to the left, time on the …","Represents a compressed view of time. It does so by …","","","","","","","","","","","","","","","","","","","","","","","","","","Clamp the time to the valid ranges.","","","","","Safe, meaningless default","","","","","","","","","","","","","","","","","","","","","Human-readable description of a duration","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Sze of the gap between time segments.","","","","","","","","Returns a scroll delta","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","The right side of the entity name column; updated during …","","","","","","","","","","","","","","Visually separate the different time segments","Pan the view, returning the new view.","How many egui points for each time unit?","x distance per time unit","Width of the entity name columns previous frame.","","","","","","","","","","x ranges matched to time ranges","","","","","","","","Make sure the time is not between segments.","does NOT match any of the above. Instead this is a tight …","Matches <code>Self::x</code> (linear transform).","","A vertical line that shows the current time.","The time axis view, regenerated each frame.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find a nice view of everything.","","","","","","","","","","","","","Matches <code>Self::time</code> (linear transform).","","The total x-range we are viewing","Zoom the view around the given x, returning the new view.","","","A bar chart scene, with everything needed to render it.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Bar-chart plots made from 1D tensor data","2D or 3D view","High-dimensional tensor view","Text log view (text over time)","Time series plot (scalar over time)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An eye in a 3D view.","","Note: we use “eye” so we don’t confuse this with …","","","The approximate size of pixels in world coordinates at a …","","","","","","","","","","","","","","","","","Create an <code>OrbitEye</code> from a <code>Eye</code>.","","","","","","","","","","","","","","","","If no angle is present, this is an orthographic camera.","","Returns the argument unchanged.","Returns the argument unchanged.","","Direction we are looking at","","","Returns <code>true</code> if any change","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Listen to WSAD and QE to move the eye.","","","","","","","","","","","","","","Picking ray for a given pointer in the parent space (i.e. …","Only valid if we have an up vector.","","","e.g. up is <code>[0,0,1]</code>, we return things like <code>[x,y,0]</code>","Rotate around forward axis","Rotate based on a certain number of pixel delta.","","","","","","","","","","","","Translate based on a certain number of pixel delta.","","","","","","","","","","","","Zero = no up (3dof rotation)","","","For controlling the eye with WSAD in a smooth way.","","","","","","","","","","","","","","","","","","TODO(andreas): Scene should only care about converted …","","","","Labels a given point (in scene coordinates)","Labels a given rect (in scene coordinates)","","","","","Data necessary to setup the ui <code>SceneSpatial</code> but of no …","Static meshes that are embedded in the player","","","A thing that provides additional semantic context for your …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Images are a special case of rects where we’re storing …","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","What is hovered if this label is hovered.","Loads all 3D objects into the scene according to the given …","","","","","","","","","","","","","","","","","","","","If this is a depth map, how long is a meter?","Number of 2d primitives logged, used for heuristics.","Number of 3d primitives logged, used for heuristics.","Origin of the label","","","","","","","","","","","","","","","","","Picking any any of these rects cause the referred instance …","","","Heuristic whether the default way of looking at this scene …","","","","","","","","","","","","","","","","","","","Responsible for populating <code>SceneSpatialPrimitives</code> and …","","All space cameras in this scene. TODO(andreas): Does this …","The shape being labeled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We hit a egui ui element, meaning that depth information …","No additional picking information.","","","","","","The hit was a textured rect at the given uv coordinates …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Any additional information about the picking hit.","","","","","","What entity or instance got hit by the picking ray.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterates over all hits from far to close.","","","","","","","","","","","","Picking ray hit for an opaque object (if any).","","","","","","","","","","","","","","","The picking ray used. Given in the coordinates of the …","","","","","Where along the picking ray the hit occurred.","","","","","","","","","","","","The space position of a given hit.","Picking ray hits for transparent objects, sorted from far …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Primitives sent off to <code>re_renderer</code>. (Some meta information …","","","","","bounding box covering the rendered scene","Estimated bounding box of all data in scene coordinates. …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Number of primitives. Rather arbitrary what counts as a …","","","","","","","","","","","","","","","","","","","","","","","","Computes the instance hash that should be used for picking …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Build scene parts for a single box instance","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Determine the view coordinates (i.e.) the axis semantics.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","If the number of points in the batch is &gt; max_labels, don…","","","","","","","","","","","","","","","","","","","A logged camera that connects spaces.","","","","","","","","","","","","","","","Path to the entity which has the projection (pinhole, …","Returns the argument unchanged.","","Projects world coordinates onto 2D image coordinates","","The instance that has the projection.","Calls <code>U::from(self)</code>.","","","","","Optional distance of a picture plane from the camera.","The projection transform of a child-entity.","Where in scene-space is the camera origin?","Returns x, y, and depth in image coordinates.","","","","","","","Unproject a 2D image coordinate as a ray in 3D space","","","","The coordinate system of the camera (“view-space”).","","","Camera “Extrinsics”, i.e. the pose of the camera.","Projects image coordinates into world coordinates","Scene-space from Rerun view-space (RUB).","","","","","Describes how the scene is navigated, determining if it is …","","","","","","","","","","Size of automatically sized objects. None if it wasn’t …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","How the scene is navigated.","","","","","","","","","","","","","Estimated bounding box of all data for the last scene …","Estimated bounding box of all data. Accumulated over every …","Estimated number of primitives last frame. Used to inform …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sub-state specific to the Zoom/Scale/Pan engine","","","","","","","","","Take the offset from the <code>ScrollArea</code> and apply it back to …","","","","","","","","","","","","","","","","","","","Determine the optimal sub-region and size based on the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update our zoom state based on response If nothing else …","Create the outer 2D view, which consists of a scrollable …","Create the real 2D view inside the scrollable area","","","","","","","The zoom and pan state, which is either a zoom/center or …","Whether to allow the state to be updated by the current …","Which scene coordinate will be at the center of the zoomed …","Number of ui points per scene unit","","","","","","","","","","","","","","","","","Camera pose just before we took over another camera via …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Where in world space the mouse is hovering (from previous …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Filled in at the start of each frame","","","","","","","","","","Currently tracked camera.","","","","","","","","","","","","","","","","","","","","","TODO(andreas): Split into smaller parts, more re-use with …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","A tensor scene, with everything needed to render it.","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Loads all tensors into the scene according to the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","How we map values to colors.","Scale the texture for the largest possible fit in the UI …","","No scaling, texture size will match the tensor’s …","Should we scale the rendered texture, and if so, how?","Scaling, filtering, aspect ratio, etc for the rendered …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How we map values to colors.","","","","","","","","","","","","","","","","","","","","How we select which dimensions to project the tensor onto.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Should the aspect ratio of the tensor be kept when scaling?","","","","","","","","","","","","Specifies the sampling filter used to render the texture.","","","","","","","","","","","","","","","","","","","","","","","Should we scale the texture when rendering?","","Selected value of every dimension (iff they are in …","","","","","","","","Last viewed tensor, copied each frame. Used for the …","","Scaling, filtering, aspect ratio, etc for the rendered …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A text scene, with everything needed to render it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Loads all text components into the scene according to the …","","","","","","","","","","","","","","","<code>None</code> for timeless data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Keeps track of the latest time selection made by the user.","","","","","","","","","","","","","","","","","","","","<code>scroll_to_row</code> indicates how far down we want to scroll in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A scene for a time series plot, with everything needed to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Loads all plots into the scene according to the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Describes the layout and contents of the Viewport Panel.","What views are visible?","","","","","Show a single button (<code>add_content</code>), justified, and show a …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Set to <code>true</code> the first time the user messes around with the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Show one tab as maximized?","Create a default suggested blueprint using some heuristics.","","","","","","","","","","","","","","","","","","","Shown in the right of the tab panel","","","Where the space views are stored.","","","Show the blueprint panel tree view.","The layouts of all the space views.","","","","","","","","","","","","","","","","Which views are visible.","","","","","",""],"i":[0,0,0,0,12,0,141,12,12,12,0,0,12,0,12,12,12,0,7,12,12,0,0,12,12,12,141,0,0,0,12,43,12,141,12,12,0,141,0,0,0,19,0,0,0,0,18,18,0,18,19,0,18,7,19,12,22,12,18,7,19,22,12,22,12,18,7,19,22,12,18,7,19,22,22,12,18,7,19,22,12,12,18,7,19,22,12,18,7,19,22,12,12,18,7,19,18,7,19,12,12,12,0,7,19,22,12,18,7,19,22,12,18,7,19,22,19,22,12,18,7,19,22,12,18,7,19,22,18,19,18,18,19,19,22,0,18,12,0,12,18,7,19,22,12,18,12,18,12,18,7,19,22,0,12,18,7,19,22,12,12,0,0,0,12,12,12,12,18,7,19,22,12,18,7,19,22,0,7,12,12,12,0,12,0,12,18,7,19,22,12,18,7,19,22,0,0,22,12,12,12,0,22,12,12,12,12,22,0,0,12,12,12,12,12,12,18,7,19,22,12,18,7,19,22,0,12,0,0,12,22,22,19,22,12,22,12,12,12,12,22,18,7,19,12,0,0,12,18,7,19,22,12,18,7,19,22,12,18,7,19,22,12,18,7,19,22,12,18,7,19,22,12,18,7,19,22,12,12,18,7,19,22,0,12,18,7,19,22,12,18,7,19,22,0,0,49,49,49,0,52,52,49,49,49,49,52,49,52,49,52,49,49,49,49,52,52,49,52,49,49,49,52,52,49,52,49,49,52,49,52,49,52,49,49,52,52,52,49,52,49,52,49,49,49,52,49,52,49,0,52,52,49,49,49,52,49,49,49,49,49,49,52,52,49,49,49,52,49,52,49,49,52,49,52,49,52,49,52,49,49,49,52,49,52,49,49,52,49,52,49,52,49,52,49,52,52,49,52,49,49,49,49,49,49,49,0,0,0,52,49,52,49,0,52,49,0,52,49,52,52,49,52,49,0,0,0,0,49,49,49,49,49,49,52,52,49,52,49,52,49,49,49,49,49,49,49,49,49,49,49,52,49,49,52,49,49,49,52,52,52,49,52,52,49,52,49,52,49,52,49,52,49,52,49,52,49,52,52,49,49,52,49,52,49,49,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,68,66,68,66,68,66,68,66,68,66,68,66,66,68,66,68,66,68,66,68,66,68,66,66,68,66,68,66,68,66,68,66,66,0,68,66,68,66,68,66,66,68,68,66,68,66,0,66,66,68,66,68,66,68,66,68,66,68,66,68,66,68,66,68,66,68,66,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,0,0,0,74,74,81,80,81,79,74,76,81,79,74,76,81,79,74,76,81,79,74,76,81,79,74,76,81,79,74,76,74,74,74,76,81,79,74,76,81,79,74,76,81,79,74,76,81,79,74,76,0,81,79,74,74,74,74,81,79,74,76,79,79,76,74,76,76,74,76,81,79,74,76,81,79,74,76,79,81,79,74,76,81,79,74,76,79,76,76,81,79,74,76,81,79,74,76,74,76,81,79,81,79,74,76,81,79,74,76,81,74,81,79,74,81,79,74,76,81,79,74,76,81,79,74,76,81,79,74,76,81,79,74,76,81,79,74,76,81,79,74,76,81,79,74,76,81,79,74,76,0,83,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,86,86,86,0,0,86,86,86,85,85,86,85,86,85,86,85,86,85,86,85,86,85,86,85,86,85,85,86,85,86,85,86,85,86,85,86,85,86,85,86,85,86,86,85,85,85,86,85,86,85,86,86,86,85,86,85,85,85,86,85,86,85,86,85,86,85,85,86,85,86,85,85,86,85,86,85,85,86,85,86,85,85,86,85,86,85,86,85,86,85,86,85,86,85,86,85,86,85,86,85,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,43,43,43,43,43,43,43,43,43,43,0,98,0,0,96,97,98,0,97,0,0,97,0,0,96,96,96,97,98,99,94,94,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,95,96,97,98,99,94,96,97,98,99,94,97,98,95,96,97,98,99,100,101,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,101,96,97,98,99,97,97,98,98,99,99,96,96,97,98,99,100,94,101,95,95,101,95,95,99,95,95,95,95,95,95,94,96,97,98,99,100,94,101,95,100,96,97,98,99,100,94,101,95,97,98,99,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,99,95,100,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,97,98,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,95,95,99,95,95,95,95,95,95,95,96,97,98,99,94,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,96,97,98,99,100,94,101,95,273,273,274,274,0,0,109,107,109,107,109,107,109,107,109,107,109,107,109,107,109,107,109,107,109,109,107,109,107,109,107,107,109,107,109,107,107,107,109,107,109,107,109,107,109,107,109,107,109,109,0,109,107,109,107,107,109,107,109,107,109,107,109,107,109,107,109,107,109,109,107,109,107,109,107,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,121,122,0,121,122,0,122,121,0,0,0,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,119,120,121,122,119,120,121,122,117,117,0,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,121,122,121,121,122,122,119,120,121,122,117,117,117,120,117,119,120,121,122,117,117,121,122,121,122,119,120,121,122,117,119,120,121,122,117,117,117,117,120,117,117,119,120,121,122,117,119,120,121,122,117,0,0,119,117,120,119,120,121,122,117,119,120,121,122,117,117,117,117,117,117,117,117,0,117,119,120,121,122,117,119,120,121,122,117,117,119,120,121,122,117,117,117,117,117,117,117,117,117,117,117,117,117,0,0,0,0,117,117,117,117,120,117,117,117,119,117,117,117,117,117,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,120,119,120,121,122,117,119,120,121,122,117,119,120,121,122,117,0,110,110,0,110,110,0,129,110,129,110,129,110,129,110,129,110,129,110,129,110,129,110,129,110,129,110,129,110,129,129,110,129,110,129,110,129,110,129,129,110,129,110,0,129,110,129,110,129,110,129,110,129,129,129,129,110,129,110,129,110,110,0,129,110,129,110,129,110,129,129,110,129,110,129,110,129,110,129,110,129,110,0,0,87,87,136,87,136,87,136,87,87,136,87,136,87,136,87,87,87,87,87,87,136,87,136,87,136,136,87,136,87,136,87,87,87,136,87,87,136,87,87,87,136,87,87,136,87,136,87,87,136,87,136,87,87,87,87,136,87,136,87,87,87,136,87,136,87,87,87,87,87,87,136,87,87,87,136,87,136,87,136,87,136,87,136,87,136,87,136,87,136,87,136,0,0,0,0,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,0,0,148,0,0,148,146,148,143,149,150,142,142,0,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,146,146,148,143,149,146,148,143,149,143,146,149,142,146,148,143,149,150,150,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,149,146,149,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,143,149,142,146,148,143,149,150,142,146,148,143,149,150,146,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,146,148,143,149,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,142,146,148,143,149,150,0,153,153,154,0,0,153,154,152,152,153,154,152,153,154,152,153,154,152,153,154,152,152,153,154,152,153,154,152,152,152,153,154,152,153,154,152,0,153,154,152,153,154,152,0,152,153,154,152,0,0,152,153,154,152,153,154,152,0,0,153,154,152,153,154,152,153,154,152,153,154,152,152,153,154,152,153,154,152,0,0,0,152,0,0,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,153,154,152,275,276,276,276,275,275,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,135,158,159,157,157,157,135,158,159,157,135,158,159,157,135,158,159,157,135,158,159,157,135,158,159,157,135,158,159,157,158,135,158,159,157,135,158,159,157,135,157,135,157,157,157,135,158,159,157,135,158,159,157,135,158,159,157,135,158,159,157,158,135,158,159,157,135,158,159,157,158,157,157,135,135,135,135,135,135,158,159,157,135,157,157,157,135,159,135,158,159,157,157,135,158,159,157,135,158,159,157,135,158,159,157,157,135,158,159,157,135,158,159,157,158,135,157,0,159,158,158,157,157,157,157,157,157,135,158,159,157,135,158,159,157,135,158,159,157,135,158,159,157,135,158,159,157,135,158,159,157,135,158,159,157,135,158,159,157,135,158,159,157,135,158,159,157,157,135,158,159,157,135,158,159,157,135,158,159,157,88,0,88,88,88,0,88,0,88,88,88,88,88,88,88,88,0,0,0,0,277,88,88,88,88,0,88,0,88,0,88,0,88,0,88,88,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,0,0,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,0,169,169,0,169,169,169,0,169,169,169,169,169,169,169,169,169,169,0,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,0,172,172,172,172,172,172,172,172,172,172,172,172,0,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,0,0,0,106,174,106,174,106,174,106,174,106,174,106,174,106,174,106,174,106,174,174,174,174,174,106,174,106,174,106,174,106,174,106,174,106,106,174,174,106,106,174,106,174,106,174,106,174,174,174,174,106,174,106,174,174,174,106,174,106,174,174,174,106,174,174,106,174,106,174,106,174,106,174,106,174,106,174,106,174,174,106,174,106,174,106,174,0,0,0,0,175,0,175,175,175,175,175,175,175,175,175,175,175,175,0,175,0,175,175,0,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,0,175,175,0,0,0,103,139,177,139,103,139,177,103,139,177,103,139,177,103,139,177,139,103,139,177,103,139,177,103,139,177,103,139,177,103,139,177,103,139,177,103,139,177,103,139,177,139,103,139,177,103,139,177,139,103,103,103,103,103,139,177,103,103,139,103,139,177,103,139,177,103,139,177,103,139,177,139,139,103,139,177,103,139,177,103,103,139,103,139,177,103,139,177,139,177,139,103,139,177,139,177,177,177,177,177,103,139,177,103,139,177,103,139,177,103,139,177,177,177,177,177,177,103,139,177,103,139,177,103,139,177,139,103,139,177,103,139,177,103,139,177,0,184,0,184,0,184,0,0,0,186,184,185,186,184,185,186,184,185,185,185,186,184,185,185,186,184,185,186,184,185,184,184,0,184,185,186,184,185,186,184,185,186,184,185,186,184,185,184,184,184,186,184,185,186,184,185,186,184,185,184,184,184,186,184,185,186,184,185,186,184,185,186,184,185,186,184,185,186,184,185,186,0,184,186,184,185,186,184,185,186,184,185,186,186,184,185,186,184,185,186,184,185,186,184,185,186,184,185,186,184,185,278,279,0,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,0,189,280,190,189,191,280,190,189,191,280,190,189,191,280,190,189,191,280,190,189,191,280,190,189,191,190,189,191,0,189,190,189,191,280,190,189,191,280,190,189,191,191,280,190,189,191,280,190,189,191,191,0,280,190,189,191,0,0,280,190,189,191,0,0,0,280,190,189,191,0,280,190,189,191,280,190,189,191,190,191,280,190,189,191,280,190,189,191,0,0,0,0,0,0,190,190,190,191,189,280,190,189,191,280,190,189,191,190,191,191,0,0,191,191,190,190,280,280,190,0,191,190,0,191,280,190,189,191,280,190,189,191,280,190,189,191,280,190,189,191,280,190,189,191,280,190,189,191,0,280,190,189,191,280,190,189,191,280,190,189,191,280,190,190,190,0,0,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,0,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,0,197,197,197,140,140,140,140,140,0,0,140,140,140,140,140,140,140,140,0,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,0,201,0,200,201,200,200,201,200,201,200,201,200,201,200,201,200,201,200,201,200,201,201,200,201,200,201,200,201,200,201,200,201,200,200,200,201,200,200,201,200,201,200,201,200,201,201,200,201,200,201,200,201,200,201,200,201,200,201,201,200,201,200,201,200,201,200,201,0,201,201,200,201,200,201,200,201,201,201,201,200,201,201,200,201,200,201,200,201,200,200,201,200,201,201,200,201,201,200,201,200,201,200,201,200,201,0,179,179,0,0,0,0,0,70,0,0,0,0,281,281,179,179,0,0,0,70,282,179,283,179,179,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,284,204,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,204,70,282,283,281,284,285,204,179,282,283,0,70,282,283,281,284,285,204,179,204,204,284,179,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,282,70,283,179,179,285,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,204,0,179,179,0,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,0,179,179,284,283,284,285,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,282,70,282,283,281,284,285,204,179,70,282,283,281,284,285,204,179,0,286,286,0,0,0,0,0,286,286,210,207,212,209,286,210,207,212,209,286,210,207,212,209,286,210,207,212,209,209,286,210,207,212,209,286,210,207,212,209,209,209,210,286,210,207,212,209,286,210,207,212,209,286,210,207,212,209,286,210,207,212,209,286,210,207,212,209,210,210,286,210,207,212,209,210,286,210,207,212,209,207,286,210,207,212,209,286,210,207,212,209,212,207,286,210,207,212,209,286,210,207,212,209,0,0,0,0,207,0,0,212,212,210,286,210,207,212,209,286,210,207,212,209,209,207,207,209,286,210,207,212,209,286,210,207,212,209,286,210,207,212,209,212,286,210,207,212,209,286,210,207,212,209,286,210,207,212,209,286,210,207,212,209,286,210,207,212,209,286,210,207,212,209,0,0,0,0,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,0,0,0,0,0,0,0,0,0,287,0,0,0,0,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,0,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,0,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,0,225,225,225,225,225,225,225,225,0,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,0,227,227,227,227,227,227,227,227,227,227,227,0,227,227,227,227,227,227,227,227,0,227,227,227,227,227,227,227,227,227,227,227,0,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,0,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,0,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,0,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,0,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,0,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,0,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,236,0,0,208,208,236,0,236,208,236,234,234,234,234,0,208,236,234,208,236,234,208,236,234,208,236,234,208,236,234,208,236,234,208,236,234,208,236,234,208,234,234,234,208,236,234,208,236,234,208,234,208,236,234,208,236,234,208,236,208,208,236,236,208,236,234,234,208,236,234,208,236,234,208,236,234,208,236,234,234,208,236,234,208,236,234,208,236,234,208,236,234,234,234,234,234,208,234,0,234,234,208,236,234,208,236,234,208,236,234,208,236,234,208,236,234,208,236,234,208,236,234,234,208,236,234,208,236,234,208,236,234,238,0,238,0,0,237,238,237,238,237,238,237,238,237,237,238,237,238,237,238,237,238,237,238,0,237,238,237,238,237,238,237,237,237,238,237,238,237,238,237,238,237,238,237,238,237,238,237,238,237,238,0,237,238,237,238,237,0,0,237,238,237,238,237,238,237,238,237,238,237,238,237,238,237,0,0,237,238,237,238,237,238,237,288,288,288,0,0,0,0,241,242,243,241,242,243,241,242,243,241,242,243,241,241,242,243,241,242,243,241,242,243,241,242,243,241,242,243,241,243,0,241,242,243,241,242,243,241,241,242,243,241,242,243,242,241,0,241,242,243,243,241,241,242,243,241,241,241,242,243,241,241,242,243,241,242,243,241,241,242,243,241,242,243,0,0,241,243,241,242,243,241,242,243,241,241,0,241,241,241,242,242,242,242,242,241,242,243,241,241,242,243,241,242,243,241,242,243,241,242,243,241,242,243,243,241,242,243,241,0,241,242,243,241,242,243,241,242,243,244,244,0,244,244,244,244,244,244,0,0,244,244,244,244,244,0,244,244,244,244,244,244,0,244,244,244,244,244,244,244,244,244,244,244,0,0,0,0,0,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,0,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,0,248,0,0,248,0,248,248,248,248,248,248,248,248,248,248,248,248,248,248,0,248,248,248,248,248,248,248,248,248,248,248,0,0,255,253,255,0,0,253,0,253,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,254,252,252,254,255,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,0,252,253,254,255,256,252,253,254,255,256,253,255,256,253,253,252,253,253,254,255,255,256,252,253,254,255,256,254,0,252,253,254,255,256,252,253,254,255,256,0,256,252,253,254,255,256,252,253,254,255,256,254,256,252,253,254,255,256,252,253,254,255,256,0,256,252,253,254,255,256,252,253,254,255,256,256,0,252,0,252,253,254,255,256,0,252,0,252,252,253,254,255,256,253,255,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,252,254,256,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,0,252,253,254,255,256,252,253,254,255,256,252,253,254,255,256,0,0,0,0,261,261,181,261,261,181,261,181,261,181,261,181,261,181,261,261,261,181,261,181,261,181,261,181,261,181,261,261,261,181,261,181,261,181,261,181,261,181,261,181,261,261,181,261,181,261,181,261,181,181,261,261,261,181,261,181,261,181,261,181,261,181,261,181,261,181,261,181,261,181,0,0,263,262,263,262,263,262,263,262,0,263,262,263,262,263,262,263,262,263,262,262,262,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,263,262,0,263,262,263,262,262,262,263,0,263,262,263,262,263,263,262,263,262,262,262,263,262,263,262,263,263,262,0,263,262,263,262,263,262,263,262,263,262,263,262,263,262,262,0,263,262,263,262,263,262,0,0,268,0,0,0,0,268,0,267,266,268,269,182,182,266,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,267,266,268,269,267,266,268,269,267,269,182,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,267,267,267,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,269,267,269,182,182,182,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,269,267,267,266,268,269,182,267,266,268,269,182,267,266,267,266,268,269,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,267,266,268,269,182,266,267,266,268,269,182,269,267,266,268,269,182,267,266,268,269,182,0,0,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,0,270,270,270,271,0,0,0,271,271,272,271,0,272,271,272,271,272,271,272,271,272,271,272,271,271,272,271,272,271,271,272,271,272,271,0,272,271,271,0,272,271,272,271,0,272,271,272,271,271,271,271,271,272,272,271,272,271,271,272,271,272,271,271,271,271,271,271,271,271,0,0,272,271,271,272,271,271,272,271,272,271,272,271,272,272,271,272,271,272,271,271,0,271,272,271,272,271,272,271],"f":[0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[5,[4]]],6],[[7,[9,[8]]],6],0,0,0,0,0,0,0,0,[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,[11],[11],[11],0,0,[[]],[[]],[[]],[[]],[[]],[12,13],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[12,14,15]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[12],[[12,17]],[18,18],[7,7],[19,19],[[]],[[]],[[]],0,0,0,[[20,21]],[[],7],[[],19],[[],22],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[],[[24,[19]]]],[[],[[24,[22]]]],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[[18,18],25],[[19,19],25],[[],25],[[],25],[[],25],[[],25],0,[[14,12]],[[18,26],27],0,[[21,12]],[[]],[[]],[[]],[[]],[[]],[[7,2,[16,[28]],[29,[8]]],12],[[],30],[[12,14]],[18],[[],23],[[],23],[[],23],[[],23],[[],23],[[21,12]],[[]],[[]],[[]],[[]],[[]],0,0,[[31,32],[[16,[33]]]],[34,[[16,[33]]]],[32,[[35,[33]]]],[12,33],0,[12,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[21,12]],0,0,0,[[12,21,36,37]],[[21,36]],[[7,2,[16,[28]],[16,[[29,[8]]]],33],12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21],[14],0,0,0,[[12,[38,[31]]],[[16,[39]]]],[14],0,[[12,[38,[31]]],25],[12],0,[[12,14]],0,[[21,12]],[[21,15,12]],[[12,14]],[[12,40,15,14]],[[12,14,15]],[[12,18]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,16]],[[12,28]],[[21,12]],[[12,41,16],4],[12,42],0,0,[19,24],[22,24],[[12,43]],[[22,21,44,33,2,45]],[[12,33]],[[12,[47,[46]]],35],0,0,0,[[]],[[]],[[]],0,[[21,15,12,36]],[[21,15,12,36]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[12,14,15]],[[]],[[]],[[]],[[]],[[]],[[21,29]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[11],[11],[49,25],[49,50],[49,50],[[]],[[]],[[]],[[]],[[]],[[]],[49,50],[49,50],[49,[[51,[50]]]],[52,50],[[]],[[]],[52,53],[49,54],[49,54],[49,54],[52,50],[[],16],[[],16],[[],16],[[],16],[[49,54],54],[52,52],[49,49],[[]],[[]],[[52,53],25],[[49,54],25],[[49,49],25],[52],[[],52],[23],[23],[23],[23],[[],[[24,[52]]]],[[],[[24,[49]]]],[[49,54],50],[[49,54],50],[[]],[[]],[23],[23],[50,50],[52],[[52,52],25],[[49,49],25],[[],25],[[],25],[[],52],[50,49],[50,49],[50,49],[50,49],[[49,50],49],[[49,55],49],[[52,53],52],[[52,53]],[[49,54]],[[49,50]],[[49,50]],[[52,26],[[24,[56]]]],[[49,26],[[24,[56]]]],[[]],[[],49],[[]],[[53,53],52],[[54,55],49],[[53,53],52],[[54,54],49],[[53,53],52],[[54,55],49],[57,52],[[],49],[[54,54],49],[[[51,[50]],[51,[50]]],49],[52,53],[49,50],[[],23],[[],23],[[49,49],49],[[52,52],52],[[49,49],25],[[]],[[]],[52,25],[49,25],[52,25],[49,25],[52,25],[52,25],[49,25],[52,25],[[],25],[49,50],[49,54],[49,54],[49,50],[49,54],[[49,55],54],[58,50],[53,50],[53,50],[[],16],[[],16],[[]],[[]],[[50,50],50],0,0,[[50,50],50],0,0,[[],52],[[]],[[]],[[]],[[]],[[59,52],50],[59,50],[[51,51]],[[51,51]],[49,50],[49,54],[49,54],[49,50],[49,54],[[49,60],49],[[52,61],52],[[]],[[]],[[]],[[]],[52,24],[49,24],[[49,50]],[[49,54]],[[49,50]],[[49,50]],[[49,50]],[[49,50]],[[49,50]],[[49,50],49],[[49,55],49],[[49,54],50],[52,53],[49,55],[49,55],[[]],[[]],[49,50],[49,50],[[52,62],52],[[52,63],52],[[52,64],52],[[49,55],49],[[52,53],52],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[52,52],52],[[49,49],49],[[]],[[]],[[]],[[]],[[],16],[[],16],[52,50],[[]],[[]],[49,50],[[]],[[]],[[]],[[]],[49,[[51,[50]]]],[49,[[51,[50]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[21,65],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[],20],[23],[23],[[],[[24,[20]]]],[[]],[23],[[20,20],25],[[20,26],27],[[]],[[],23],[[]],[[],16],[[]],0,[[]],[[]],[[]],[[]],[20,24],0,0,[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],0,[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],66],[23],[23],[23],[23],[[]],[[]],[23],[23],[[]],[[]],0,[[],23],[[],23],[[]],[[]],[[],16],[[],16],[[]],[[]],0,0,[67,68],[66],[[]],[[]],[[]],[[]],[66],0,[[]],[[]],[[]],[[]],0,[[66,67],68],0,[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[]],[[]],[[]],[[]],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[],69],[23],[23],[[]],[23],[[]],[[],23],[[]],[[69,31,70,44],[[16,[[72,[71]]]]]],[[],16],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,0,0,0,0,[11],0,0,[72,[[35,[73]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[74,74],[[]],[[74,74],75],[[],76],[23],[23],[23],[23],[23],[23],[23],[23],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[[73,77],78],0,0,[[74,74],25],[[],25],[[],25],[[74,26],27],[[]],[[]],[[]],[[]],[[44,46,73,77],79],[[44,46,80,72],79],0,[[],30],[[76,44],81],[[76,80,72,44],81],[74],0,[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],0,[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],0,0,[[76,30]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[74,74],[[16,[75]]]],[76],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[]],[23],[[]],[[],23],[[],[[16,[82]]]],[[]],[[],16],[[]],[[],83],[[]],[[]],[[]],[[]],[83],[[83,46]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[4],[[]],[[]],0,[50,84],[50],0,0,0,0,0,0,0,[11],[11],[85,[[16,[31]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[86,86],[85,85],[[]],[[]],[[85,86],25],[[86,87,21,88,89]],[[],85],[23],[23],[23],[23],[[],[[24,[86]]]],[[],[[24,[85]]]],[[]],[[]],[23],[23],[[86,86],25],[[85,85],25],[[],25],[[],25],[[],25],[[],25],[85,[[16,[86]]]],[[86,26],27],[[85,26],27],[[]],[[]],[[],30],[86],[[],23],[[],23],[[]],[[]],[85,57],[85,25],[[86,33,13],25],[85,57],[86,31],[85,23],[[],16],[[],16],[[]],[[]],[57,85],[[]],[[]],[[]],[[]],[[85,33,13]],[[]],[[]],[[]],[[]],0,[86,24],[85,24],[[]],[[]],[85,[[9,[86]]]],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[]],[[]],[[]],[[]],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[71,52],0,[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[]],[23],[[]],[[],23],[[]],[[46,90,44],[[35,[71]]]],[[46,91,44],[[35,[71]]]],[[46,92,44],[[35,[71]]]],[[46,93,44],[[35,[71]]]],[[],16],[[]],0,[71,31],0,[[]],[[]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[],43],[23],[23],[[]],[23],[[]],[[],23],[[]],[[],16],[[]],[[]],[[]],[[]],[[]],0,[43],[[]],[43],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[11],[11],[11],[11],[11],[94,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[95],[96,96],[97,97],[98,98],[99,99],[94,94],[[]],[[]],[[]],[[]],[[]],[[97,97],75],[[98,98],75],[95,85],[[],96],[[],97],[[],98],[[],99],[[],100],[[],101],[[],95],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[],[[24,[95]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[23],[23],[23],[[101,102],94],[[96,96],25],[[97,97],25],[[98,98],25],[[99,99],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[96,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[95,86],98],0,[[95,103,104],101],0,0,[95,85],0,[95,96],0,0,0,[[94,105],99],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[97,25],[98,25],[99,25],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[99,99],99],[[95,33,13]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[97,97],[[16,[75]]]],[[98,98],[[16,[75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[95,[[16,[106]]]],[95,[[16,[106]]]],0,0,[[95,2,21,13],[[16,[85]]]],[95,24],[[95,57]],[[95,96]],[[95,57],85],[[95,86],85],[[]],[[]],[[]],[[]],[[]],[[95,[9,[86]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,[[],107],[23],[23],[23],[23],0,[[]],[[]],[23],[23],[[]],[[]],[[107,108],109],[[],23],[[],23],[[]],[[]],[[107,108,108],[[24,[110]]]],[107,57],[[],16],[[],16],[[]],[[]],[108,109],[111,107],[[]],[[]],[[]],[[]],0,0,[[111,108,89],[[16,[112]]]],[[]],[[]],[[]],[[]],0,[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[]],[[]],[[]],[[]],[[],16],[[],16],[[109,107]],[[]],[[]],[[]],[[]],[[]],[[]],0,[11],[[]],[[]],[[]],[[]],[[],16],[[],16],[113,113],[[]],[23],[23],[[]],[23],[[113,26],27],[[]],[[],23],[[]],[[],16],[[]],[113,114],[[115,116],113],[[]],[[]],0,[[]],[[]],[113,114],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[11],[11],[11],[11],[117,[[16,[118]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[119,119],[120,120],[121,121],[122,122],[[]],[[]],[[]],[[]],[117,89],[[],117],[57,[[16,[123]]]],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[],[[24,[119]]]],[[],[[24,[120]]]],[[],[[24,[121]]]],[[],[[24,[122]]]],[[],[[24,[117]]]],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[[121,121],25],[[122,122],25],[[],25],[[],25],[[],25],[[],25],[[119,26],27],[[120,26],27],[[121,26],27],[[122,26],27],[[117,2,21,124]],0,[117,[[16,[50]]]],0,[[117,21]],[[]],[[]],[[]],[[]],[[]],[[117,124],[[16,[125]]]],[[],30],[[],30],[121],[122],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[117,123,114],25],[[117,2,21]],[117,[[16,[118]]]],0,[117,121],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[126,114],[126,114],0,[[117,14,124]],[[[47,[127]]],120],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[117],[[117,2,21]],[[117,2,21,124]],[[117,2,124,21]],[117,122],[[117,21]],0,[126,125],[117],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[117,124]],[119,24],[120,24],[121,24],[122,24],[117,24],[[117,50]],[[117,118]],[[117,121]],[[117,124,122]],[[117,50]],[[117,[47,[127]]]],[[117,119]],[[117,123]],[[117,123,[47,[127]]]],[117,50],0,0,[[127,126],114],[[127,126,118],127],[[127,126],114],[[127,126,118],127],[[117,124]],[[117,2,21,124]],[[117,124]],[117,[[16,[127]]]],0,[[117,2,124,21]],[117,[[16,[128]]]],[117,[[16,[114]]]],0,[117,115],[117,[[16,[119]]]],[117,123],0,[[117,124,21]],[[]],[[]],[[]],[[]],[[117,124]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,46],0,0,0,0,0,0,[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[129,129],[110,110],[[]],[[]],[23],[23],[23],[23],[[111,117,108,130],129],[[]],[[]],[23],[23],0,[[110,26],27],[[]],[[]],[[129,131,111,89,130,132,25]],[[],23],[[],23],[[]],[[]],[[108,111,89,25],[[24,[[16,[132]],110]]]],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[129,108],[[16,[132]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],46],[[108,111,130,89,25],[[24,[[16,[132]],110]]]],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[87,21,[47,[133]],134],65],0,[87,89],[[87,65,86],65],[[87,21,[47,[133]],103,108],65],[[87,21,[47,[133]],103,135],65],[[],136],[23],[23],[23],[23],[[],[[24,[136]]]],[[]],[[]],[23],[23],[[87,21,[16,[103]],108],65],[[87,21,[16,[103]],108,[47,[133]]],65],[[]],[[]],[87,85],[[],23],[[],23],[[87,21,[16,[103]],137],65],[[87,21,[16,[103]],137,[47,[133]]],65],[[]],[[]],0,[[],16],[[],16],[[]],[[]],[[87,21,138],65],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[87,65]],[87,85],[87,95],0,[87,95],[136,24],[[87,57]],[[87,57],85],[[87,86],85],[[87,21,139],65],[[87,21,[47,[133]],103,140],65],[[87,21,123,114],65],0,[[87,21,123],65],[[87,21,[47,[133]],123],65],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[]],[[]],[[]],[[]],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[5,[4]]],6],[[7,[9,[8]]],6],0,0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[141,17]],[[141,[16,[28]]]],[23],[23],[[]],[23],[[]],[[],23],[[]],[[],16],[[]],[[7,2,[16,[28]],46],141],[[]],[[]],0,[[]],[[]],[[141,28]],[[141,43]],0,[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[141,14,15]],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[11],[11],[11],[11],0,[142,143],[[142,144],143],[145,84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[146,[16,[147]]],142],[146,146],[148,148],[143,143],[149,149],[[]],[[]],[[]],[[]],[[143,16,148],84],0,[[],149],[23],[23],[23],[23],[23],[150,72],[23],[23],[23],[23],[23],[23],[23],[[]],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[23],[[149,[47,[108]]],[[72,[146]]]],[[146,26],27],[[149,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[143,[16,[46]]],[[16,[46]]]],[[149,87,151]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[152,152],[[]],[23],[23],[23],[23],[23],[23],[[],[[16,[50]]]],[[]],[[]],[[]],[23],[23],[23],[[[9,[[9,[152]]]]]],[[152,26],27],[[]],[[]],[[]],[[],[[9,[[9,[152]]]]]],[[],[[9,[[9,[152]]]]]],0,[[],23],[[],23],[[],23],[[]],[[]],[[]],[55,153],[55,153],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[55,[9,[[9,[152]]]]],153],[[55,23],153],[[55,23],154],[[]],[[55,126,104],[[155,[103]]]],[[155,156,153]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[13,87,21,107]],[[13,87,21]],0,[[]],[[]],[[]],[[],16],[[],16],[[],13],[23],[23],[[],[[24,[13]]]],[[]],[23],[[]],[[],23],[[]],[[],16],[[]],[[]],[[]],[[13,87,21,107]],[[]],[[]],0,[13,24],0,[[13,87,21,107]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],0,[[]],[[]],[[]],0,0,0,0,[11],[11],[11],[11],[[157,135,108]],[[157,135,108,108]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[135,135],[158,158],[159,159],[157,157],[[]],[[]],[[]],[[]],[[135,135],75],[[157,108],25],[135,160],0,[157,130],[157,130],[[],135],[[],158],[[],159],[[],157],[23],[23],[23],[23],[23],[23],[23],[23],[[],[[24,[135]]]],[[],[[24,[158]]]],[[],[[24,[159]]]],[[],[[24,[157]]]],0,[[]],[[]],[[]],[[]],[23],[23],[23],[23],0,[157,161],0,[[135,135],25],[[],25],[[],25],[[135,26],27],[[]],[160,135],[[]],[[]],[[]],[[],30],[[157,135],[[16,[158]]]],[[157,135],[[16,[158]]]],0,[135],0,[[],23],[[],23],[[],23],[[],23],[[157,57,108]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[157],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[135,135],[[16,[75]]]],0,[108,46],0,0,0,[[157,108]],[[157,135]],[[157,135]],[157,158],0,[157,135],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[135,24],[158,24],[159,24],[157,24],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[157,135]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[11],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[88,88],[[]],0,0,0,0,[[87,21,88,89]],[23],[23],[[]],[23],0,[[88,26],27],[162,46],[[]],0,[[],23],0,[[]],0,[[],16],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,[[21,57]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],0,[163,164],[[163,87,21,88,89]],[23],[23],[[]],[23],0,[[]],[[],23],[[]],[[],16],[[]],[163,23],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,0,[45],[[]],[[]],[[]],[[]],[[],16],[[],16],0,[[],45],[23],[23],[[]],[23],[[]],[[],23],[[]],[[],16],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],48],[[45,87,21,88,89,165,105]],[[]],[[]],[[],16],[[]],[[]],[[]],0,0,[[],46],[73,[[16,[[167,[166]]]]]],[[21,168],65],[[21,67,73]],[[21,81,[16,[50]]]],[[21,81,49]],[[21,65,81,49,54,[16,[50]]],65],[[2,21,67,[16,[68]]]],[[2,21,67,[16,[68]]]],[41,35],0,0,0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[],169],[23],[23],[[],[[24,[169]]]],[[]],[23],[[]],[[],23],[[]],[[],16],[[]],[[87,21]],[[]],[[]],[8,50],[[]],[[]],[169,24],[[87,170,8,50]],[[],24],[[],24],[[],48],[[169,87,21]],[[]],[[]],[[],16],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[21,171]],[[],172],[23],[23],[[]],[23],[[]],[[21,36]],0,[[],23],[[]],[[21,171,36,37]],[[],16],[[]],0,[172],[[]],[[]],[[172,21,171]],[[]],[[]],[[21,37]],[31,46],[[21,173]],[[],24],[[],24],[[],48],[[172,21,171,36,37]],[[]],[[]],[[],16],[[172,36,37]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[]],[23],0,0,[[]],[[],23],[[]],[151,57],0,[[],16],[[]],[[]],[[]],[[]],[[]],0,[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,0,0,[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[106,106],[174,174],[[]],[[]],[[174,2,21,13],[[16,[106]]]],[174,[[16,[106]]]],0,[[],174],[23],[23],[23],[23],[[]],[[]],[23],[23],[[106,26],27],[[174,26],27],[[]],[[],106],[[]],[[174,13,21,23]],0,[[],23],[[],23],[[]],[[]],[[],16],[[],16],[[]],[[]],[174,[[16,[106]]]],[[174,2,21,13],[[16,[106]]]],[[174,33,13]],[[]],[[]],[[]],[[]],[[174,2,21,13],[[16,[106]]]],[174,[[16,[106]]]],[[]],[[]],[[]],[[]],[174,[[16,[106]]]],[174,[[16,[106]]]],0,[[174,2,21,13],[[16,[85]]]],0,[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[]],[[]],[[]],[[]],[[],16],[[],16],[[174,85]],[[]],[[]],[[]],[[]],[[]],[[]],[[13,85],46],[[21,86]],[[13,86],46],0,[[]],[[21,87,13,86]],[[]],[[]],[[]],[[],16],[[],16],[[175,21,87,13]],[[],175],[23],[23],[[],[[24,[175]]]],[[]],[23],[[87,21,[16,[108]],176,177]],[[]],[86,25],[[],23],[[]],[[21,87,108,13]],[[],16],[[]],[[]],[[]],[[]],[[]],[175,24],[[175,87,21,13]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[21,87,13,86]],[[]],[[]],0,0,0,[11],[11],[11],[[139,131,107,33]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[103,103],[139,139],[177,177],[[]],[[]],[[]],[[103,103],75],0,[[],177],[23],[23],[23],[23],[23],[23],[[],[[24,[103]]]],[[],[[24,[139]]]],[[],[[24,[177]]]],0,[[]],[[]],[[]],[23],[23],[23],0,[[103,103],25],[[],25],[[],25],[[103,26],27],[[]],[[]],[[]],[[],30],[103],0,[[],23],[[],23],[[],23],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[140,108],139],[[139,87,107]],[[]],[[]],[[]],[[]],[[]],[[]],[[103,103],[[16,[75]]]],[[],103],[[139,131]],[[]],[[]],[[]],[[]],[[]],[[]],[[139,87,21,114,101]],0,[[139,87,21]],[103,24],[139,24],[177,24],0,0,0,0,0,0,[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[177,87,21,178]],[[177,87,21,108,179,103,101]],[[177,87,21,180]],[[177,87,21,181]],[[177,87,21,182]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[11],[[87,21,107,31,131,139,183]],[[87,21,107,31,131,139,183]],[[87,21,139]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[184,184],[[]],[[87,131,139,107],[[183,[108,185]]]],[[],184],[[],185],[23],[23],[23],[23],[23],[23],[[]],[[]],[[]],[23],[23],[23],[[184,184],25],[[],25],[[],25],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[]],[[]],[[]],[184,25],[184,25],[[184,184],184],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[2,21,31,25]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[186,87,21,139],25],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[87,107],[[9,[139]]]],[[108,111,89],25],[[87,107],[[9,[139]]]],[[111,[9,[139]]],[[9,[139]]]],[[87,108,107,140],[[9,[108]]]],[[87,108,107],[[116,[140,[9,[108]]]]]],[[108,187,123],25],[[108,108,187,123],25],[[111,139,89],25],[[111,139,188,89],25],0,0,0,0,0,0,0,[[189,50,50],54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[190,127],127],[[189,54],50],[[191,87,21]],[[87,21]],0,[[],190],[[],189],[[],191],[23],[23],[23],[23],[23],[23],[23],[23],[[],[[24,[191]]]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[[191,87,13,21]],[[115,127],46],[[]],[[]],[[]],[[]],[51,50],[21],[[],23],[[],23],[[],23],[[],23],[[190,115],[[16,[118]]]],[[87,[51,[50]],[16,[119]]],190],[[190,117,21,49,49],65],[[]],[[]],[[]],[[]],[[190,117,21,192,49]],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[[51,[50]],119],190],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[117,118,21,192,49]],[[14,25,193,49,49,118],[[9,[194]]]],[[192,50,[51,[50]],195]],[[21,49,115,118],[[9,[194]]]],[[190,21,192,[51,[50]],115]],[[190,2,21,192,[51,[50]]]],[[190,50],[[16,[119]]]],[190,[[16,[50]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[191,24],[[191,87,13,65,192,131,21]],[[87,13,65,192,21,23,116,49,190,86]],[[87,13,14,86]],[[191,87,13,21]],[[191,87,13,65,192,196,131,21]],[[190,87]],[[190,127],127],0,0,[[190,50],[[16,[127]]]],[[190,117,21,192,49]],0,0,[[87,21]],[[191,87,13,65,192,21]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[51,113],119],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[190,127],[[16,[50]]]],0,[[190,50,50],[[16,[119]]]],0,0,0,[[]],[[]],[[]],[[]],0,[[],16],[[],16],[[],178],[23],[23],[[]],[23],[[]],[[],23],[[]],[[178,87,151]],[[178,87,151]],[[],16],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,0,[11],[[]],[[]],[[]],[[]],[[],16],[[],16],[197,197],[[]],[[],197],[23],[23],[[],[[24,[197]]]],[[]],[23],[[]],[[],23],[[]],[[],16],[[]],[[]],[[]],[[]],[[]],[197,24],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[87,21,197,178],65],[[]],[[]],[[]],0,0,0,0,0,0,0,[11],[[]],[[140,[47,[[188,[140]]]]]],[[140,[47,[[188,[140]]]]]],[[140,[47,[[188,[140]]]]]],[[]],[[]],[[]],[[123,33,108],[[188,[140]]]],[[],16],[[],16],[140,140],[[]],[[140,140],75],[[],140],[23],[23],[[],[[24,[140]]]],[[]],[23],[198,140],[140,198],[[140,188],25],[[140,140],25],[[],25],[[],25],[[140,26],27],[[140,26],27],[[]],[140,199],[[],23],[[]],[[],16],[[]],[140],[[]],[[]],[[140,140],[[16,[75]]]],[[]],[[]],[140,24],[[140,[47,[[188,[140]]]]]],[[]],[[],46],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[11],[11],[[200,53,55],50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[200,200],[201,201],[[]],[[]],[[201,200]],[23],[23],[23],[23],[[],[[24,[200]]]],[[],[[24,[201]]]],[[]],[[]],[23],[23],[[200,200],25],[200,50],[[200,26],27],[[201,26],27],[200,53],0,0,[[]],[[]],[202,[[16,[200]]]],[201,53],[[],23],[[],23],[[201,65,50],25],[[]],[[]],[200,25],[[201,14]],[[200,200,50],200],[[201,201,50],201],[[],16],[[],16],[[]],[[]],[200,50],0,0,[[]],[[]],[[]],[[]],[[200,49,58],59],[201,[[16,[50]]]],[200,53],[201,53],[[53,53],53],[[201,49,54,55]],[[201,55]],[[]],[[]],[[]],[[]],[200,24],[201,24],[[201,53]],[[201,53]],[201,200],[[]],[[]],[[201,55]],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[200,49],132],[[]],[[]],[[]],[[]],0,[[],16],[[],16],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[203,84,99]],[[84,99],84],[[203,99],203],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[],204],[[],179],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[23],[23],[23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,[[108,25],205],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[179,87,151,129,101]],[[179,108,[104,[[104,[144,53]]]],72,25]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[70,206],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[179,58,49,200,50],207],[[179,108],208],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[203,203],0,0,0,0,0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],[[],48],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[209,50,210,25]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[[]],[[]],[[]],[[]],[[]],[[205,50],210],0,[[],23],[[],23],[[],23],[[],23],[[],23],0,[[]],[[]],[[]],[[]],[[]],[207,57],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[58,49,200,211,204,50],207],[[212,209,213]],[[212,209]],[[212,209,214]],0,[[212,209]],[[212,209,204]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[209],[[207,210],53],0,0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[],48],[[],48],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[211,64,205,50]],[[]],[[]],[[]],[211,52],0,[[]],[[],16],[[],16],[[],211],[23],[23],[[]],[23],[[]],[[],23],[[]],0,[[],16],[[]],[211,[[9,[215]]]],0,[211,23],[[]],[[]],0,[211],[[]],[[]],0,0,[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,0,0,0,0,0,[[108,105,216,176,94],205],0,0,[[179,87,151,129,101]],0,0,0,0,[[]],[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[]],[23],[[]],[[],23],[[]],[[217,179,87,151,129,101]],[[],16],[[]],[[]],[[]],[[179,151,176,216,108,132,101],[[24,[218]]]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[]],[23],[[]],[[],23],[[]],[[219,179,87,151,129,101]],[[],16],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[179,108,132,205,220,[16,[221]],[16,[222]],[16,[223]],[16,[147]],94]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[]],[23],[[]],[[],23],[[]],[[224,179,87,151,129,101]],[[],16],[[]],[[]],[[]],[[179,176,216,108,132,94],[[24,[218]]]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[111,117,108],112],[[]],[23],[[]],[[],23],[[]],[[225,179,87,151,129,101]],[[],16],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[179,108,176,129,205,226,112,94]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[]],[23],[[]],[179],[[],23],[[]],[[227,179,87,151,129,101]],[[],16],[[]],[[]],[[]],[[216,179,87,176,108,132,101],[[24,[218]]]],[[179,87,72,132,205,228]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[]],[23],[[]],[[],23],[[]],[[229,179,87,151,129,101]],[[],16],[[]],[[]],[[]],[[179,151,176,216,108,132,94],[[24,[218]]]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[]],[23],[[]],[[],23],[[]],[[230,179,87,151,129,101]],[[],16],[[]],[[]],[[]],[[179,151,176,216,108,132,94],[[24,[218]]]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[]],[23],[[]],[[],23],[[]],[[231,179,87,151,129,101]],[[],16],[[]],[[]],[[]],[[179,151,176,216,108,132,87,101],[[24,[218]]]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[]],[23],[[]],[[],23],[[]],[[232,179,87,151,129,101]],[[],16],[[]],[[]],[[]],[[179,151,176,216,108,132,94],[[24,[218]]]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],16],[[],16],[23],[23],[[]],[23],[[]],[[],23],[[]],[[233,179,87,151,129,101]],[[],16],[[]],0,[[]],[[]],[[151,216,72],[[24,[218]]]],[[216,108],[[24,[57,218]]]],[[233,179,151,176,216,108,132,94],[[24,[218]]]],[[216,132],[[24,[57,218]]]],[216,[[24,[57,218]]]],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,[11],[[]],[[]],[[]],[202,64],[[]],[[],16],[[],16],[202,202],[[]],[23],[23],[[]],[23],0,[[]],[112,[[24,[61,46]]]],[202,[[16,[62]]]],[[],23],0,[[]],[[],16],[[]],[[]],[[]],0,0,[202,53],[[202,53],[[16,[53]]]],[[]],[[]],[[]],[[],24],[[],24],[[],48],[[202,58],[[16,[59]]]],[[]],[[]],[[],16],0,[[]],[202,64],0,[202,[[16,[62]]]],[202,[[16,[64]]]],[[]],[[]],0,0,0,0,0,0,0,0,[11],[11],[11],[[234,55],235],0,[234,50],[[[16,[53]]],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[208,208],[236,236],[234,234],[[]],[[]],[[]],[[],208],[[],234],[234,203],[[234,55],203],[23],[23],[23],[23],[23],[23],[[],[[24,[208]]]],[[],[[24,[234]]]],[[]],[[]],[[]],[23],[23],[23],[[208,208],25],[[236,236],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[234,31],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[234,87,21,157,108,103]],[208,24],[234,24],[[21,50,50,203]],0,0,[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[234,87,21,108,179,103,101]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[237,55,55,49]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[237,237],[238,238],[[]],[[]],[[179,239,239,21,101],[[9,[194]]]],[[],237],[[],238],[23],[23],[23],[23],[[],[[24,[237]]]],[[237,55,49]],[[]],[[]],[23],[23],[[]],[[]],[[],23],[[],23],[[]],[[]],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[87,108,65,239,[16,[50]]]],[[]],[[]],[[]],[[]],[237,24],[[192,239,50,31,235],[[35,[240]]]],[[87,21,108,239],[[9,[194]]]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[]],[[]],[[]],[[]],[[],16],[[],16],[[237,65,239,49,55]],[[87,21,234,108,179,49,103,101],65],[[55,55,87,21,234,108,179,49,103,101],65],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[241,241],[242,242],[243,243],[[]],[[]],[[]],[[],241],[[],243],[[52,243],201],[23],[23],[23],[23],[23],[23],[[],[[24,[241]]]],[[]],[[]],[[]],[23],[23],[23],0,0,[205,[[16,[200]]]],[[]],[[]],[[]],[[[16,[112]]],243],0,[[],23],[[],23],[[],23],[[241,200]],[[241,201]],[[]],[[]],[[]],0,[[],16],[[],16],[[],16],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[21,200,49,179,44,31,235]],[[87,241,108]],[[241,52]],0,[[]],[[]],[[]],[[]],[[]],[[]],[241,24],0,[[87,179,52]],0,0,0,0,0,0,[[200,200],50],0,[[]],[[]],[[]],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],16],[[],16],[[],16],[[241,65,52],201],[[87,21,234,108,103,179]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[44,240,211,244],35],[[44,240,49,211,244],[[35,[245]]]],[23],[23],[[]],[23],[[]],[[49,50]],[[],23],[[]],[[],16],[[]],[[]],[[]],[[246,247,49,50],245],[[]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[],180],[23],[23],[[]],[23],[[]],[[],23],[[]],[[180,87,151]],[[180,108,176,216],[[24,[218]]]],[[],16],[[]],[[]],[[]],[[]],[[]],0,[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],0,0,0,0,0,0,[11],[[]],[[]],[[]],[[]],[[],16],[[],16],[248,248],[[]],[23],[23],[[2,21,249]],[[]],[[21,250,4]],[[250,23],250],[23],[[21,25,4],251],[[248,248],25],[[],25],[[],25],[[]],[[],23],[[]],[248,25],[[],16],[[]],[[]],[[]],[[248,249],[[16,[23]]]],[[]],[[]],[[21,250,25,[16,[23]],248,248,248]],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[]],[[]],[[]],[[248,249,[16,[23]]]],0,0,0,0,0,0,0,0,0,0,[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[252,252],[253,253],[254,254],[255,255],[256,256],[[]],[[]],[[]],[[]],[[]],[[254,50],84],0,[67,252],[[],254],[[],255],[[],256],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[],[[24,[252]]]],[[],[[24,[253]]]],[[],[[24,[254]]]],[[],[[24,[255]]]],[[],[[24,[256]]]],0,[23,46],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[[253,253],25],[[255,255],25],[[256,256],25],[[],25],[[],25],[[252,26],27],[[253,26],27],[[253,26],27],[[254,26],27],[[255,26],27],[[255,26],27],[[256,26],27],[[]],[[]],[[]],[[]],[[]],0,[[21,252,78]],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[257,258],78],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[21,192,49,193]],[[256,21,55,78]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[252,259],[[259,[260]]]],0,[[21,252,67]],[252,24],[253,24],[254,24],[255,24],[256,24],[[87,21,252,[259,[260]],258]],0,[[87,21,252,67]],0,[[]],[[]],[[]],[[]],[[]],[[],46],[[],46],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[],48],[[],48],[[252,87,21]],[[254,2,21]],[[256,2,21]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[87,21,252,67]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[11],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[261,261],[[]],0,[[],181],[23],[23],[23],[23],[[]],[[]],[23],[23],0,[[261,26],27],[[]],[[]],[[],23],[[],23],[[]],[[]],0,[[181,87,151,262]],[[],16],[[],16],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[]],[[]],[[]],[[]],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[261,50],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[263,263],[262,262],[[]],[[]],0,0,0,[[],263],[[],262],[23],[23],[23],[23],[[],[[24,[263]]]],[[],[[24,[262]]]],[[]],[[]],[23],[23],0,[[262,26],27],[[]],[[]],[[87,261],[[16,[264]]]],[[],23],[[],23],[[]],[[]],[[262,108],25],[[262,31],25],0,[[21,31],265],[[],16],[[],16],[[]],[[]],0,[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[263,2,21]],[263,24],[262,24],[[87,21,263,[16,[23]]]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[]],[[]],[[]],[[]],[[],16],[[],16],[[262,87]],[[87,21,263,181],65],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[11],[11],[11],[11],[[182,31,[9,[266]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[267,267],[266,266],[268,268],[269,269],[[]],[[]],[[]],[[]],0,0,[[],182],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[[267,267],25],[[],25],[[],25],[[267,26],27],[[266,26],27],[[268,26],27],[[269,26],27],[[182,26],27],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[182,87,151]],[[182,87,151]],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[],48],[[],48],[[],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[11],[[]],[[]],[[]],[[]],[[],16],[[],16],[270,270],[[]],[[],270],[23],[23],[[],[[24,[270]]]],[[]],[23],[[]],[[],23],[[]],[[],16],[[]],[[]],[[]],[[]],[[]],[270,24],[[]],[[],24],[[],24],[[],48],[[]],[[]],[[],16],[[87,21,270,182],65],[[]],[[]],[[]],0,0,0,0,[[271,87,21,107]],[[271,139],103],[[]],[[]],[[2,21,25,25,4,4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],0,[[87,21,135,139,25]],[[],271],[23],[23],[23],[23],[[],[[24,[271]]]],[[]],[[]],[23],[23],[[155,103]],[[]],[[]],0,[[21,139]],[[],23],[[],23],[[]],[[]],[155,25],[[],16],[[],16],[[]],[[]],[271],0,[[87,107],271],[[271,87,107]],[[272,65]],[[]],[[]],[[]],[[]],[[271,103],[[16,[139]]]],[[]],[[]],[[]],[[]],[271,24],[[271,139],25],[[271,103]],[[271,103],[[16,[139]]]],0,[[271,87,21,103]],[[271,103],[[16,[139]]]],[[87,21,271,49,103,23]],[[87,21,139,101]],0,0,[[271,108],[[9,[103]]]],[272,133],[[271,87,21]],0,[[],24],[[],24],[[],24],[[],24],[[],48],[[],48],[[272,21]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[271,21,87]],[[2,21,25,25],65],0,[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"CreationContext"],[3,"ReUi"],[4,"HardwareTier"],[8,"FnOnce"],[3,"Box"],[6,"Result"],[3,"StartupOptions"],[4,"LogMsg"],[3,"Vec"],[3,"WgpuConfiguration"],[3,"Private"],[3,"App"],[3,"Blueprint"],[3,"Context"],[3,"Frame"],[4,"Option"],[3,"Visuals"],[4,"TimeControlCommand"],[4,"PanelSelection"],[3,"AppOptions"],[3,"Ui"],[3,"AppState"],[15,"usize"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Storage"],[3,"Receiver"],[15,"u64"],[15,"str"],[8,"Read"],[3,"LogDb"],[3,"Path"],[6,"Result"],[3,"WgpuResourcePoolStatistics"],[3,"DataStoreStats"],[8,"AsRef"],[8,"Any"],[4,"Command"],[3,"PathBuf"],[3,"ApplicationId"],[3,"Profiler"],[3,"RenderContext"],[3,"ComponentUiRegistry"],[3,"String"],[8,"Into"],[3,"TypeId"],[3,"Rect"],[15,"f32"],[3,"RangeInclusive"],[3,"BoundingBox"],[3,"Vec3"],[3,"Pos2"],[3,"Vec2"],[3,"Error"],[8,"Iterator"],[3,"Vec2"],[3,"Ray3"],[3,"Rot2"],[3,"Quat"],[3,"Affine3A"],[3,"Conformal3"],[3,"IsoTransform"],[3,"Response"],[3,"Caches"],[3,"ClassicTensor"],[3,"TensorStats"],[3,"MeshCache"],[4,"MeshSourceData"],[3,"LoadedMesh"],[3,"Arc"],[4,"DynamicImage"],[3,"ImageCacheKey"],[4,"Ordering"],[3,"ImageCache"],[4,"TensorDataMeaning"],[3,"ColorImage"],[3,"CachedImage"],[8,"AsDynamicImage"],[3,"TensorImageView"],[3,"Clipboard"],[3,"Clipboard"],[3,"Color32"],[3,"ItemCollection"],[4,"Item"],[3,"ViewerContext"],[4,"UiVerbosity"],[3,"LatestAtQuery"],[4,"Mesh3D"],[3,"EncodedMesh3D"],[4,"MeshFormat"],[3,"RawMesh3D"],[3,"OptionalSpaceViewEntityHighlight"],[3,"SelectionState"],[4,"HoveredSpace"],[4,"SelectionHighlight"],[4,"HoverHighlight"],[3,"InteractionHighlight"],[3,"SpaceViewEntityHighlight"],[3,"SpaceViewHighlights"],[3,"EntityPathHash"],[3,"SpaceViewId"],[6,"HashMap"],[3,"InstanceKey"],[3,"HistoricalSelection"],[3,"SpaceInfoCollection"],[3,"EntityPath"],[3,"SpaceInfo"],[4,"UnreachableTransform"],[3,"EntityDb"],[3,"ViewCoordinates"],[3,"TimelineAxis"],[3,"TimeInt"],[4,"TimeType"],[3,"BTreeMap"],[3,"TimeControl"],[3,"TimeRangeF"],[3,"TimeView"],[3,"TimeState"],[4,"Looping"],[4,"PlayState"],[3,"Timeline"],[3,"TimesPerTimeline"],[3,"TimeRange"],[3,"BTreeSet"],[3,"TimeReal"],[15,"i64"],[3,"TransformCache"],[3,"EntityPropertyMap"],[3,"EntityTree"],[3,"Mat4"],[4,"WidgetText"],[3,"ComponentPath"],[3,"DataBlueprintGroupHandle"],[3,"RecordingConfig"],[3,"InstancePath"],[3,"MsgId"],[3,"SpaceView"],[4,"ViewCategory"],[3,"RemoteViewerApp"],[3,"ResolvedClassDescription"],[3,"ResolvedAnnotationInfo"],[3,"KeypointId"],[15,"u16"],[3,"Annotations"],[3,"ClassId"],[4,"DefaultColor"],[3,"AnnotationMap"],[3,"MISSING_ANNOTATIONS"],[3,"SceneQuery"],[3,"SpaceMakeInfo"],[4,"LayoutSplit"],[4,"SplitDirection"],[3,"Tree"],[3,"NodeIndex"],[3,"DataBlueprintTree"],[3,"DataBlueprintGroup"],[3,"DataBlueprints"],[3,"KeyData"],[6,"IntSet"],[3,"ComponentBundle"],[3,"EntityComponentWithInstances"],[3,"ComponentName"],[3,"ComponentWithInstances"],[15,"u8"],[3,"Rgba"],[6,"RgbImage"],[3,"EventLogView"],[3,"TableRow"],[3,"MemoryLimit"],[3,"MemoryPanel"],[3,"TrackingStatistics"],[3,"SelectionHistory"],[3,"SelectionPanel"],[3,"EntityProperties"],[3,"ViewState"],[3,"SceneBarChart"],[3,"SceneSpatial"],[3,"SceneTensor"],[3,"SceneText"],[3,"SceneTimeSeries"],[6,"IntMap"],[4,"CanAddToSpaceView"],[3,"EntityAddInfo"],[3,"SpaceViewEntityPicker"],[3,"DataStore"],[3,"EnumSet"],[3,"BallScatterer"],[3,"TimeRangesUi"],[3,"TimePanel"],[3,"Painter"],[3,"FontId"],[4,"Shape"],[3,"Stroke"],[4,"EntityPathPart"],[3,"BarChartState"],[15,"u32"],[3,"Icon"],[3,"Eye"],[3,"OrbitEye"],[3,"SpaceCamera3D"],[3,"Size"],[3,"SceneSpatialUiData"],[3,"InstancePathHash"],[3,"MeshId"],[3,"PickingResult"],[4,"SpatialNavigationMode"],[3,"PickingState"],[3,"PickingRayHit"],[3,"SceneSpatialPrimitives"],[3,"PickingContext"],[3,"LineStripSeriesBuilder"],[3,"PointCloudBuilder"],[3,"MeshInstance"],[3,"EntityView"],[3,"Arrows3DPart"],[4,"QueryError"],[3,"Boxes2DPart"],[4,"Rect2D"],[3,"ColorRGBA"],[3,"Radius"],[3,"Label"],[3,"Boxes3DPart"],[3,"CamerasPart"],[3,"Pinhole"],[3,"ImagesPart"],[3,"Rgba"],[3,"Lines2DPart"],[3,"Lines3DPart"],[3,"MeshPart"],[3,"Points2DPart"],[3,"Points3DPart"],[3,"ViewSpatialState"],[3,"AutoSizeConfig"],[4,"AutoSizeUnit"],[3,"View2DState"],[4,"ZoomState2D"],[3,"RectTransform"],[3,"TargetConfiguration"],[3,"View3DState"],[3,"EyeInterpolation"],[3,"SpaceSpecs"],[4,"ScreenBackground"],[3,"PaintCallback"],[3,"CommandBuffer"],[3,"ViewBuilder"],[4,"DragDropAddress"],[3,"DimensionMapping"],[3,"Id"],[3,"InnerResponse"],[3,"ViewTensorState"],[4,"ColorMap"],[3,"ColorMapping"],[4,"TextureScaling"],[3,"TextureSettings"],[6,"ArrayView2"],[8,"Fn"],[6,"ArrayViewD"],[8,"Copy"],[3,"TextEntry"],[3,"ViewTextFilters"],[3,"ViewTextState"],[3,"TimePoint"],[3,"RichText"],[3,"PlotPoint"],[3,"PlotPointAttrs"],[4,"PlotSeriesKind"],[3,"PlotSeries"],[3,"ViewTimeSeriesState"],[3,"Viewport"],[3,"TabViewer"],[13,"TwoD"],[13,"ThreeD"],[13,"TopBottom"],[13,"LeftRight"],[8,"DataUi"],[13,"Compatible"],[13,"No"],[3,"Segment"],[4,"Label2DTarget"],[3,"MeshSource"],[3,"Image"],[3,"Label2D"],[3,"Label3D"],[4,"AdditionalPickingInfo"],[8,"ScenePart"],[13,"Scaled"]]},\
"re_web_server":{"doc":"Serves the web viewer wasm/html.","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11],"n":["MakeSvc","Svc","WebServer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call","fmt","from","from","from","into","into","into","new","poll_ready","poll_ready","serve","server","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["re_web_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Hosts the Web Viewer WASM+HTML","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,1,8,2,1,8,2,1,2,2,1,8,2,1,8,2,8,1,2,8,8,1,8,2,1,8,2,1,8,2],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1],[[2,[4,[3]]]],[[2,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[7,8],[[1,9],[[11,[10]]]],[[2,9],[[11,[10]]]],[8,12],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],13],[[],13],[[],13]],"p":[[3,"MakeSvc"],[3,"Svc"],[3,"Body"],[3,"Request"],[3,"Formatter"],[6,"Result"],[15,"u16"],[3,"WebServer"],[3,"Context"],[4,"Result"],[4,"Poll"],[6,"Result"],[3,"TypeId"]]},\
"re_ws_comms":{"doc":"Communications between server and viewer.","t":[3,17,17,17,6,3,0,5,5,5,12,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,11,11,11,11,11,11,11,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11],"n":["Connection","DEFAULT_WS_SERVER_PORT","PREFIX","PROTOCOL","Result","Server","client","decode_log_msg","default_server_url","encode_log_msg","listener","server","Connection","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","from","init","into","lossless_try_into","lossy_into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","viewer_to_server","vzip","wrapping_as","wrapping_cast_from","Server","accept_connection","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","deref_mut","drop","from","handle_connection","init","into","listen","listener","lossless_try_into","lossy_into","new","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","to_broadcast_stream","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","vzip","wrapping_as","wrapping_cast_from"],"q":["re_ws_comms","","","","","","","","","","","","re_ws_comms::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","re_ws_comms::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents a connection to the server. Disconnects on drop.","","","","","","","","","","","The server is a pub-sub architecture.","Represents a connection to the server. Disconnects on drop.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Connect viewer to server","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Accept new connections forever","","","","Start a pub-sub server listening on the given port","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,19,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,19,19],"f":[0,0,0,0,0,0,0,[[],[[2,[1]]]],[[],3],[1,[[5,[4]]]],0,0,0,[[]],[[]],[[]],[[]],[[],6],[[],6],[7],[7],[7],[[]],[[],7],[[]],[[],6],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],9],[[]],[[]],[[3,[0,[10,11]]],[[2,[12]]]],[[]],[[]],[[]],0,[[[14,[13]],15,16,[13,[[17,[[5,[13]]]]]]]],[[]],[[]],[[]],[[]],[[],6],[[],6],[7],[7],[7],[[]],[[[14,[13]],16,[13,[[17,[[5,[13]]]]]]],18],[[],7],[[]],[[19,[20,[1]]],21],0,[[],6],[[]],[22,[[21,[19]]]],[[]],[[]],[[]],[[]],[[[20,[1]],[13,[[17,[[5,[13]]]]]]],[[14,[13]]]],[[],8],[[],8],[[],9],[[]],[[]],[[]],[[]],[[]]],"p":[[4,"LogMsg"],[6,"Result"],[3,"String"],[15,"u8"],[3,"Vec"],[4,"Option"],[15,"usize"],[4,"Result"],[3,"TypeId"],[8,"Fn"],[8,"Send"],[3,"Connection"],[3,"Arc"],[3,"Sender"],[4,"SocketAddr"],[3,"TcpStream"],[6,"Mutex"],[6,"Result"],[3,"Server"],[3,"Receiver"],[6,"Result"],[15,"u16"]]},\
"rerun":{"doc":"The main Rerun binary.","t":[13,4,3,4,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,12,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,12,11,11,11,11,11,11,11,11,12],"n":["Analytics","AnalyticsCommands","Args","CallSource","Clear","Cli","Commands","Config","Details","Disable","Email","Enable","Python","__clone_box","__clone_box","__clone_box","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","command","command_for_update","commands","connect_to_ws_url","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop_at_latency","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","has_subcommand","host_web_viewer","init","init","init","init","into","into","into","into","load_file_to_channel","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","memory_limit","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parse_max_latency","port","profile","run","run_analytics","run_impl","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","upcast","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","url_or_path","vzip","vzip","vzip","vzip","wake_up_ui_thread_on_each_msg","web_viewer","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","email"],"q":["rerunrerun::AnalyticsCommands"],"d":["Configure the behaviour of our analytics.","","The Rerun Viewer and Server","","Deletes everything related to analytics.","","","Prints the current configuration.","Prints extra information about analytics.","Disable analytics.","Associate an email address with the current user.","Enable analytics.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set a maximum input latency, e.g. “200ms” or “10s”.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","An upper limit on how much memory the Rerun Viewer should …","","","","","","","","","","What TCP port do we listen to (for SDK:s to connect to)?","Start with the puffin profiler running.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Either a path to a <code>.rrd</code> file to load, or a websocket url …","","","","","This wakes up the ui thread each time we receive a new …","Start the viewer in the browser (instead of locally). …","","","","","","","","",""],"i":[4,0,0,0,5,6,0,5,5,5,5,5,6,4,5,6,7,7,4,5,4,5,7,4,5,6,7,4,5,6,7,4,5,6,7,4,5,6,7,4,5,6,7,4,5,6,4,5,6,4,5,6,7,7,7,0,7,4,5,6,7,4,5,6,7,4,5,6,7,4,5,6,7,6,6,6,7,4,5,6,7,4,5,6,7,4,5,7,4,5,7,4,5,0,7,4,5,6,7,4,5,6,0,7,4,5,6,7,4,5,6,7,7,4,5,6,7,4,5,6,0,7,7,0,0,0,7,4,5,6,7,4,5,6,4,5,6,7,4,5,6,7,4,5,6,7,4,5,6,7,4,5,6,7,4,5,6,7,4,5,6,7,4,5,7,4,5,7,7,4,5,6,0,7,7,4,5,6,7,4,5,6,30],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[],2],[[],2],0,[[7,8,9,10],11],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[12],[12],[12],[12],0,[[6,6],13],[[],13],[[],13],[[7,14],15],[[4,14],15],[[5,14],15],[[6,14],15],[[]],[[]],[[]],[[]],[16,[[18,[7,17]]]],[16,[[18,[4,17]]]],[16,[[18,[5,17]]]],[16,[[18,[7,17]]]],[16,[[18,[4,17]]]],[16,[[18,[5,17]]]],[[],[[3,[19]]]],[20,13],[20,13],[10,11],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[21,[[11,[[23,[22]]]]]],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[10]]],24],0,0,[6,[[11,[25]]]],[5,[[18,[26]]]],[[6,7],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[7,16],[[18,[17]]]],[[4,16],[[18,[17]]]],[[5,16],[[18,[17]]]],[[7,16],[[18,[17]]]],[[4,16],[[18,[17]]]],[[5,16],[[18,[17]]]],0,[[]],[[]],[[]],[[]],[[[23,[28]],29],[[23,[28]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0],"p":[[3,"Private"],[3,"Command"],[4,"Option"],[4,"Commands"],[4,"AnalyticsCommands"],[4,"CallSource"],[3,"Args"],[3,"StartupOptions"],[3,"Profiler"],[3,"String"],[6,"Result"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[15,"str"],[3,"Path"],[4,"LogMsg"],[3,"Receiver"],[15,"f32"],[15,"u8"],[4,"CliError"],[3,"TypeId"],[8,"Send"],[3,"Context"],[13,"Email"]]},\
"rerun_bindings":{"doc":"The Rerun Python Log SDK.","t":[7,0,0,5,5,5,3,6,13,13,4,3,13,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,5,5,5,11,11,5,5,5,5,5,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["GLOBAL","arrow","python_bridge","array_to_rust","build_chunk_from_components","get_registered_component_names","AnnotationInfoTuple","ClassDescriptionTuple","ClassId","Depth","TensorDataMeaning","ThreadInfo","Unknown","__clone_box","arguments","authkey","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","connect","convert_color","default","default_recording_id","deref","deref","deref","deref_mut","deref_mut","deref_mut","disconnect","downcast","downcast","downcast","drop","drop","drop","extract","extract","extract","extract","fmt","from","from","from","get_recording_id","init","init","init","init","into","into","into","into_py","items_iter","log_annotation_context","log_arrow_msg","log_cleared","log_image_file","log_mesh_file","log_meshes","log_pinhole","log_rigid3","log_transform","log_unknown_transform","log_view_coordinates","log_view_coordinates_up_handedness","log_view_coordinates_xyz","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","main","now","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parse_entity_path","rerun_bindings","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","save","serve","set_recording_id","set_thread_time","set_time","set_time_nanos","set_time_seconds","set_time_sequence","show","shutdown","thread_now","time","time_point","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_object_raw","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","upcast","vzip","vzip","vzip","with","wrap","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from"],"q":["rerun_bindings","","","rerun_bindings::arrow","","","rerun_bindings::python_bridge","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Methods for handling Arrow datamodel log ingest","","Perform conversion between a pyarrow array to arrow2 types.","Build a <code>LogMsg</code> and vector of <code>Field</code> given a ‘**kwargs’…","","","","","","","Thread-local info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Disconnect from remote server (if any).","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Log an image file given its path on disk.","","","","","","","","","","","","","","","","","","","","","","","","","The python module is called “rerun_bindings”.","","","","","","","","Serve a web-viewer.","","","","","","Set the current time globally. Used for all subsequent …","Show the buffered log data.","","","","The current time, which can be set by users.","","","","","","","","","","","","","","","","","","","","","","","","Get access to the thread-local <code>ThreadInfo</code>.","","","","","","",""],"i":[0,0,0,0,0,0,0,0,14,14,0,0,14,14,14,0,16,14,21,16,14,21,16,14,21,16,14,21,16,14,21,16,14,21,14,14,0,0,16,0,16,14,21,16,14,21,0,16,14,21,16,14,21,14,14,14,21,14,16,14,21,0,0,16,14,21,16,14,21,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,16,14,21,16,14,21,0,16,16,14,21,16,14,21,0,0,16,14,21,16,14,21,0,0,0,16,16,0,0,0,0,0,16,0,16,14,16,14,21,16,14,21,16,14,21,14,16,14,21,16,14,21,16,14,21,16,14,21,16,14,16,14,21,16,14,21],"f":[0,0,0,[[1,[3,[2]]],4],[[5,6,7],[[4,[8]]]],[9,[[4,[6]]]],0,0,0,0,0,0,0,[10],[9,[[11,[1]]]],[9,[[13,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[14,14],[[]],[[[3,[15]]],4],[[[13,[12]]],4],[[],16],[9,17],[18],[18],[18],[18],[18],[18],[[]],[[]],[[]],[[]],[18],[18],[18],[1,[[4,[14]]]],[1,[[20,[19]]]],[1,[[4,[14]]]],[1,[[4,[21]]]],[[14,22],23],[[]],[[]],[[]],[[],[[4,[15]]]],[[15,[3,[24]]]],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[14,9],25],[[],26],[[2,13,27],4],[[2,6,27],4],[[2,27],4],[[2,24,[3,[2]],27],4],[[2,2,[29,[28]],27],4],[[2,[13,[[30,[28]]]],[13,[[3,[[30,[31]]]]]],[13,[[3,[[30,[28]]]]]],[13,[[3,[[30,[28]]]]]],27],4],[[2,27],4],[[2,27,32,27],4],[[2,33,27],4],[[2,27],4],[[2,34,27],4],[[2,2,27,27],4],[[2,2,[3,[27]],27],4],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[[13,[15]]],[[4,[12]]]],[16,7],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[4,[5]]]],[[9,35],4],[[]],[[]],[[]],[[]],[[]],[[]],[2,4],[[],4],[2,4],[[36,[3,[37]]]],[[16,36,[3,[37]]]],[[2,[3,[38]]]],[[2,[3,[39]]]],[[2,[3,[38]]]],[[],4],[9],[[],7],[27,7],0,[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],40],[[],40],[[],40],[9,41],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[42],[9,[[20,[[11,[1]],19]]]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"PyAny"],[15,"str"],[4,"Option"],[6,"PyResult"],[3,"EntityPath"],[3,"PyDict"],[3,"TimePoint"],[4,"LogMsg"],[3,"Python"],[3,"Private"],[3,"Py"],[15,"u8"],[3,"Vec"],[4,"TensorDataMeaning"],[3,"String"],[3,"ThreadInfo"],[3,"RecordingId"],[15,"usize"],[3,"PyErr"],[4,"Result"],[3,"AnnotationInfoTuple"],[3,"Formatter"],[6,"Result"],[3,"PathBuf"],[6,"PyObject"],[3,"PyClassItemsIter"],[15,"bool"],[15,"f32"],[6,"PyReadonlyArray2"],[6,"PyReadonlyArray1"],[15,"u32"],[6,"Quaternion"],[4,"Transform"],[3,"ViewCoordinates"],[3,"PyModule"],[3,"Timeline"],[3,"TimeInt"],[15,"i64"],[15,"f64"],[3,"TypeId"],[3,"PyTypeObject"],[8,"FnOnce"]]},\
"rerun_sdk":{"doc":"The Rerun SDK","t":[3,3,3,3,13,4,18,13,3,3,3,13,3,8,3,3,13,13,3,3,13,13,13,13,13,13,4,13,13,13,13,18,18,13,3,13,3,3,13,3,3,4,18,18,18,3,4,4,3,13,13,3,3,3,4,18,18,18,13,13,18,18,18,13,3,13,3,3,13,3,3,13,3,3,4,13,3,13,18,3,3,13,8,3,4,3,3,13,3,4,4,3,3,8,3,3,13,3,3,4,3,4,13,13,13,13,13,13,3,3,3,3,13,13,13,13,13,13,13,13,13,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,10,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,11,11,11,11,10,11,11,11,11,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,12,12,12,12,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,11,12,11,11,12,12,11,12,11,11,11,11,11,11,12,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,12,12,12,12,12,11,11,12,12,12,12,2,2,2,2,5,13,13,13,3,4,13,13,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["AnnotationContext","AnnotationInfo","ApplicationId","Arrow3D","ArrowMsg","Axis3","BEGINNING","BeginRecordingMsg","Box3D","ClassDescription","ClassId","ClassId","ColorRGBA","Component","ComponentBundle","ComponentName","Depth","Encoded","EncodedMesh3D","EntityPath","EntityPathOpMsg","F32","F64","Glb","Gltf","Goodbye","Handedness","I16","I32","I64","I8","IDENTITY","IDENTITY","IllegalInstanceKey","InstanceKey","JPEG","KeypointId","Label","Left","LineStrip2D","LineStrip3D","LogMsg","MAX","MAX","MIN","Mat3x3","Mesh3D","MeshFormat","MeshId","MismatchedRowLengths","MoreThanOneRow","MsgBundle","MsgId","MsgSender","MsgSenderError","NEGATIVE_X","NEGATIVE_Y","NEGATIVE_Z","Negative","Obj","POSITIVE_X","POSITIVE_Y","POSITIVE_Z","PackingError","Pinhole","Pinhole","Point2D","Point3D","Positive","Quaternion","Radius","Raw","RawMesh3D","RecordingId","Rect2D","Right","Rigid3","Rigid3","SPLAT","Scalar","ScalarPlotProps","Sequence","SerializableComponent","Session","Sign","SignedAxis3","Size3D","SplattedInstanceKeys","Tensor","TensorData","TensorDataMeaning","TensorDimension","TensorId","TensorTrait","TextEntry","Time","Time","TimeInt","TimePoint","TimeType","Timeline","Transform","U16","U32","U64","U8","Unknown","Unknown","Vec2D","Vec3D","Vec4D","ViewCoordinates","X","XCYCW2H2","XCYCWH","XYWH","XYXY","Y","YXHW","YXYX","Z","ZERO","ZERO","ZERO","ZERO","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","abs","add","add","add","add_assign","add_assign","albedo_factor","application_id","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_deserialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","arrow_serialize","as_f32","as_f64","as_i64","as_ref","as_slice","as_str","as_u128","as_vec3","aspect_ratio","axis","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","az","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","child_from_parent","class_map","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","components","data","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","data_type","default","default","default","default","default","default","default","default","default","default","default","default","default","default_server_addr","depth","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe","describe","describe_short","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","entity_path","entity_path","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","external","field","find_component","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focal_length","focal_length_in_pixels","format","format","format","format_range","format_time","format_time_range","forward","fov_y","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_body","from_dim","from_i64","from_iter","from_iter","from_ns_since_epoch","from_right_handed","from_rub","from_seconds_since_epoch","from_str","from_str","from_str","from_u64","from_up_and_handedness","from_us_since_epoch","from_uuid","from_xywh","full_name","get","get","get","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","global","global_session","handedness","has_sent_begin_recording_msg","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash64","height","height","id","id","id","id","image_from_cam","index","index","index","indices","info","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert","instanced","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_abolute_date","is_child_of","is_descendant_of","is_empty","is_official_example","is_root","is_shaped_like_an_image","is_shaped_like_an_image","is_specific","is_splat","is_timeless","is_timeless","is_vector","is_vector","iter","iter","join","keypoint_connections","keypoint_map","label","last","len","lerp","level","log_time","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossless_try_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","lossy_into","meaning","meaning","meaning","mesh_id","mesh_id","mesh_id","meter","msg_id","msg_sender","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","named","nanos_since_epoch","nb_components","nb_instances","nb_instances","nb_instances","nb_rows","nb_rows","neg","new","new","new","new","new","new","new","new","new","new","new","new","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_array","new_child_from_parent","new_empty","new_from_boxed","new_parent_from_child","new_sequence","new_temporal","normals","now","num_dim","num_dim","num_triangles","origin","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","parent","parent_from_child","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","positions","principal_point","random","random","random","random","recording_id","remove","resolution","resolution","right","root","rotation","sanity_check","sanity_check","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","scattered","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","session","shape","shape","shape","short_name","short_string","sign","size","specific_index","splatted","sub","sub","sub","sub","sub_assign","sum","tensor_id","time_point","timeless","timeless","timelines","timepoint","times","to_array","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rub","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","tokio_rt","top_left_corner","transform","translation","try_append_component","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown","unnamed","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","up","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","value","value_boxed","value_list","vector","viewer","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","w","w","width","width","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","x","x","x","x","x","x","x","x","y","y","y","y","y","y","y","y","z","z","z","z","z","z","re_log","re_log_types","re_memory","re_sdk_comms","global_session","IllegalInstanceKey","MismatchedRowLengths","MoreThanOneRow","MsgSender","MsgSenderError","PackingError","SplattedInstanceKeys","az","az","borrow","borrow","borrow_mut","borrow_mut","bundle_from_iter","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","entity_path","fmt","fmt","from","from","from","init","init","instanced","into","into","into_messages","lossless_try_into","lossless_try_into","lossy_into","lossy_into","nb_instances","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","provide","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","send","source","splatted","timeless","timepoint","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","with_component","with_splat","with_splat_opt","with_time","with_timeless","with_timepoint","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Buffered","Remote","Sender","Session","WebViewer","application_id","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","connect","default","default","deref","deref","deref_mut","deref_mut","disconnect","downcast","downcast","drain_log_messages_buffer","drop","drop","drop_msgs_if_disconnected","flush","from","from","has_sent_begin_recording_msg","init","init","into","into","is_connected","is_official_example","lossless_try_into","lossless_try_into","lossy_into","lossy_into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","recording_id","recording_id","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","send","send","send_path_op","sender","serve","set_application_id","set_recording_id","tokio_rt","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","upcast","upcast","vzip","vzip","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","show"],"q":["rerun_sdkrerun_sdk::external","","","","rerun_sdk::global","rerun_sdk::msg_sender","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun_sdk::session","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rerun_sdk::viewer"],"d":["The <code>AnnotationContext</code> provides additional information on …","Information about an Annotation.","The user-chosen name of the application doing the logging.","A 3D Arrow","Log an entity using an <code>ArrowMsg</code>.","","The beginning of time.","A new recording has begun.","A 3D bounding box represented by it’s half-lengths","The description of a semantic Class.","A 16-bit ID representing a type of semantic class.","The data is an annotated <code>crate::component_types::ClassId</code> …","An RGBA color tuple.","","A <code>ComponentBundle</code> holds an Arrow component column, and its …","The name of an entity component, e.g. <code>pos</code> or <code>color</code>.","Image data interpreted as depth map.","","Compressed/encoded mesh format","<code>camera / &quot;left&quot; / points / #42</code>","Server-backed operation on an <code>EntityPath</code>.","","","","","Sent when the client shuts down the connection.","","","","","","","","","A number used to specify a specific instance in an entity.","","A 16-bit ID representing a type of semantic keypoint …","A String label component","","A Line Strip of 2D points","A Line Strip of 3D points","The most general log message sent from the SDK to the …","All ones.","","","A 3x3 column-major Matrix made up of 3 Vecs","A Generic 3D Mesh.","","A unique id per <code>Mesh3D</code>.","","","A <code>MsgBundle</code> holds data necessary for composing a single …","A unique id per <code>crate::LogMsg</code>.","Facilitates building and sending component payloads with …","","","","","","","","","","","Camera perspective projection (a.k.a. intrinsics).","The parent is some local camera space, the child an image …","A point in 2D space.","A point in 3D space.","","A Quaternion represented by 4 real numbers.","A Radius component","","A raw “triangle soup” mesh.","A unique id per recording (a stream of <code>LogMsg</code>es).","A rectangle in 2D space.","","A proper rigid 3D transform, i.e. a rotation and a …","For instance: the parent is a 3D world space, the child a …","A special value indicating that this [<code>InstanceKey]</code> is …","A double-precision scalar.","Additional properties of a scalar when rendered as a plot.","Used e.g. for frames in a film.","A trait to identify any <code>Component</code> that is ready to be …","","","","","","A Multi-dimensional Tensor","Flattened <code>Tensor</code> data payload","","Flattened <code>Tensor</code> data payload","A unique id per <code>Tensor</code>.","","A text entry component, comprised of a text body and its …","A date-time represented as nanoseconds since unix epoch","Normal wall time.","Either nanoseconds or sequence numbers.","A point in time.","The type of a <code>TimeInt</code>.","A time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …","A transform between two spaces.","","","","","Default behavior: guess based on shape","We don’t know the transform, but it is …","A vector in 2D space.","A vector in 3D space.","A vector in 4D space.","How we interpret the coordinate system of an entity/space.","","[x_center, y_center, width/2, height/2]","[x_center, y_center, width, height]","[x, y, w, h], with x,y = left,top.","[x0, y0, x1, y1], with x0,y0 = left,top and x1,y1 = …","","[y, x, h, w], with x,y = left,top.","[y0, x0, y1, x1], with x0,y0 = left,top and x1,y1 = …","","All zeroes.","","","The recording id:s given to recordings that don’t have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Albedo factor applied to the final color of the meshata payload","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the datatype of the bundled component, discarding …reate a <code>Field</code> for this <code>Component</code>","Returns the index of <code>component</code> in the bundle, if it exists.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Focal length.","X &amp; Y focal length in pixels.","Human-readable formatting","","","","","Returns a formatted string of <code>time_range</code> on this <code>Timeline</code>.","","Field of View on the Y axis, i.e. the angle between top …","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Returns a matrix that translates RUB to this coordinate …","","","","","","Choses a coordinate system based on just an up-axis.","","","","Includes namespace, e.g. <code>rerun.color</code> or <code>ext.confidence</code>.","","","","","","","","","","","","","","","","","","","","","Access a global <code>Session</code> singleton for convenient logging.","","","","","","","","","","","Precomputed hash of the string.","","","","","","","","","","","Precomputed 64-bit hash.","","","","","","<code>ClassId</code> or <code>KeypointId</code> to which this annotation info …","Column-major projection matrix.","","","","Optionally, the flattened indices array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All the instanced component collections that have been …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","If true, this time is likely relative to unix epoch.","Is this a direct child of the other path.","Is this a strict descendant of the given path.","","","","","","Are we referring to a specific instance of the entity …","Are we referring to all instances of the entity (e.g. all …","","","","","","","","Semantic connections between two keypoints.","","","","Number of parts","","","The log time timeline to which all API functions will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The per-element data meaning Used to indicated if the data …","","","","Reciprocal scale of meter unit for depth images","A unique id per <code>crate::LogMsg</code>.","","The name of the component","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optional name of the dimension, e.g. “color” or “…","","","","","Returns the number of component collections in this …","Returns the number of <em>instances</em> for a given <code>row</code> in the …","Returns the number of <em>instances</em> for a given <code>row</code> in the …","The expected number of instances for each row of each …","Returns the number of <em>rows</em> in this bundle, i.e. the length …","Returns the number of <em>rows</em> for each component collections …","","","","","","","","","","Create a new <code>MsgBundle</code> with a pre-built Vec of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>ComponentBundle</code> from a boxed <code>Array</code>. The <code>Array</code> …","","","","Optionally, the flattened normals array for this mesh.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return <code>None</code> if root.","","","","","","","","","","","","","","","","","","","The flattened positions array of this mesh.","Principal point of the pinhole camera, i.e. the …","","","","","","","","Pixel resolution (usually integers) of child image space. …","","","How is the child rotated?","Returns an error if this does not span all three …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dimensionality and length","Excludes the rerun namespace, so you’ll get <code>color</code> but …","A shortened string representation of the message id.","","Number of elements on this dimension. I.e. size-1 is the …","Returns <code>None</code> if splat, otherwise the index.","All the splatted components that have been appended to …","","","","","","","Unique identifier for the tensor","","Logging to this time means the data will show upp in all …","If true, all timestamp data associated with this message …","","All the different timestamps for this message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a matrix that translates this coordinate system to …","","","","","","","","","","","","","","","","","four columns of an affine transformation matrix","Translation to parent from child.","Try to append a collection of <code>Component</code> onto the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract a <code>MsgBundle</code> from an <code>ArrowMsg</codeet the <code>ComponentBundle</code> value as a boxed <code>Array</code>.","Get the <code>ComponentBundle</code> valueccess a global <code>Session</code> singleton for convenient logging.","","","","Facilitates building and sending component payloads with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","All the instanced component collections that have been …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","The expected number of instances for each row of each …","Starts a new <code>MsgSender</code> for the given entity path.","","","","","","","","","","Consumes, packs, sanity checkes and finally sends the …","","All the splatted components that have been appended to …","If true, all timestamp data associated with this message …","All the different timestamps for this message.","","","","","","","","","","","","","","","","Appends a component collection to the current message.","Appends a splatted component to the current message.","Helper to make it easier to optionally append splatted …","Appends a given <code>timeline</code>/<code>time</code> pair to the current message.","Specifies whether the current message is timeless.","Appends a given <code>timepoint</code> to the current message.","","","","","","","","","Send it to the web viewer over WebSockets","","","","","","","","","","","","","","Send log data to a remote server.","","","","","","","","","","","","","If the tcp session is disconnected, allow it to quit early …","Wait until all logged data have been sent to the remove …","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,68,0,2,68,0,0,0,27,0,0,0,0,27,16,0,0,68,25,25,15,15,68,0,25,25,25,25,45,30,122,0,25,0,0,58,0,0,0,17,2,2,0,0,0,0,122,122,0,0,0,0,53,53,53,57,15,53,53,53,122,0,32,0,0,57,0,0,16,0,0,0,58,0,32,11,0,0,65,0,0,0,0,0,122,0,0,0,0,0,0,0,0,65,0,0,0,0,0,25,25,25,25,27,32,0,0,0,0,56,21,21,21,21,56,21,21,56,17,18,19,66,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,2,3,2,2,3,2,14,97,6,38,8,9,10,39,40,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,64,6,38,8,9,10,39,40,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,64,2,2,2,49,51,49,17,53,31,53,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,29,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,49,51,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,44,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,30,39,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,8,11,12,59,17,60,49,51,3,2,63,64,65,66,67,10,62,28,6,38,8,9,10,39,40,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,64,8,10,55,39,12,45,30,33,34,35,63,64,66,0,26,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,49,51,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,40,58,40,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,45,60,26,27,30,31,32,33,34,35,49,51,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,124,62,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,21,60,25,26,27,28,29,30,31,32,33,34,35,49,49,51,3,2,2,63,64,65,66,67,8,8,9,9,10,10,55,55,39,39,40,40,56,56,57,57,53,53,58,58,11,11,12,12,13,13,59,59,15,15,17,17,60,60,26,26,27,27,29,29,49,49,51,51,3,3,2,2,63,63,64,64,65,65,66,66,67,67,0,131,62,6,38,8,9,10,55,39,40,56,56,57,53,53,58,11,11,12,13,41,42,43,59,14,44,15,15,16,17,17,18,19,45,20,21,22,23,24,60,25,26,26,27,28,29,30,31,32,33,33,34,34,35,35,61,62,62,49,49,51,51,3,2,63,64,65,66,66,67,67,68,31,31,3,65,44,65,3,63,40,31,6,38,38,8,9,9,9,10,55,55,39,39,40,56,57,53,58,11,12,13,13,41,41,42,42,43,43,43,59,14,44,15,16,17,18,18,19,19,45,45,20,20,21,22,22,23,24,60,25,26,27,28,29,30,31,32,33,33,33,34,34,34,35,61,62,49,49,49,51,51,51,51,51,51,3,3,3,2,2,2,2,63,64,64,65,66,67,68,68,68,68,29,56,65,51,64,3,58,40,3,40,53,66,65,40,3,66,21,49,132,28,64,8,11,12,59,15,17,60,49,51,3,2,63,64,65,66,67,0,0,40,97,8,11,12,59,15,17,60,49,49,51,51,3,2,63,64,65,66,67,51,51,21,26,132,28,68,10,31,43,33,34,14,55,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,64,124,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,64,64,3,51,51,64,97,51,132,28,11,11,2,64,132,28,51,64,51,55,55,10,51,51,3,29,63,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,132,28,28,16,14,44,28,62,0,131,6,38,8,9,39,40,11,12,13,41,42,16,17,18,19,45,20,21,22,23,24,28,29,32,33,34,61,63,26,61,63,26,3,62,61,62,124,61,62,2,38,53,18,19,45,29,34,61,62,49,51,63,6,38,8,9,10,39,40,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,64,30,61,61,30,63,63,14,3,132,28,14,6,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,51,30,8,11,12,59,17,60,49,51,3,2,2,63,64,65,66,67,51,14,31,59,17,60,66,97,64,31,31,40,51,30,40,14,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,23,97,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,45,60,26,27,30,31,32,33,34,35,49,51,3,2,63,64,65,66,67,68,0,132,28,28,49,17,53,26,11,124,3,3,2,2,2,2,28,62,64,124,64,124,64,9,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,40,56,53,11,15,17,26,33,34,35,62,49,51,66,67,97,21,44,30,62,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,30,31,32,33,34,35,61,61,61,61,62,62,49,51,3,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,63,63,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,67,26,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,40,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,61,61,61,6,0,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,35,45,21,26,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,6,38,8,9,10,55,39,40,56,57,53,58,11,12,13,41,42,43,59,14,44,15,16,17,18,19,45,20,21,22,23,24,60,25,26,27,28,29,30,31,32,33,34,35,61,62,49,51,3,2,63,64,65,66,67,68,33,34,35,38,18,19,45,24,33,34,35,38,18,19,45,24,34,35,38,19,45,24,0,0,0,0,0,122,122,122,0,0,122,122,124,122,124,122,124,122,0,124,122,124,122,124,122,124,122,124,122,124,122,124,122,124,122,122,124,122,122,124,122,124,124,122,124,124,122,124,122,124,124,124,122,124,122,122,124,122,124,122,124,122,124,124,124,122,124,122,124,122,124,122,124,122,124,122,124,122,124,122,124,124,124,124,124,124,124,122,124,122,128,128,0,0,128,97,97,128,97,128,97,128,97,128,97,128,97,128,97,97,128,97,128,97,128,97,97,128,97,97,128,97,97,97,128,97,97,128,97,128,97,97,97,128,97,128,97,97,128,97,128,97,97,97,128,97,128,97,128,97,97,97,97,97,97,97,128,97,128,97,128,97,128,97,128,97,128,97,128,97,128,97,128,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[2,2],[[3,4]],[[2,5]],[[2,2]],[[3,4]],[[2,2]],0,0,[[[7,[6]]],[[7,[6]]]],[[],7],[[],[[7,[8]]]],[[],[[7,[9]]]],[[[7,[10]]],[[7,[10]]]],[[],7],[[],7],[[],[[7,[11]]]],[[],[[7,[12]]]],[[],[[7,[13]]]],[[],7],[[],7],[[],7],[[],7],[[[7,[14]]],[[7,[14]]]],[[],7],[[[7,[15]]],[[7,[15]]]],[[[7,[16]]],[[7,[16]]]],[[],[[7,[17]]]],[[[7,[18]]],[[7,[18]]]],[[[7,[19]]],[[7,[19]]]],[[],7],[[],[[7,[20]]]],[[[7,[21]]],[[7,[21]]]],[[],[[7,[22]]]],[[[7,[23]]],[[7,[23]]]],[[[7,[24]]],[[7,[24]]]],[[],7],[[[7,[25]]],[[7,[25]]]],[[[7,[26]]],[[7,[26]]]],[[[7,[27]]],[[7,[27]]]],[[[7,[28]]],[[7,[28]]]],[[[7,[29]]],[[7,[29]]]],[[[7,[30]]],[[7,[30]]]],[[[7,[31]]],[[7,[31]]]],[[[7,[32]]],[[7,[32]]]],[[],[[7,[33]]]],[[],[[7,[34]]]],[[],[[7,[35]]]],[[],7],[6,[[37,[36]]]],[38,[[37,[36]]]],[8,[[37,[36]]]],[9,[[37,[36]]]],[10,[[37,[36]]]],[39,[[37,[36]]]],[40,[[37,[36]]]],[11,[[37,[36]]]],[12,[[37,[36]]]],[13,[[37,[36]]]],[41,[[37,[36]]]],[42,[[37,[36]]]],[43,[[37,[36]]]],[[],[[37,[36]]]],[14,[[37,[36]]]],[44,[[37,[36]]]],[15,[[37,[36]]]],[16,[[37,[36]]]],[17,[[37,[36]]]],[18,[[37,[36]]]],[19,[[37,[36]]]],[45,[[37,[36]]]],[20,[[37,[36]]]],[21,[[37,[36]]]],[22,[[37,[36]]]],[23,[[37,[36]]]],[24,[[37,[36]]]],[[],[[37,[36]]]],[25,[[37,[36]]]],[26,[[37,[36]]]],[27,[[37,[36]]]],[28,[[37,[36]]]],[29,[[37,[36]]]],[30,[[37,[36]]]],[31,[[37,[36]]]],[32,[[37,[36]]]],[33,[[37,[36]]]],[34,[[37,[36]]]],[35,[[37,[36]]]],[[],[[37,[36]]]],[2,46],[2,47],[2,48],[49,50],[51],[49,50],[17,52],[53],[31,[[7,[46]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[30,54],0,[6,6],[38,38],[8,8],[9,9],[10,10],[55,55],[39,39],[40,40],[56,56],[57,57],[53,53],[58,58],[11,11],[12,12],[13,13],[41,41],[42,42],[43,43],[59,59],[14,14],[44,44],[15,15],[16,16],[17,17],[18,18],[19,19],[45,45],[20,20],[21,21],[22,22],[23,23],[60,60],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[61,61],[62,62],[49,49],[51,51],[3,3],[2,2],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,8],69],[[11,11],69],[[12,12],69],[[59,59],69],[[17,17],69],[[60,60],69],[[49,49],69],[[51,51],69],[[3,3],69],[[2,2],69],[[63,63],69],[[64,64],69],[[65,65],69],[[66,66],69],[[67,67],69],0,0,0,[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[[],70],[61,70],[[],70],[[],8],[[],10],[[],55],[[],39],[[],12],[[],45],[[],30],[[],33],[[],34],[[],35],[[],63],[[],64],[[],66],[[],71],[72,26],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[49,50],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[40,74],[58,50],[40,74],[[],[[37,[6]]]],[[],[[37,[38]]]],[[],[[37,[8]]]],[[],[[37,[9]]]],[[],[[37,[10]]]],[[],[[37,[55]]]],[[],[[37,[39]]]],[[],[[37,[40]]]],[[],[[37,[56]]]],[[],[[37,[57]]]],[[],[[37,[53]]]],[[],[[37,[58]]]],[[],[[37,[11]]]],[[],[[37,[12]]]],[[],[[37,[13]]]],[[],[[37,[41]]]],[[],[[37,[42]]]],[[],[[37,[43]]]],[[],[[37,[59]]]],[[],[[37,[14]]]],[[],[[37,[44]]]],[[],[[37,[15]]]],[[],[[37,[16]]]],[[],[[37,[17]]]],[[],[[37,[45]]]],[[],[[37,[60]]]],[[],[[37,[26]]]],[[],[[37,[27]]]],[[],[[37,[30]]]],[[],[[37,[31]]]],[[],[[37,[32]]]],[[],[[37,[33]]]],[[],[[37,[34]]]],[[],[[37,[35]]]],[[],[[37,[49]]]],[[],[[37,[51]]]],[[],[[37,[3]]]],[[],[[37,[2]]]],[[],[[37,[63]]]],[[],[[37,[64]]]],[[],[[37,[65]]]],[[],[[37,[66]]]],[[],[[37,[67]]]],[[],[[37,[68]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],[73],0,0,[[6,6],75],[[38,38],75],[[8,8],75],[[9,9],75],[[10,10],75],[[55,55],75],[[39,39],75],[[40,40],75],[[56,56],75],[[57,57],75],[[53,53],75],[[58,58],75],[[11,11],75],[[12,12],75],[[13,13],75],[[41,41],75],[[42,42],75],[[43,43],75],[[59,59],75],[[14,14],75],[[44,44],75],[[15,15],75],[[16,16],75],[[17,17],75],[[18,18],75],[[19,19],75],[[45,45],75],[[21,21],75],[[60,60],75],[[25,25],75],[[26,26],75],[[27,27],75],[[28,28],75],[[29,29],75],[[30,30],75],[[31,31],75],[[32,32],75],[[33,33],75],[[34,34],75],[[35,35],75],[[49,50],75],[[49,49],75],[[51,51],75],[[3,3],75],[[2,2],75],[[2,5],75],[[63,63],75],[[64,64],75],[[65,65],75],[[66,66],75],[[67,67],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],[[],75],0,[[],76],[[62,49],[[7,[73]]]],[[6,77],[[37,[78]]]],[[38,77],[[37,[78]]]],[[8,77],[[37,[78]]]],[[9,77],[[37,[78]]]],[[10,77],[[37,[78]]]],[[55,77],[[37,[78]]]],[[39,77],[[37,[78]]]],[[40,77],[[37,[78]]]],[[56,77],[[37,[78]]]],[[56,77],[[37,[78]]]],[[57,77],[[37,[78]]]],[[53,77],[[37,[78]]]],[[53,77],[[37,[78]]]],[[58,77],[[37,[78]]]],[[11,77],[[37,[78]]]],[[11,77],[[37,[78]]]],[[12,77],[[37,[78]]]],[[13,77],[[37,[78]]]],[[41,77],[[37,[78]]]],[[42,77],[[37,[78]]]],[[43,77],[[37,[78]]]],[[59,77],[[37,[78]]]],[[14,77],[[37,[78]]]],[[44,77],[[37,[78]]]],[[15,77],[[37,[78]]]],[[15,77],[[37,[78]]]],[[16,77],[[37,[78]]]],[[17,77],[[37,[78]]]],[[17,77],[[37,[78]]]],[[18,77],[[37,[78]]]],[[19,77],[[37,[78]]]],[[45,77],[[37,[78]]]],[[20,77],[[37,[78]]]],[[21,77],[[37,[78]]]],[[22,77],[[37,[78]]]],[[23,77],[[37,[78]]]],[[24,77],[[37,[78]]]],[[60,77],[[37,[78]]]],[[25,77],[[37,[78]]]],[[26,77],[[37,[78]]]],[[26,77],[[37,[78]]]],[[27,77],[[37,[78]]]],[[28,77],[[37,[78]]]],[[29,77],[[37,[78]]]],[[30,77],[[37,[78]]]],[[31,77],[[37,[78]]]],[[32,77],[[37,[78]]]],[[33,77],[[37,[78]]]],[[33,77],[[37,[78]]]],[[34,77],[[37,[78]]]],[[34,77],[[37,[78]]]],[[35,77],[[37,[78]]]],[[35,77],[[37,[78]]]],[[61,77],[[37,[78]]]],[[62,77],[[37,[78]]]],[[62,77],[[37,[78]]]],[[49,77],[[37,[78]]]],[[49,77],[[37,[78]]]],[[51,77],[[37,[78]]]],[[51,77],[[37,[78]]]],[[3,77],[[37,[78]]]],[[2,77],[[37,[78]]]],[[63,77],[[37,[78]]]],[[64,77],[[37,[78]]]],[[65,77],[[37,[78]]]],[[66,77],[[37,[78]]]],[[66,77],[[37,[78]]]],[[67,77],[[37,[78]]]],[[67,77],[[37,[78]]]],[[68,77],[[37,[78]]]],[31,[[7,[46]]]],[31,33],[3,74],[[65,2],74],0,[[65,79],74],[[3,50],74],[[63,79],74],[40,[[7,[53]]]],[31,[[7,[46]]]],[[]],[[]],[80,38],[[]],[[]],[81,9],[[],9],[[]],[[]],[82,55],[[]],[[[85,[83,84]]],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,13],[[]],[[[85,[84]]],41],[[]],[[]],[[[85,[84]]],42],[[],43],[[]],[86,43],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[]],[[],19],[[]],[[]],[87,45],[[]],[46,20],[[]],[47,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[88,33],[[]],[[]],[80,34],[[],34],[[]],[[]],[[]],[50,49],[[]],[74,49],[89,51],[74,51],[50,51],[[],51],[[]],[[[85,[90,84]]],51],[2,3],[5,3],[[]],[[]],[4,2],[3,2],[48,2],[[]],[[]],[[],64],[[]],[[]],[[]],[91,68],[92,68],[93,68],[[]],[[[94,[74]]],29],[73,56],[48,[[7,[65]]]],[[],51],[[],64],[48,3],[75,58],[40,86],[47,3],[50,[[37,[40]]]],[50,[[37,[53]]]],[50,[[37,[66]]]],[72,[[7,[65]]]],[[53,58],40],[48,3],[95,66],[[46,46,46,46],21],[49,50],[[],[[7,[96]]]],[28,[[7,[96]]]],[[64,63],[[7,[2]]]],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],0,[[],[[98,[97]]]],[40,[[7,[58]]]],0,[8],[11],[12],[59],[15],[17],[60],[49],[49,72],[51],[51,99],[3],[2],[63],[64],[65],[66],[67],0,[51,72],[21,46],[72,26],[[],60],[28,60],[68,17],0,0,[43],[33],[34],0,0,[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[64,63,2],[[7,[2]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64],[64],[3,75],[[51,51],75],[[51,51],75],[64,75],0,[51,75],[[],75],[28,75],[11,75],[11,75],[2,75],[64,75],[[],75],[28,75],[51,100],[64,101],[[51,51],51],0,0,0,[51,[[7,[90]]]],[51,73],[[[102,[3]],46],3],0,[[],63],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[28,27],0,[16,59],0,0,0,0,0,[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[61,49],[63,103],0,0,0,[[72,74],26],[3,48],[62,73],[[61,73],[[7,[73]]]],[[62,73],[[7,[73]]]],0,[61,73],[62,73],[2],[[46,46,46],38],[[57,56],53],[[46,46],18],[[46,46,46],19],[[46,46,46,46],45],[[[94,[74]],[7,[74]]],29],[[46,46,46],34],[[49,[105,[104]]],61],[[17,51,64,[85,[61,84]]],62],[50,49],[[[85,[90,84]]],51],[[[94,[103]],65],63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,30],[[49,70],61],[[49,106],61],[54,30],[[[94,[103]]],63],[[[94,[103]]],63],0,[[],3],[[],73],[28,73],[14,73],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,[[7,[51]]]],[30,54],[[8,8],[[7,[69]]]],[[11,11],[[7,[69]]]],[[12,12],[[7,[69]]]],[[59,59],[[7,[69]]]],[[17,17],[[7,[69]]]],[[60,60],[[7,[69]]]],[[49,49],[[7,[69]]]],[[51,51],[[7,[69]]]],[[3,3],[[7,[69]]]],[[2,5],[[7,[69]]]],[[2,2],[[7,[69]]]],[[63,63],[[7,[69]]]],[[64,64],[[7,[69]]]],[[65,65],[[7,[69]]]],[[66,66],[[7,[69]]]],[[67,67],[[7,[69]]]],0,0,[31,88],[[],59],[[],17],[[],60],[[],66],0,[[64,63],[[7,[2]]]],[31,[[7,[88]]]],0,[40,[[7,[53]]]],[[],51],0,[40,[[37,[74]]]],[14,[[37,[107]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[6,37],[38,37],[8,37],[9,37],[10,37],[55,37],[39,37],[40,37],[56,37],[57,37],[53,37],[58,37],[11,37],[12,37],[13,37],[41,37],[42,37],[43,37],[59,37],[14,37],[44,37],[15,37],[16,37],[17,37],[45,37],[60,37],[26,37],[27,37],[30,37],[31,37],[32,37],[33,37],[34,37],[35,37],[49,37],[51,37],[3,37],[2,37],[63,37],[64,37],[65,37],[66,37],[67,37],[68,37],0,[[]],[28],0,[49,50],[17,74],0,0,[11,[[7,[11]]]],0,[[3,3],4],[[3,4]],[[2,2]],[[2,5]],[[2,2]],[[],2],0,0,[[],64],0,[64,101],0,[64,101],[9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,86],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],0,[21],0,0,[62,[[37,[108]]]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[109,[[37,[44,110]]]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[[112,[[111,[104]]]]],[[37,[28]]]],[[[112,[[111,[113]]]]],[[37,[28]]]],[[[112,[[114,[48]]]]],[[37,[28]]]],[[[112,[[114,[115]]]]],[[37,[28]]]],[[],37],[[[112,[[114,[116]]]]],[[37,[28]]]],[[[112,[[114,[104]]]]],[[37,[28]]]],[[[112,[[114,[72]]]]],[[37,[28]]]],[[[112,[[111,[115]]]]],[[37,[28]]]],[[[112,[[114,[113]]]]],[[37,[28]]]],[[[112,[[111,[47]]]]],[[37,[28]]]],[[[112,[[111,[81]]]]],[[37,[28]]]],[[[112,[[114,[47]]]]],[[37,[28]]]],[[[112,[[114,[117]]]]],[[37,[28]]]],[[[112,[[111,[46]]]]],[[37,[28]]]],[[[112,[[111,[116]]]]],[[37,[28]]]],[[[112,[[114,[81]]]]],[[37,[28]]]],[[[112,[[111,[72]]]]],[[37,[28]]]],[[[112,[[111,[48]]]]],[[37,[28]]]],[[[112,[[114,[46]]]]],[[37,[28]]]],[[[112,[[111,[117]]]]],[[37,[28]]]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],[[37,[61,108]]]],[[],37],[[[85,[84]]],[[37,[61,108]]]],[85,[[37,[61,108]]]],[[],37],[93,[[37,[62,108]]]],[[],37],[[],37],[[],37],[118,[[37,[3]]]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[63,65],0,[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],119],[[],67],[72,26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[7,[53]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[61,[[120,[106,84]]]],[61,105],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,46],0,[21,46],[72,26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,46],[34,46],[35,46],0,0,0,0,0,[33,46],[34,46],[35,46],0,0,0,0,0,[34,46],[35,46],0,0,0,0,0,0,0,0,[[],[[98,[97]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[121,[[37,[61,108]]]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[73],[73],[73],[73],[[]],[[]],[73],[73],0,[[122,77],123],[[122,77],123],[[]],[[]],[108,122],[[],73],[[],73],0,[[]],[[]],[124,[[37,[122]]]],[[],7],[[],7],[[]],[[]],0,[[[94,[51]]],124],[[]],[[]],[[]],[[]],[125],[[]],[[]],[[]],[[]],[[124,97],[[37,[122]]]],[122,[[7,[126]]]],0,0,0,[[],74],[[],37],[[],37],[[],37],[[],37],[[],119],[[],119],[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[]],[[124,121],[[37,[124,122]]]],[[124,127],[[37,[124,122]]]],[[124,[7,[127]]],[[37,[124,122]]]],[[124,63,[94,[2]]],124],[[124,75],124],[[124,64],124],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[97,71]],[[],97],[[],128],[73],[73],[73],[73],[97],[[]],[[]],[97,[[85,[68]]]],[73],[73],[97],[97],[[]],[[]],0,[[],73],[[],73],[[]],[[]],[97,75],0,[[],7],[[],7],[[]],[[]],[[],97],[[]],[[]],[[]],[[]],[97,[[7,[66]]]],0,[[]],[[]],[[]],[[]],[[97,68]],[[128,68]],[[97,64,129]],0,[97],[[97,67,75]],[[97,66]],0,[[],37],[[],37],[[],37],[[],37],[[],119],[[],119],[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[[85,[68]]],130]],"p":[[3,"Private"],[3,"TimeInt"],[3,"Time"],[3,"Duration"],[3,"TimeReal"],[3,"Arrow3D"],[4,"Option"],[3,"ClassId"],[3,"ColorRGBA"],[3,"AnnotationInfo"],[3,"InstanceKey"],[3,"KeypointId"],[3,"Label"],[3,"RawMesh3D"],[4,"MeshFormat"],[4,"Mesh3D"],[3,"MsgId"],[3,"Point2D"],[3,"Point3D"],[3,"Radius"],[4,"Rect2D"],[3,"Scalar"],[3,"ScalarPlotProps"],[3,"Size3D"],[4,"TensorData"],[3,"TensorDimension"],[4,"TensorDataMeaning"],[3,"Tensor"],[3,"TextEntry"],[3,"Rigid3"],[3,"Pinhole"],[4,"Transform"],[3,"Vec2D"],[3,"Vec3D"],[3,"Vec4D"],[4,"Error"],[4,"Result"],[3,"Box3D"],[3,"AnnotationContext"],[3,"ViewCoordinates"],[3,"LineStrip2D"],[3,"LineStrip3D"],[3,"Mat3x3"],[3,"EncodedMesh3D"],[3,"Quaternion"],[15,"f32"],[15,"f64"],[15,"i64"],[3,"ComponentName"],[15,"str"],[3,"EntityPath"],[15,"u128"],[3,"SignedAxis3"],[3,"IsoTransform"],[3,"ClassDescription"],[4,"Axis3"],[4,"Sign"],[4,"Handedness"],[3,"MeshId"],[3,"TensorId"],[3,"ComponentBundle"],[3,"MsgBundle"],[3,"Timeline"],[3,"TimePoint"],[4,"TimeType"],[3,"RecordingId"],[3,"ApplicationId"],[4,"LogMsg"],[4,"Ordering"],[4,"DataType"],[4,"SocketAddr"],[15,"u64"],[15,"usize"],[3,"String"],[15,"bool"],[3,"Field"],[3,"Formatter"],[3,"Error"],[3,"TimeRange"],[3,"Vec3"],[15,"u32"],[3,"ClassDescriptionArrow"],[3,"ClassMapElemArrow"],[3,"Global"],[3,"Vec"],[3,"Mat3"],[3,"Quat"],[3,"Vec2"],[3,"EntityPathImpl"],[4,"EntityPathPart"],[3,"EntityPathOpMsg"],[3,"BeginRecordingMsg"],[3,"ArrowMsg"],[8,"Into"],[3,"Uuid"],[4,"TensorElement"],[3,"Session"],[3,"MutexGuard"],[3,"EntityPathHash"],[8,"Iterator"],[8,"ExactSizeIterator"],[3,"RangeInclusive"],[3,"TimelineName"],[15,"i32"],[3,"ListArray"],[8,"Array"],[4,"RawMeshError"],[4,"MsgBundleError"],[3,"EncodedMesh3DArrow"],[4,"FieldError"],[3,"ViewRepr"],[3,"ArrayBase"],[15,"i16"],[3,"OwnedRepr"],[15,"u16"],[15,"u8"],[15,"i8"],[3,"SystemTime"],[3,"TypeId"],[3,"Box"],[8,"IntoIterator"],[4,"MsgSenderError"],[6,"Result"],[3,"MsgSender"],[3,"Demand"],[8,"Error"],[8,"SerializableComponent"],[4,"Sender"],[4,"PathOp"],[6,"Result"],[8,"Component"],[8,"TensorTrait"]]},\
"run_wasm":{"doc":"Intended to be used as an xtask in order to make it …","t":[5],"n":["main"],"q":["run_wasm"],"d":[""],"i":[0],"f":[[[]]],"p":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
